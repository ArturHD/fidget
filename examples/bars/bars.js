/* Generated by the Nim Compiler v1.0.99 */
/*   (c) 2019 Andreas Rumpf */

var framePtr = null;
var excHandler = 0;
var lastJSError = null;
if (typeof Int8Array === 'undefined') Int8Array = Array;
if (typeof Int16Array === 'undefined') Int16Array = Array;
if (typeof Int32Array === 'undefined') Int32Array = Array;
if (typeof Uint8Array === 'undefined') Uint8Array = Array;
if (typeof Uint16Array === 'undefined') Uint16Array = Array;
if (typeof Uint32Array === 'undefined') Uint32Array = Array;
if (typeof Float32Array === 'undefined') Float32Array = Array;
if (typeof Float64Array === 'undefined') Float64Array = Array;
var NTI192275 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI103907 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI262033 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI321722 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI46430 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI46452 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI46454 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI145632 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI148247 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI308251 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI308205 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI43032 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI305690 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI308237 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI308230 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI308209 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI308536 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI43026 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI316878 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI316898 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI316895 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI316892 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI262003 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI311053 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI311050 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI311047 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI43028 = {size: 0,kind: 37,base: null,node: null,finalizer: null};
var NTI301101 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI46458 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI46446 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI46442 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI46444 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI91017 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI239065 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI239062 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI239059 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI46462 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI43006 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI62156 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI46408 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI46514 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI43016 = {size: 0,kind: 40,base: null,node: null,finalizer: null};
var NTI43040 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI43042 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI46508 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI46426 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI46428 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI46450 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NNI46450 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI46450.node = NNI46450;
var NNI46428 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI46428.node = NNI46428;
NTI46508.base = NTI46426;
NTI46514.base = NTI46426;
var NNI46426 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI46508, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI43042, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI43040, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI43040, name: "trace", sons: null}, 
{kind: 1, offset: "raiseId", len: 0, typ: NTI43016, name: "raiseId", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI46514, name: "up", sons: null}]};
NTI46426.node = NNI46426;
var NNI46408 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI46408.node = NNI46408;
NTI46426.base = NTI46408;
NTI46428.base = NTI46426;
NTI46450.base = NTI46428;
var NNI62156 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI43042, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI43006, name: "Field1", sons: null}]};
NTI62156.node = NNI62156;
var NNI46462 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI46462.node = NNI46462;
NTI46462.base = NTI46428;
var NNI239065 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI91017, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI43040, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI43040, name: "Field2", sons: null}]};
NTI239065.node = NNI239065;
NTI239062.base = NTI239065;
var NNI239059 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI239062, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI43006, name: "counter", sons: null}]};
NTI239059.node = NNI239059;
var NNI46444 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI46444.node = NNI46444;
var NNI46442 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI46442.node = NNI46442;
NTI46442.base = NTI46428;
NTI46444.base = NTI46442;
var NNI46446 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI46446.node = NNI46446;
NTI46446.base = NTI46442;
var NNI46458 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI46458.node = NNI46458;
NTI46458.base = NTI46428;
var NNI301101 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "x", len: 0, typ: NTI43028, name: "x", sons: null}, 
{kind: 1, offset: "y", len: 0, typ: NTI43028, name: "y", sons: null}]};
NTI301101.node = NNI301101;
var NNI262003 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "r", len: 0, typ: NTI43028, name: "r", sons: null}, 
{kind: 1, offset: "g", len: 0, typ: NTI43028, name: "g", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI43028, name: "b", sons: null}, 
{kind: 1, offset: "a", len: 0, typ: NTI43028, name: "a", sons: null}]};
NTI262003.node = NNI262003;
var NNI311053 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI91017, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI262003, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI43040, name: "Field2", sons: null}]};
NTI311053.node = NNI311053;
NTI311050.base = NTI311053;
var NNI311047 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI311050, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI43006, name: "counter", sons: null}]};
NTI311047.node = NNI311047;
var NNI316878 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI43026, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI43026, name: "Field1", sons: null}]};
NTI316878.node = NNI316878;
var NNI316898 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI91017, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI43040, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI316878, name: "Field2", sons: null}]};
NTI316898.node = NNI316898;
NTI316895.base = NTI316898;
var NNI316892 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI316895, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI43006, name: "counter", sons: null}]};
NTI316892.node = NNI316892;
NTI308237.base = NTI308209;
var NNI305690 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "x", len: 0, typ: NTI43028, name: "x", sons: null}, 
{kind: 1, offset: "y", len: 0, typ: NTI43028, name: "y", sons: null}, 
{kind: 1, offset: "w", len: 0, typ: NTI43028, name: "w", sons: null}, 
{kind: 1, offset: "h", len: 0, typ: NTI43028, name: "h", sons: null}]};
NTI305690.node = NNI305690;
var NNI308205 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "fontFamily", len: 0, typ: NTI43040, name: "fontFamily", sons: null}, 
{kind: 1, offset: "fontSize", len: 0, typ: NTI43026, name: "fontSize", sons: null}, 
{kind: 1, offset: "fontWeight", len: 0, typ: NTI43026, name: "fontWeight", sons: null}, 
{kind: 1, offset: "lineHeight", len: 0, typ: NTI43026, name: "lineHeight", sons: null}, 
{kind: 1, offset: "textAlignHorizontal", len: 0, typ: NTI43006, name: "textAlignHorizontal", sons: null}, 
{kind: 1, offset: "textAlignVertical", len: 0, typ: NTI43006, name: "textAlignVertical", sons: null}]};
NTI308205.node = NNI308205;
var NNI308251 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI43026, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI43026, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI43026, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI43026, name: "Field3", sons: null}]};
NTI308251.node = NNI308251;
var NNI308230 = {kind: 2, len: 24, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "id", len: 0, typ: NTI43040, name: "id", sons: null}, 
{kind: 1, offset: "idPath", len: 0, typ: NTI43040, name: "idPath", sons: null}, 
{kind: 1, offset: "kind", len: 0, typ: NTI43040, name: "kind", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI43040, name: "text", sons: null}, 
{kind: 1, offset: "placeholder", len: 0, typ: NTI43040, name: "placeholder", sons: null}, 
{kind: 1, offset: "code", len: 0, typ: NTI43040, name: "code", sons: null}, 
{kind: 1, offset: "kids", len: 0, typ: NTI308237, name: "kids", sons: null}, 
{kind: 1, offset: "box", len: 0, typ: NTI305690, name: "box", sons: null}, 
{kind: 1, offset: "rotation", len: 0, typ: NTI43026, name: "rotation", sons: null}, 
{kind: 1, offset: "screenBox", len: 0, typ: NTI305690, name: "screenBox", sons: null}, 
{kind: 1, offset: "fill", len: 0, typ: NTI262003, name: "fill", sons: null}, 
{kind: 1, offset: "transparency", len: 0, typ: NTI43026, name: "transparency", sons: null}, 
{kind: 1, offset: "strokeWeight", len: 0, typ: NTI43026, name: "strokeWeight", sons: null}, 
{kind: 1, offset: "stroke", len: 0, typ: NTI262003, name: "stroke", sons: null}, 
{kind: 1, offset: "zLevel", len: 0, typ: NTI43006, name: "zLevel", sons: null}, 
{kind: 1, offset: "resizeDone", len: 0, typ: NTI43032, name: "resizeDone", sons: null}, 
{kind: 1, offset: "htmlDone", len: 0, typ: NTI43032, name: "htmlDone", sons: null}, 
{kind: 1, offset: "textStyle", len: 0, typ: NTI308205, name: "textStyle", sons: null}, 
{kind: 1, offset: "imageName", len: 0, typ: NTI43040, name: "imageName", sons: null}, 
{kind: 1, offset: "cornerRadius", len: 0, typ: NTI308251, name: "cornerRadius", sons: null}, 
{kind: 1, offset: "wasDrawn", len: 0, typ: NTI43032, name: "wasDrawn", sons: null}, 
{kind: 1, offset: "editableText", len: 0, typ: NTI43032, name: "editableText", sons: null}, 
{kind: 1, offset: "multiline", len: 0, typ: NTI43032, name: "multiline", sons: null}, 
{kind: 1, offset: "drawable", len: 0, typ: NTI43032, name: "drawable", sons: null}]};
NTI308230.node = NNI308230;
NTI308209.base = NTI308230;
NTI308536.base = NTI308209;
var NNI148247 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI145632, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI43006, name: "b", sons: null}]};
NTI148247.node = NNI148247;
var NNI46454 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI46454.node = NNI46454;
var NNI46452 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI46452.node = NNI46452;
var NNI46430 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI46430.node = NNI46430;
NTI46430.base = NTI46426;
NTI46452.base = NTI46430;
NTI46454.base = NTI46452;
var NNI321722 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI43026, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI43026, name: "Field1", sons: null}]};
NTI321722.node = NNI321722;
var NNI262033 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI262033.node = NNI262033;
NTI262033.base = NTI46426;
var NNI103907 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI43006, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI43006, name: "b", sons: null}]};
NTI103907.node = NNI103907;
NTI192275.base = NTI43040;

function setConstr() {
		    var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

	
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_65827, src_65828, ti_65829) {
	var result_66019 = null;

		switch (ti_65829.kind) {
		case 21:
		case 22:
		case 23:
		case 5:
			if (!(is_fat_pointer_65801(ti_65829))) {
			result_66019 = src_65828;
			}
			else {
				result_66019 = [src_65828[0], src_65828[1]];
			}
			
			break;
		case 19:
			      if (dest_65827 === null || dest_65827 === undefined) {
        dest_65827 = {};
      }
      else {
        for (var key in dest_65827) { delete dest_65827[key]; }
      }
      for (var key in src_65828) { dest_65827[key] = src_65828[key]; }
      result_66019 = dest_65827;
    
			break;
		case 18:
		case 17:
			if (!((ti_65829.base == null))) {
			result_66019 = nimCopy(dest_65827, src_65828, ti_65829.base);
			}
			else {
			if ((ti_65829.kind == 17)) {
			result_66019 = (dest_65827 === null || dest_65827 === undefined) ? {m_type: ti_65829} : dest_65827;
			}
			else {
				result_66019 = (dest_65827 === null || dest_65827 === undefined) ? {} : dest_65827;
			}
			}
			nimCopyAux(result_66019, src_65828, ti_65829.node);
			break;
		case 24:
		case 4:
		case 27:
		case 16:
			      if (src_65828 === null) {
        result_66019 = null;
      }
      else {
        if (dest_65827 === null || dest_65827 === undefined) {
          dest_65827 = new Array(src_65828.length);
        }
        else {
          dest_65827.length = src_65828.length;
        }
        result_66019 = dest_65827;
        for (var i = 0; i < src_65828.length; ++i) {
          result_66019[i] = nimCopy(result_66019[i], src_65828[i], ti_65829.base);
        }
      }
    
			break;
		case 28:
			      if (src_65828 !== null) {
        result_66019 = src_65828.slice(0);
      }
    
			break;
		default: 
			result_66019 = src_65828;
			break;
		}

	return result_66019;

}

function makeNimstrLit(c_64270) {
		  var ln = c_64270.length;
  var result = new Array(ln);
  for (var i = 0; i < ln; ++i) {
    result[i] = c_64270.charCodeAt(i);
  }
  return result;
  

	
}

function arrayConstr(len_66086, value_66087, typ_66088) {
		    var result = new Array(len_66086);
    for (var i = 0; i < len_66086; ++i) result[i] = nimCopy(null, value_66087, typ_66088);
    return result;
  

	
}

function cstrToNimstr(c_64287) {
		  var ln = c_64287.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_64287.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_64287.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

	
}

function toJSStr(s_64304) {
										var Tmp5;
						var Tmp7;

	var result_64305 = null;

		var res_64363 = new_seq_64336((s_64304 != null ? s_64304.length : 0));
		var i_64365 = 0;
		var j_64367 = 0;
		L1: do {
				L2: while (true) {
				if (!(i_64365 < (s_64304 != null ? s_64304.length : 0))) break L2;
					var c_64368 = s_64304[i_64365];
					if ((c_64368 < 128)) {
					res_64363[j_64367] = String.fromCharCode(c_64368);
					i_64365 += 1;
					}
					else {
						var helper_64391 = new_seq_64336(0);
						L3: do {
								L4: while (true) {
								if (!true) break L4;
									var code_64392 = c_64368.toString(16);
									if (((code_64392 != null ? code_64392.length : 0) == 1)) {
									if (helper_64391 != null) { helper_64391.push("%0"); } else { helper_64391 = ["%0"]; };
									}
									else {
									if (helper_64391 != null) { helper_64391.push("%"); } else { helper_64391 = ["%"]; };
									}
									
									if (helper_64391 != null) { helper_64391.push(code_64392); } else { helper_64391 = [code_64392]; };
									i_64365 += 1;
										if (((s_64304 != null ? s_64304.length : 0) <= i_64365)) Tmp5 = true; else {											Tmp5 = (s_64304[i_64365] < 128);										}									if (Tmp5) {
									break L3;
									}
									
									c_64368 = s_64304[i_64365];
								}
						} while(false);
++excHandler;
						Tmp7 = framePtr;
						try {
						res_64363[j_64367] = decodeURIComponent(helper_64391.join(""));
--excHandler;
} catch (EXC) {
 var prevJSError = lastJSError;
 lastJSError = EXC;
 --excHandler;
						framePtr = Tmp7;
						res_64363[j_64367] = helper_64391.join("");
						lastJSError = prevJSError;
						} finally {
						framePtr = Tmp7;
						}
					}
					
					j_64367 += 1;
				}
		} while(false);
		if (res_64363 === null) res_64363 = [];
               if (res_64363.length < j_64367) { for (var i=res_64363.length;i<j_64367;++i) res_64363.push(null); }
               else { res_64363.length = j_64367; };
		result_64305 = res_64363.join("");

	return result_64305;

}

function raiseException(e_62618, ename_62619) {
		e_62618.name = ename_62619;
		if ((excHandler == 0)) {
		unhandledException(e_62618);
		}
		
		e_62618.trace = nimCopy(null, raw_write_stack_trace_62467(), NTI43040);
		throw e_62618;

	
}

function chckRange(i_66124, a_66125, b_66126) {
			var Tmp1;

	var result_66127 = 0;

	BeforeRet: do {
			if (!(a_66125 <= i_66124)) Tmp1 = false; else {				Tmp1 = (i_66124 <= b_66126);			}		if (Tmp1) {
		result_66127 = i_66124;
		break BeforeRet;
		}
		else {
		raiseRangeError();
		}
		
	} while (false);

	return result_66127;

}

function divInt(a_64857, b_64858) {
		    if (b_64858 == 0) raiseDivByZero();
    if (b_64858 == -1 && a_64857 == 2147483647) raiseOverflow();
    return Math.trunc(a_64857 / b_64858);
  

	
}

function mulInt(a_64839, b_64840) {
		    var result = a_64839 * b_64840;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}

function subInt(a_64821, b_64822) {
		    var result = a_64821 - b_64822;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}

function addInt(a_64803, b_64804) {
		    var result = a_64803 + b_64804;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}

function chckIndx(i_66105, a_66106, b_66107) {
			var Tmp1;

	var result_66108 = 0;

	BeforeRet: do {
			if (!(a_66106 <= i_66105)) Tmp1 = false; else {				Tmp1 = (i_66105 <= b_66107);			}		if (Tmp1) {
		result_66108 = i_66105;
		break BeforeRet;
		}
		else {
		raiseIndexError(i_66105, a_66106, b_66107);
		}
		
	} while (false);

	return result_66108;

}

function modInt(a_64875, b_64876) {
		    if (b_64876 == 0) raiseDivByZero();
    if (b_64876 == -1 && a_64875 == 2147483647) raiseOverflow();
    return Math.trunc(a_64875 % b_64876);
  

	
}

function eqStrings(a_64641, b_64642) {
		    if (a_64641 == b_64642) return true;
    if (a_64641 === null && b_64642.length == 0) return true;
    if (b_64642 === null && a_64641.length == 0) return true;
    if ((!a_64641) || (!b_64642)) return false;
    var alen = a_64641.length;
    if (alen != b_64642.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_64641[i] != b_64642[i]) return false;
    return true;
  

	
}

function rawEcho() {
		      var buf = "";
      for (var i = 0; i < arguments.length; ++i) {
        buf += toJSStr(arguments[i]);
      }
      console.log(buf);
    

	
}

function addChar(x_66311, c_66312) {
		x_66311.push(c_66312);

	
}
var ConstSet2 = setConstr(123, 91);
var ConstSet3 = setConstr(125, 93);

function mnewString(len_64463) {
		    return new Array(len_64463);
  

	
}

function nimMax(a_65221, b_65222) {
		var Tmp1;

	var result_65223 = 0;

	BeforeRet: do {
		if ((b_65222 <= a_65221)) {
		Tmp1 = a_65221;
		}
		else {
		Tmp1 = b_65222;
		}
		
		result_65223 = Tmp1;
		break BeforeRet;
	} while (false);

	return result_65223;

}

function nimMin(a_65203, b_65204) {
		var Tmp1;

	var result_65205 = 0;

	BeforeRet: do {
		if ((a_65203 <= b_65204)) {
		Tmp1 = a_65203;
		}
		else {
		Tmp1 = b_65204;
		}
		
		result_65205 = Tmp1;
		break BeforeRet;
	} while (false);

	return result_65205;

}
var ConstSet4 = setConstr(32, 9, 11, 13, 10, 12);
var ConstSet5 = setConstr([97, 122], [65, 90], [48, 57], 95);
var ConstSet6 = setConstr([97, 122], [65, 90], [48, 57], 95);
var ConstSet7 = setConstr([48, 57]);
var ConstSet8 = setConstr([48, 57]);
var ConstSet9 = setConstr(101, 69);
var ConstSet10 = setConstr([48, 57]);
var ConstSet11 = setConstr([48, 57]);

function nimParseBiggestFloat(s_66356, number_66358, number_66358_Idx, start_66359) {
	var result_66361 = 0;

	var F={procname:"system.nimParseBiggestFloat",prev:framePtr,filename:"jssys.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 686;
		var esign_66362 = 1.0000000000000000e+000;
		F.line = 687;
		var sign_66363 = 1.0000000000000000e+000;
		F.line = 688;
		var i_66364 = start_66359;
		F.line = 689;
		var exponent_66365 = 0;
		F.line = 690;
		var flags_66366 = 0;
		F.line = 691;
		number_66358[number_66358_Idx] = 0.0;
		if ((s_66356[i_66364] == 43)) {
		F.line = 692;
		i_66364 += 1;
		}
		else {
		if ((s_66356[i_66364] == 45)) {
		F.line = 694;
		sign_66363 = -1.0000000000000000e+000;
		F.line = 695;
		i_66364 += 1;
		}
		}
		if (((s_66356[i_66364] == 78) || (s_66356[i_66364] == 110))) {
		if (((s_66356[(i_66364 + 1)] == 65) || (s_66356[(i_66364 + 1)] == 97))) {
		if (((s_66356[(i_66364 + 2)] == 78) || (s_66356[(i_66364 + 2)] == 110))) {
		if (!((ConstSet5[s_66356[(i_66364 + 3)]] != undefined))) {
		F.line = 700;
		number_66358[number_66358_Idx] = NaN;
		F.line = 701;
		result_66361 = ((i_66364 + 3) - start_66359);
		break BeforeRet;
		}
		
		}
		
		}
		
		F.line = 702;
		result_66361 = 0;
		break BeforeRet;
		}
		
		if (((s_66356[i_66364] == 73) || (s_66356[i_66364] == 105))) {
		if (((s_66356[(i_66364 + 1)] == 78) || (s_66356[(i_66364 + 1)] == 110))) {
		if (((s_66356[(i_66364 + 2)] == 70) || (s_66356[(i_66364 + 2)] == 102))) {
		if (!((ConstSet6[s_66356[(i_66364 + 3)]] != undefined))) {
		F.line = 707;
		number_66358[number_66358_Idx] = (Infinity * sign_66363);
		F.line = 708;
		result_66361 = ((i_66364 + 3) - start_66359);
		break BeforeRet;
		}
		
		}
		
		}
		
		F.line = 709;
		result_66361 = 0;
		break BeforeRet;
		}
		
		L1: do {
			F.line = 710;
				L2: while (true) {
				if (!(ConstSet7[s_66356[i_66364]] != undefined)) break L2;
					F.line = 712;
					flags_66366 = (flags_66366 | 1);
					F.line = 713;
					number_66358[number_66358_Idx] = ((number_66358[number_66358_Idx] * 1.0000000000000000e+001) + to_float_52057((s_66356[i_66364] - 48)));
					F.line = 714;
					i_66364 += 1;
					L3: do {
						F.line = 715;
							L4: while (true) {
							if (!(s_66356[i_66364] == 95)) break L4;
								F.line = 715;
								i_66364 += 1;
							}
					} while(false);
				}
		} while(false);
		if ((s_66356[i_66364] == 46)) {
		F.line = 718;
		var hd_66420 = 1.0000000000000000e+000;
		F.line = 719;
		i_66364 += 1;
		L5: do {
			F.line = 720;
				L6: while (true) {
				if (!(ConstSet8[s_66356[i_66364]] != undefined)) break L6;
					F.line = 722;
					flags_66366 = (flags_66366 | 2);
					F.line = 723;
					number_66358[number_66358_Idx] = ((number_66358[number_66358_Idx] * 1.0000000000000000e+001) + to_float_52057((s_66356[i_66364] - 48)));
					F.line = 724;
					hd_66420 = (hd_66420 * 1.0000000000000000e+001);
					F.line = 725;
					i_66364 += 1;
					L7: do {
						F.line = 726;
							L8: while (true) {
							if (!(s_66356[i_66364] == 95)) break L8;
								F.line = 726;
								i_66364 += 1;
							}
					} while(false);
				}
		} while(false);
		F.line = 727;
		number_66358[number_66358_Idx] = (number_66358[number_66358_Idx] / hd_66420);
		}
		
		if ((flags_66366 == 0)) {
		F.line = 729;
		result_66361 = 0;
		break BeforeRet;
		}
		
		if ((ConstSet9[s_66356[i_66364]] != undefined)) {
		F.line = 732;
		i_66364 += 1;
		if ((s_66356[i_66364] == 43)) {
		F.line = 734;
		i_66364 += 1;
		}
		else {
		if ((s_66356[i_66364] == 45)) {
		F.line = 736;
		esign_66362 = -1.0000000000000000e+000;
		F.line = 737;
		i_66364 += 1;
		}
		}
		if (!((ConstSet10[s_66356[i_66364]] != undefined))) {
		F.line = 739;
		result_66361 = 0;
		break BeforeRet;
		}
		
		L9: do {
			F.line = 740;
				L10: while (true) {
				if (!(ConstSet11[s_66356[i_66364]] != undefined)) break L10;
					F.line = 741;
					exponent_66365 = (((exponent_66365 * 10) + s_66356[i_66364]) - 48);
					F.line = 742;
					i_66364 += 1;
					L11: do {
						F.line = 743;
							L12: while (true) {
							if (!(s_66356[i_66364] == 95)) break L12;
								F.line = 743;
								i_66364 += 1;
							}
					} while(false);
				}
		} while(false);
		}
		
		F.line = 745;
		var hd_66514 = ten_to_the_power_of_66326(exponent_66365);
		if ((0.0 < esign_66362)) {
		F.line = 746;
		number_66358[number_66358_Idx] = (number_66358[number_66358_Idx] * hd_66514);
		}
		else {
			F.line = 747;
			number_66358[number_66358_Idx] = (number_66358[number_66358_Idx] / hd_66514);
		}
		
		F.line = 749;
		number_66358[number_66358_Idx] = (number_66358[number_66358_Idx] * sign_66363);
		F.line = 750;
		result_66361 = (i_66364 - start_66359);
	} while (false);
	framePtr = F.prev;

	return result_66361;

}
var ConstSet12 = setConstr([65, 90]);
var nim_program_result = 0;
var global_raise_hook_59618 = [null];
var local_raise_hook_59623 = [null];
var out_of_mem_hook_59626 = [null];
  if (!Math.trunc) {
    Math.trunc = function(v) {
      v = +v;
      if (!isFinite(v)) return v;

      return (v - v % 1)   ||   (v < 0 ? -0 : v === 0 ? v : 0);
    };
  }
var object_id_91236 = [0];

function is_power_of_two_99062(x_99064) {
		var Tmp1;

	var result_99065 = false;

	BeforeRet: do {
		if (!(0 < x_99064)) Tmp1 = false; else {			Tmp1 = ((x_99064 & (x_99064 - 1)) == 0);		}		result_99065 = Tmp1;
		break BeforeRet;
	} while (false);

	return result_99065;

}

function is_fat_pointer_65801(ti_65803) {
	var result_65804 = false;

	BeforeRet: do {
		result_65804 = !((ConstSet1[ti_65803.base.kind] != undefined));
		break BeforeRet;
	} while (false);

	return result_65804;

}

function nimCopyAux(dest_65832, src_65833, n_65835) {
		switch (n_65835.kind) {
		case 0:
			break;
		case 1:
			      dest_65832[n_65835.offset] = nimCopy(dest_65832[n_65835.offset], src_65833[n_65835.offset], n_65835.typ);
    
			break;
		case 2:
			    for (var i = 0; i < n_65835.sons.length; i++) {
      nimCopyAux(dest_65832, src_65833, n_65835.sons[i]);
    }
    
			break;
		case 3:
			      dest_65832[n_65835.offset] = nimCopy(dest_65832[n_65835.offset], src_65833[n_65835.offset], n_65835.typ);
      for (var i = 0; i < n_65835.sons.length; ++i) {
        nimCopyAux(dest_65832, src_65833, n_65835.sons[i][1]);
      }
    
			break;
		}

	
}

function add_59638(x_59641, x_59641_Idx, y_59642) {
		      if (x_59641[x_59641_Idx] === null) { x_59641[x_59641_Idx] = []; }
      var off = x_59641[x_59641_Idx].length;
      x_59641[x_59641_Idx].length += y_59642.length;
      for (var i = 0; i < y_59642.length; ++i) {
        x_59641[x_59641_Idx][off+i] = y_59642.charCodeAt(i);
      }
    

	
}

function aux_write_stack_trace_62151(f_62153) {
					var Tmp3;

	var result_62154 = [null];

		var it_62162 = f_62153;
		var i_62164 = 0;
		var total_62166 = 0;
		var temp_frames_62173 = arrayConstr(64, {Field0: null, Field1: 0}, NTI62156);
		L1: do {
				L2: while (true) {
					if (!!((it_62162 == null))) Tmp3 = false; else {						Tmp3 = (i_62164 <= 63);					}				if (!Tmp3) break L2;
					temp_frames_62173[i_62164].Field0 = it_62162.procname;
					temp_frames_62173[i_62164].Field1 = it_62162.line;
					i_62164 += 1;
					total_62166 += 1;
					it_62162 = it_62162.prev;
				}
		} while(false);
		L4: do {
				L5: while (true) {
				if (!!((it_62162 == null))) break L5;
					total_62166 += 1;
					it_62162 = it_62162.prev;
				}
		} while(false);
		result_62154[0] = nimCopy(null, [], NTI43040);
		if (!((total_62166 == i_62164))) {
		if (result_62154[0] != null) { result_62154[0] = (result_62154[0]).concat(makeNimstrLit("(")); } else { result_62154[0] = makeNimstrLit("("); };
		if (result_62154[0] != null) { result_62154[0] = (result_62154[0]).concat(cstrToNimstr(((total_62166 - i_62164))+"")); } else { result_62154[0] = cstrToNimstr(((total_62166 - i_62164))+"").slice(); };
		if (result_62154[0] != null) { result_62154[0] = (result_62154[0]).concat(makeNimstrLit(" calls omitted) ...\x0A")); } else { result_62154[0] = makeNimstrLit(" calls omitted) ...\x0A"); };
		}
		
		L6: do {
			var j_62421 = 0;
			var colontmp__261284 = 0;
			colontmp__261284 = (i_62164 - 1);
			var res_261289 = colontmp__261284;
			L7: do {
					L8: while (true) {
					if (!(0 <= res_261289)) break L8;
						j_62421 = res_261289;
						add_59638(result_62154, 0, temp_frames_62173[j_62421].Field0);
						if ((0 < temp_frames_62173[j_62421].Field1)) {
						if (result_62154[0] != null) { result_62154[0] = (result_62154[0]).concat(makeNimstrLit(", line: ")); } else { result_62154[0] = makeNimstrLit(", line: "); };
						if (result_62154[0] != null) { result_62154[0] = (result_62154[0]).concat(cstrToNimstr((temp_frames_62173[j_62421].Field1)+"")); } else { result_62154[0] = cstrToNimstr((temp_frames_62173[j_62421].Field1)+"").slice(); };
						}
						
						if (result_62154[0] != null) { result_62154[0] = (result_62154[0]).concat(makeNimstrLit("\x0A")); } else { result_62154[0] = makeNimstrLit("\x0A"); };
						res_261289 -= 1;
					}
			} while(false);
		} while(false);

	return result_62154[0];

}

function raw_write_stack_trace_62467() {
	var result_62469 = null;

		if (!((framePtr == null))) {
		result_62469 = nimCopy(null, (makeNimstrLit("Traceback (most recent call last)\x0A") || []).concat(aux_write_stack_trace_62151(framePtr) || []), NTI43040);
		}
		else {
			result_62469 = nimCopy(null, makeNimstrLit("No stack traceback available\x0A"), NTI43040);
		}
		

	return result_62469;

}

function new_seq_64336(len_64339) {
	var result_64341 = null;

	var F={procname:"newSeq.newSeq",prev:framePtr,filename:"system.nim",line:0};
	framePtr = F;
		F.line = 996;
		result_64341 = new Array(len_64339); for (var i=0;i<len_64339;++i) {result_64341[i]=null;}	framePtr = F.prev;

	return result_64341;

}

function unhandledException(e_62528) {
		var buf_62529 = [[]];
		if (!(((e_62528.message != null ? e_62528.message.length : 0) == 0))) {
		if (buf_62529[0] != null) { buf_62529[0] = (buf_62529[0]).concat(makeNimstrLit("Error: unhandled exception: ")); } else { buf_62529[0] = makeNimstrLit("Error: unhandled exception: "); };
		if (buf_62529[0] != null) { buf_62529[0] = (buf_62529[0]).concat(e_62528.message); } else { buf_62529[0] = e_62528.message.slice(); };
		}
		else {
		if (buf_62529[0] != null) { buf_62529[0] = (buf_62529[0]).concat(makeNimstrLit("Error: unhandled exception")); } else { buf_62529[0] = makeNimstrLit("Error: unhandled exception"); };
		}
		
		if (buf_62529[0] != null) { buf_62529[0] = (buf_62529[0]).concat(makeNimstrLit(" [")); } else { buf_62529[0] = makeNimstrLit(" ["); };
		add_59638(buf_62529, 0, e_62528.name);
		if (buf_62529[0] != null) { buf_62529[0] = (buf_62529[0]).concat(makeNimstrLit("]\x0A")); } else { buf_62529[0] = makeNimstrLit("]\x0A"); };
		if (buf_62529[0] != null) { buf_62529[0] = (buf_62529[0]).concat(raw_write_stack_trace_62467()); } else { buf_62529[0] = raw_write_stack_trace_62467().slice(); };
		var cbuf_62601 = toJSStr(buf_62529[0]);
		framePtr = null;
		  if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_62601);
  }
  else {
    throw cbuf_62601;
  }
  

	
}

function sys_fatal_56462(message_56466) {
	var F={procname:"sysFatal.sysFatal",prev:framePtr,filename:"fatal.nim",line:0};
	framePtr = F;
		F.line = 34;
		var e_56603 = null;
		F.line = 37;
		e_56603 = {m_type: NTI46450, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 38;
		e_56603.message = nimCopy(null, message_56466, NTI43040);
		F.line = 39;
		raiseException(e_56603, "AssertionError");
	framePtr = F.prev;

	
}

function raise_assert_56458(msg_56460) {
	var F={procname:"assertions.raiseAssert",prev:framePtr,filename:"assertions.nim",line:0};
	framePtr = F;
		F.line = 20;
		sys_fatal_56462(msg_56460);
	framePtr = F.prev;

	
}

function failed_assert_impl_56666(msg_56668) {
	var F={procname:"assertions.failedAssertImpl",prev:framePtr,filename:"assertions.nim",line:0};
	framePtr = F;
		F.line = 27;
		raise_assert_56458(msg_56668);
	framePtr = F.prev;

	
}

function raiseRangeError() {
		var eHEX60gensym63457_63603 = null;
		eHEX60gensym63457_63603 = {m_type: NTI46462, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		eHEX60gensym63457_63603.message = nimCopy(null, makeNimstrLit("value out of range"), NTI43040);
		eHEX60gensym63457_63603.parent = null;
		raiseException(eHEX60gensym63457_63603, "RangeError");

	
}

function init_table_239179(initial_size_239183) {
	var result_239185 = {data: null, counter: 0};

	var F={procname:"initTable.initTable",prev:framePtr,filename:"tables.nim",line:0};
	framePtr = F;
		if (!(is_power_of_two_99062(initial_size_239183))) {
		F.line = 118;
		failed_assert_impl_56666(makeNimstrLit("C:\\Users\\me\\.choosenim\\toolchains\\nim-#devel\\lib\\pure\\collections\\tableimpl.nim(118, 10) `isPowerOfTwo(initialSize)` "));
		}
		
		F.line = 119;
		result_239185.counter = 0;
		F.line = 120;
		result_239185.data = new Array(chckRange(initial_size_239183, 0, 2147483647)); for (var i=0;i<chckRange(initial_size_239183, 0, 2147483647);++i) {result_239185.data[i]={Field0: 0, Field1: null, Field2: null};}	framePtr = F.prev;

	return result_239185;

}

function new_table_243528(initial_size_243532) {
	var result_243534 = null;

	var F={procname:"newTable.newTable",prev:framePtr,filename:"tables.nim",line:0};
	framePtr = F;
		F.line = 809;
		result_243534 = {data: null, counter: 0};
		F.line = 810;
		nimCopy(result_243534, init_table_239179(initial_size_243532), NTI239059);
	framePtr = F.prev;

	return result_243534;

}

function raiseDivByZero() {
		var eHEX60gensym63257_63403 = null;
		eHEX60gensym63257_63403 = {m_type: NTI46444, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		eHEX60gensym63257_63403.message = nimCopy(null, makeNimstrLit("division by zero"), NTI43040);
		eHEX60gensym63257_63403.parent = null;
		raiseException(eHEX60gensym63257_63403, "DivByZeroError");

	
}

function raiseOverflow() {
		var eHEX60gensym63058_63203 = null;
		eHEX60gensym63058_63203 = {m_type: NTI46446, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		eHEX60gensym63058_63203.message = nimCopy(null, makeNimstrLit("over- or underflow"), NTI43040);
		eHEX60gensym63058_63203.parent = null;
		raiseException(eHEX60gensym63058_63203, "OverflowError");

	
}

function raiseIndexError(i_63655, a_63656, b_63657) {
		var Tmp1;

		var eHEX60gensym63802_64003 = null;
		eHEX60gensym63802_64003 = {m_type: NTI46458, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		if ((b_63657 < a_63656)) {
		Tmp1 = makeNimstrLit("index out of bounds, the container is empty");
		}
		else {
		Tmp1 = (makeNimstrLit("index ") || []).concat(cstrToNimstr((i_63655)+"") || [],makeNimstrLit(" not in ") || [],cstrToNimstr((a_63656)+"") || [],makeNimstrLit(" .. ") || [],cstrToNimstr((b_63657)+"") || []);
		}
		
		eHEX60gensym63802_64003.message = nimCopy(null, Tmp1, NTI43040);
		eHEX60gensym63802_64003.parent = null;
		raiseException(eHEX60gensym63802_64003, "IndexError");

	
}

function imul_91785(a_91787, b_91788) {
	var result_91789 = 0;

	var F={procname:"hashes.imul",prev:framePtr,filename:"hashes.nim",line:0};
	framePtr = F;
		F.line = 157;
		var mask_91790 = 65535;
		F.line = 159;
		var a_hi_91799 = (((a_91787 >>> 0) >>> 16) & mask_91790);
		F.line = 160;
		var a_lo_91800 = (a_91787 & mask_91790);
		F.line = 161;
		var b_hi_91809 = (((b_91788 >>> 0) >>> 16) & mask_91790);
		F.line = 162;
		var b_lo_91810 = (b_91788 & mask_91790);
		F.line = 163;
		result_91789 = ((((a_lo_91800 * b_lo_91810) >>> 0) + (((((a_hi_91799 * b_lo_91810) >>> 0) + ((a_lo_91800 * b_hi_91809) >>> 0)) >>> 0) << 16)) >>> 0);
	framePtr = F.prev;

	return result_91789;

}

function rotl32_92001(x_92003, r_92004) {
	var result_92005 = 0;

	var F={procname:"hashes.rotl32",prev:framePtr,filename:"hashes.nim",line:0};
	framePtr = F;
		F.line = 168;
		result_92005 = ((x_92003 << r_92004) | ((x_92003 >>> 0) >>> subInt(32, r_92004)));
	framePtr = F.prev;

	return result_92005;

}

function murmur_hash_92029(x_92032) {
	var result_92033 = 0;

	var F={procname:"hashes.murmurHash",prev:framePtr,filename:"hashes.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 179;
		var size_92043 = (x_92032 != null ? x_92032.length : 0);
		F.line = 180;
		var step_size_92045 = 4;
		F.line = 181;
		var n_92046 = divInt(size_92043, step_size_92045);
		F.line = 183;
		var h1_92047 = 0;
		F.line = 184;
		var i_92049 = 0;
		L1: do {
			F.line = 187;
				L2: while (true) {
				if (!(i_92049 < mulInt(n_92046, step_size_92045))) break L2;
					F.line = 188;
					var k1_92050 = 0;
					F.line = 190;
					var j_92051 = step_size_92045;
					L3: do {
						F.line = 191;
							L4: while (true) {
							if (!(0 < j_92051)) break L4;
								F.line = 192;
								j_92051 = subInt(j_92051, 1);
								F.line = 193;
								k1_92050 = ((k1_92050 << 8) | chckRange(x_92032[chckIndx(addInt(i_92049, j_92051), 0, x_92032.length+0-1)-0], 0, 4294967295));
							}
					} while(false);
					F.line = 196;
					i_92049 = addInt(i_92049, step_size_92045);
					F.line = 198;
					k1_92050 = imul_91785(k1_92050, 3432918353);
					F.line = 199;
					k1_92050 = rotl32_92001(k1_92050, 15);
					F.line = 200;
					k1_92050 = imul_91785(k1_92050, 461845907);
					F.line = 202;
					h1_92047 = (h1_92047 ^ k1_92050);
					F.line = 203;
					h1_92047 = rotl32_92001(h1_92047, 13);
					F.line = 204;
					h1_92047 = ((((h1_92047 * 5) >>> 0) + 3864292196) >>> 0);
				}
		} while(false);
		F.line = 207;
		var k1_92208 = 0;
		F.line = 208;
		var rem_92209 = modInt(size_92043, step_size_92045);
		L5: do {
			F.line = 209;
				L6: while (true) {
				if (!(0 < rem_92209)) break L6;
					F.line = 210;
					rem_92209 = subInt(rem_92209, 1);
					F.line = 211;
					k1_92208 = ((k1_92208 << 8) | chckRange(x_92032[chckIndx(addInt(i_92049, rem_92209), 0, x_92032.length+0-1)-0], 0, 4294967295));
				}
		} while(false);
		F.line = 212;
		k1_92208 = imul_91785(k1_92208, 3432918353);
		F.line = 213;
		k1_92208 = rotl32_92001(k1_92208, 15);
		F.line = 214;
		k1_92208 = imul_91785(k1_92208, 461845907);
		F.line = 215;
		h1_92047 = (h1_92047 ^ k1_92208);
		F.line = 218;
		h1_92047 = (h1_92047 ^ chckRange(size_92043, 0, 4294967295));
		F.line = 219;
		h1_92047 = (h1_92047 ^ ((h1_92047 >>> 0) >>> 16));
		F.line = 220;
		h1_92047 = imul_91785(h1_92047, 2246822507);
		F.line = 221;
		h1_92047 = (h1_92047 ^ ((h1_92047 >>> 0) >>> 13));
		F.line = 222;
		h1_92047 = imul_91785(h1_92047, 3266489909);
		F.line = 223;
		h1_92047 = (h1_92047 ^ ((h1_92047 >>> 0) >>> 16));
		F.line = 224;
		result_92033 = (h1_92047|0);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_92033;

}

function hash_92814(x_92816) {
	var result_92817 = 0;

	var F={procname:"hashes.hash",prev:framePtr,filename:"hashes.nim",line:0};
	framePtr = F;
		F.line = 253;
		result_92817 = murmur_hash_92029((x_92816.slice(0, (x_92816 != null ? (x_92816.length-1) : -1)+1)));
	framePtr = F.prev;

	return result_92817;

}

function is_filled_106018(hcode_106020) {
	var result_106021 = false;

	var F={procname:"tables.isFilled",prev:framePtr,filename:"hashcommon.nim",line:0};
	framePtr = F;
		F.line = 27;
		result_106021 = !((hcode_106020 == 0));
	framePtr = F.prev;

	return result_106021;

}

function next_try_106035(h_106037, max_hash_106038) {
	var result_106039 = 0;

	var F={procname:"tables.nextTry",prev:framePtr,filename:"hashcommon.nim",line:0};
	framePtr = F;
		F.line = 30;
		result_106039 = (addInt(h_106037, 1) & max_hash_106038);
	framePtr = F.prev;

	return result_106039;

}

function raw_get_240002(t_240006, key_240007, hc_240008, hc_240008_Idx) {
						var Tmp3;

	var result_240009 = 0;

	var F={procname:"rawGet.rawGet",prev:framePtr,filename:"hashcommon.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 54;
		hc_240008[hc_240008_Idx] = hash_92814(key_240007);
		if ((hc_240008[hc_240008_Idx] == 0)) {
		F.line = 56;
		hc_240008[hc_240008_Idx] = 314159265;
		}
		
		if (((t_240006.data != null ? t_240006.data.length : 0) == 0)) {
		F.line = 38;
		result_240009 = -1;
		break BeforeRet;
		}
		
		F.line = 39;
		var h_240150 = (hc_240008[hc_240008_Idx] & (t_240006.data != null ? (t_240006.data.length-1) : -1));
		L1: do {
			F.line = 40;
				L2: while (true) {
				if (!is_filled_106018(t_240006.data[chckIndx(h_240150, 0, t_240006.data.length+0-1)-0].Field0)) break L2;
						if (!(t_240006.data[chckIndx(h_240150, 0, t_240006.data.length+0-1)-0].Field0 == hc_240008[hc_240008_Idx])) Tmp3 = false; else {							Tmp3 = eqStrings(t_240006.data[chckIndx(h_240150, 0, t_240006.data.length+0-1)-0].Field1, key_240007);						}					if (Tmp3) {
					F.line = 46;
					result_240009 = h_240150;
					break BeforeRet;
					}
					
					F.line = 47;
					h_240150 = next_try_106035(h_240150, (t_240006.data != null ? (t_240006.data.length-1) : -1));
				}
		} while(false);
		F.line = 48;
		result_240009 = subInt(-1, h_240150);
	} while (false);
	framePtr = F.prev;

	return result_240009;

}

function must_rehash_106053(length_106055, counter_106056) {
	var result_106057 = false;

	var F={procname:"tables.mustRehash",prev:framePtr,filename:"hashcommon.nim",line:0};
	framePtr = F;
		if (!((counter_106056 < length_106055))) {
		F.line = 33;
		failed_assert_impl_56666(makeNimstrLit("C:\\Users\\me\\.choosenim\\toolchains\\nim-#devel\\lib\\pure\\collections\\hashcommon.nim(33, 9) `length > counter` "));
		}
		
		F.line = 34;
		result_106057 = ((mulInt(length_106055, 2) < mulInt(counter_106056, 3)) || (subInt(length_106055, counter_106056) < 4));
	framePtr = F.prev;

	return result_106057;

}

function raw_insert_242308(t_242314, data_242317, data_242317_Idx, key_242318, val_242319, hc_242320, h_242321) {
	var F={procname:"rawInsert.rawInsert",prev:framePtr,filename:"tableimpl.nim",line:0};
	framePtr = F;
		F.line = 22;
		data_242317[data_242317_Idx][chckIndx(h_242321, 0, data_242317[data_242317_Idx].length+0-1)-0].Field1 = nimCopy(null, key_242318, NTI43040);
		F.line = 23;
		data_242317[data_242317_Idx][chckIndx(h_242321, 0, data_242317[data_242317_Idx].length+0-1)-0].Field2 = nimCopy(null, val_242319, NTI43040);
		F.line = 24;
		data_242317[data_242317_Idx][chckIndx(h_242321, 0, data_242317[data_242317_Idx].length+0-1)-0].Field0 = hc_242320;
	framePtr = F.prev;

	
}

function enlarge_241348(t_241354) {
	var F={procname:"enlarge.enlarge",prev:framePtr,filename:"tables.nim",line:0};
	framePtr = F;
		F.line = 268;
		var n_241362 = null;
		F.line = 269;
		n_241362 = new Array(chckRange(mulInt((t_241354.data != null ? t_241354.data.length : 0), 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_241354.data != null ? t_241354.data.length : 0), 2), 0, 2147483647);++i) {n_241362[i]={Field0: 0, Field1: null, Field2: null};}		F.line = 270;
		var Tmp1 = t_241354.data; t_241354.data = n_241362; n_241362 = Tmp1;		L2: do {
			F.line = 271;
			var i_241521 = 0;
			F.line = 2690;
			var colontmp__261311 = 0;
			F.line = 271;
			colontmp__261311 = (n_241362 != null ? (n_241362.length-1) : -1);
			F.line = 2707;
			var res_261316 = 0;
			L3: do {
				F.line = 2708;
					L4: while (true) {
					if (!(res_261316 <= colontmp__261311)) break L4;
						F.line = 271;
						i_241521 = res_261316;
						F.line = 272;
						var eh_241670 = n_241362[chckIndx(i_241521, 0, n_241362.length+0-1)-0].Field0;
						if (is_filled_106018(eh_241670)) {
						F.line = 274;
						var j_241677 = (eh_241670 & (t_241354.data != null ? (t_241354.data.length-1) : -1));
						L5: do {
							F.line = 275;
								L6: while (true) {
								if (!is_filled_106018(t_241354.data[chckIndx(j_241677, 0, t_241354.data.length+0-1)-0].Field0)) break L6;
									F.line = 276;
									j_241677 = next_try_106035(j_241677, (t_241354.data != null ? (t_241354.data.length-1) : -1));
								}
						} while(false);
						F.line = 278;
						raw_insert_242308(t_241354, t_241354, "data", n_241362[chckIndx(i_241521, 0, n_241362.length+0-1)-0].Field1, n_241362[chckIndx(i_241521, 0, n_241362.length+0-1)-0].Field2, eh_241670, j_241677);
						}
						
						F.line = 2710;
						res_261316 = addInt(res_261316, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	
}

function raw_get_known_hc_242793(t_242797, key_242798, hc_242799) {
	var result_242800 = 0;

	var F={procname:"rawGetKnownHC.rawGetKnownHC",prev:framePtr,filename:"hashcommon.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if (((t_242797.data != null ? t_242797.data.length : 0) == 0)) {
		F.line = 38;
		result_242800 = -1;
		break BeforeRet;
		}
		
		F.line = 39;
		var h_242938 = (hc_242799 & (t_242797.data != null ? (t_242797.data.length-1) : -1));
		L1: do {
			F.line = 40;
				L2: while (true) {
				if (!is_filled_106018(t_242797.data[chckIndx(h_242938, 0, t_242797.data.length+0-1)-0].Field0)) break L2;
					if (((t_242797.data[chckIndx(h_242938, 0, t_242797.data.length+0-1)-0].Field0 == hc_242799) && eqStrings(t_242797.data[chckIndx(h_242938, 0, t_242797.data.length+0-1)-0].Field1, key_242798))) {
					F.line = 46;
					result_242800 = h_242938;
					break BeforeRet;
					}
					
					F.line = 47;
					h_242938 = next_try_106035(h_242938, (t_242797.data != null ? (t_242797.data.length-1) : -1));
				}
		} while(false);
		F.line = 48;
		result_242800 = subInt(-1, h_242938);
	} while (false);
	framePtr = F.prev;

	return result_242800;

}

function HEX5BHEX5DHEX3D_239549(t_239555, key_239556, val_239557) {
	var F={procname:"[]=.[]=",prev:framePtr,filename:"tables.nim",line:0};
	framePtr = F;
		if (((t_239555.data != null ? t_239555.data.length : 0) == 0)) {
		if (!(is_power_of_two_99062(64))) {
		F.line = 118;
		failed_assert_impl_56666(makeNimstrLit("C:\\Users\\me\\.choosenim\\toolchains\\nim-#devel\\lib\\pure\\collections\\tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
		}
		
		F.line = 119;
		t_239555.counter = 0;
		F.line = 120;
		t_239555.data = new Array(64); for (var i=0;i<64;++i) {t_239555.data[i]={Field0: 0, Field1: null, Field2: null};}		}
		
		F.line = 57;
		var hc_240001 = [0];
		F.line = 58;
		var index_240617 = raw_get_240002(t_239555, key_239556, hc_240001, 0);
		if ((0 <= index_240617)) {
		F.line = 59;
		t_239555.data[chckIndx(index_240617, 0, t_239555.data.length+0-1)-0].Field2 = nimCopy(null, val_239557, NTI43040);
		}
		else {
			if (((t_239555.data != null ? t_239555.data.length : 0) == 0)) {
			if (!(is_power_of_two_99062(64))) {
			F.line = 118;
			failed_assert_impl_56666(makeNimstrLit("C:\\Users\\me\\.choosenim\\toolchains\\nim-#devel\\lib\\pure\\collections\\tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
			}
			
			F.line = 119;
			t_239555.counter = 0;
			F.line = 120;
			t_239555.data = new Array(64); for (var i=0;i<64;++i) {t_239555.data[i]={Field0: 0, Field1: null, Field2: null};}			}
			
			if (must_rehash_106053((t_239555.data != null ? t_239555.data.length : 0), t_239555.counter)) {
			F.line = 49;
			enlarge_241348(t_239555);
			F.line = 50;
			index_240617 = raw_get_known_hc_242793(t_239555, key_239556, hc_240001[0]);
			}
			
			F.line = 51;
			index_240617 = subInt(-1, index_240617);
			F.line = 52;
			raw_insert_242308(t_239555, t_239555, "data", key_239556, val_239557, hc_240001[0], index_240617);
			F.line = 60;
			t_239555.counter = addInt(t_239555.counter, 1);
		}
		
	framePtr = F.prev;

	
}

function HEX5BHEX5DHEX3D_243783(t_243788, key_243789, val_243790) {
	var F={procname:"[]=.[]=",prev:framePtr,filename:"tables.nim",line:0};
	framePtr = F;
		F.line = 873;
		HEX5BHEX5DHEX3D_239549(t_243788, key_243789, val_243790);
	framePtr = F.prev;

	
}
var color_names_243673 = [new_table_243528(64)];
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("aliceblue"), makeNimstrLit("F0F8FF"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("antiquewhite"), makeNimstrLit("FAEBD7"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("aqua"), makeNimstrLit("00FFFF"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("aquamarine"), makeNimstrLit("7FFFD4"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("azure"), makeNimstrLit("F0FFFF"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("beige"), makeNimstrLit("F5F5DC"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("bisque"), makeNimstrLit("FFE4C4"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("black"), makeNimstrLit("000000"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("blanchedalmond"), makeNimstrLit("FFEBCD"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("blue"), makeNimstrLit("0000FF"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("blueviolet"), makeNimstrLit("8A2BE2"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("brown"), makeNimstrLit("A52A2A"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("burlywood"), makeNimstrLit("DEB887"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("cadetblue"), makeNimstrLit("5F9EA0"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("chartreuse"), makeNimstrLit("7FFF00"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("chocolate"), makeNimstrLit("D2691E"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("coral"), makeNimstrLit("FF7F50"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("cornflowerblue"), makeNimstrLit("6495ED"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("cornsilk"), makeNimstrLit("FFF8DC"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("crimson"), makeNimstrLit("DC143C"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("cyan"), makeNimstrLit("00FFFF"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("darkblue"), makeNimstrLit("00008B"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("darkcyan"), makeNimstrLit("008B8B"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("darkgoldenrod"), makeNimstrLit("B8860B"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("darkgray"), makeNimstrLit("A9A9A9"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("darkgrey"), makeNimstrLit("A9A9A9"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("darkgreen"), makeNimstrLit("006400"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("darkkhaki"), makeNimstrLit("BDB76B"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("darkmagenta"), makeNimstrLit("8B008B"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("darkolivegreen"), makeNimstrLit("556B2F"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("darkorange"), makeNimstrLit("FF8C00"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("darkorchid"), makeNimstrLit("9932CC"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("darkred"), makeNimstrLit("8B0000"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("darksalmon"), makeNimstrLit("E9967A"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("darkseagreen"), makeNimstrLit("8FBC8F"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("darkslateblue"), makeNimstrLit("483D8B"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("darkslategray"), makeNimstrLit("2F4F4F"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("darkslategrey"), makeNimstrLit("2F4F4F"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("darkturquoise"), makeNimstrLit("00CED1"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("darkviolet"), makeNimstrLit("9400D3"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("deeppink"), makeNimstrLit("FF1493"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("deepskyblue"), makeNimstrLit("00BFFF"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("dimgray"), makeNimstrLit("696969"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("dimgrey"), makeNimstrLit("696969"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("dodgerblue"), makeNimstrLit("1E90FF"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("firebrick"), makeNimstrLit("B22222"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("floralwhite"), makeNimstrLit("FFFAF0"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("forestgreen"), makeNimstrLit("228B22"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("fuchsia"), makeNimstrLit("FF00FF"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("gainsboro"), makeNimstrLit("DCDCDC"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("ghostwhite"), makeNimstrLit("F8F8FF"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("gold"), makeNimstrLit("FFD700"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("goldenrod"), makeNimstrLit("DAA520"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("gray"), makeNimstrLit("808080"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("grey"), makeNimstrLit("808080"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("green"), makeNimstrLit("008000"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("greenyellow"), makeNimstrLit("ADFF2F"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("honeydew"), makeNimstrLit("F0FFF0"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("hotpink"), makeNimstrLit("FF69B4"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("indianred"), makeNimstrLit("CD5C5C"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("indigo"), makeNimstrLit("4B0082"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("ivory"), makeNimstrLit("FFFFF0"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("khaki"), makeNimstrLit("F0E68C"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("lavender"), makeNimstrLit("E6E6FA"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("lavenderblush"), makeNimstrLit("FFF0F5"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("lawngreen"), makeNimstrLit("7CFC00"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("lemonchiffon"), makeNimstrLit("FFFACD"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("lightblue"), makeNimstrLit("ADD8E6"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("lightcoral"), makeNimstrLit("F08080"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("lightcyan"), makeNimstrLit("E0FFFF"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("lightgoldenrodyellow"), makeNimstrLit("FAFAD2"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("lightgray"), makeNimstrLit("D3D3D3"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("lightgrey"), makeNimstrLit("D3D3D3"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("lightgreen"), makeNimstrLit("90EE90"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("lightpink"), makeNimstrLit("FFB6C1"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("lightsalmon"), makeNimstrLit("FFA07A"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("lightseagreen"), makeNimstrLit("20B2AA"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("lightskyblue"), makeNimstrLit("87CEFA"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("lightslategray"), makeNimstrLit("778899"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("lightslategrey"), makeNimstrLit("778899"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("lightsteelblue"), makeNimstrLit("B0C4DE"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("lightyellow"), makeNimstrLit("FFFFE0"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("lime"), makeNimstrLit("00FF00"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("limegreen"), makeNimstrLit("32CD32"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("linen"), makeNimstrLit("FAF0E6"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("magenta"), makeNimstrLit("FF00FF"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("maroon"), makeNimstrLit("800000"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("mediumaquamarine"), makeNimstrLit("66CDAA"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("mediumblue"), makeNimstrLit("0000CD"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("mediumorchid"), makeNimstrLit("BA55D3"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("mediumpurple"), makeNimstrLit("9370DB"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("mediumseagreen"), makeNimstrLit("3CB371"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("mediumslateblue"), makeNimstrLit("7B68EE"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("mediumspringgreen"), makeNimstrLit("00FA9A"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("mediumturquoise"), makeNimstrLit("48D1CC"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("mediumvioletred"), makeNimstrLit("C71585"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("midnightblue"), makeNimstrLit("191970"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("mintcream"), makeNimstrLit("F5FFFA"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("mistyrose"), makeNimstrLit("FFE4E1"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("moccasin"), makeNimstrLit("FFE4B5"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("navajowhite"), makeNimstrLit("FFDEAD"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("navy"), makeNimstrLit("000080"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("oldlace"), makeNimstrLit("FDF5E6"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("olive"), makeNimstrLit("808000"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("olivedrab"), makeNimstrLit("6B8E23"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("orange"), makeNimstrLit("FFA500"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("orangered"), makeNimstrLit("FF4500"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("orchid"), makeNimstrLit("DA70D6"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("palegoldenrod"), makeNimstrLit("EEE8AA"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("palegreen"), makeNimstrLit("98FB98"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("paleturquoise"), makeNimstrLit("AFEEEE"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("palevioletred"), makeNimstrLit("DB7093"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("papayawhip"), makeNimstrLit("FFEFD5"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("peachpuff"), makeNimstrLit("FFDAB9"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("peru"), makeNimstrLit("CD853F"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("pink"), makeNimstrLit("FFC0CB"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("plum"), makeNimstrLit("DDA0DD"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("powderblue"), makeNimstrLit("B0E0E6"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("purple"), makeNimstrLit("800080"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("rebeccapurple"), makeNimstrLit("663399"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("red"), makeNimstrLit("FF0000"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("rosybrown"), makeNimstrLit("BC8F8F"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("royalblue"), makeNimstrLit("4169E1"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("saddlebrown"), makeNimstrLit("8B4513"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("salmon"), makeNimstrLit("FA8072"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("sandybrown"), makeNimstrLit("F4A460"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("seagreen"), makeNimstrLit("2E8B57"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("seashell"), makeNimstrLit("FFF5EE"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("sienna"), makeNimstrLit("A0522D"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("silver"), makeNimstrLit("C0C0C0"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("skyblue"), makeNimstrLit("87CEEB"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("slateblue"), makeNimstrLit("6A5ACD"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("slategray"), makeNimstrLit("708090"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("slategrey"), makeNimstrLit("708090"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("snow"), makeNimstrLit("FFFAFA"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("springgreen"), makeNimstrLit("00FF7F"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("steelblue"), makeNimstrLit("4682B4"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("tan"), makeNimstrLit("D2B48C"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("teal"), makeNimstrLit("008080"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("thistle"), makeNimstrLit("D8BFD8"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("tomato"), makeNimstrLit("FF6347"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("turquoise"), makeNimstrLit("40E0D0"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("violet"), makeNimstrLit("EE82EE"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("wheat"), makeNimstrLit("F5DEB3"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("white"), makeNimstrLit("FFFFFF"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("whitesmoke"), makeNimstrLit("F5F5F5"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("yellow"), makeNimstrLit("FFFF00"));
HEX5BHEX5DHEX3D_243783(color_names_243673[0], makeNimstrLit("yellowgreen"), makeNimstrLit("9ACD32"));
var state_284005 = [{a0: 1773455756, a1: 4275166512}];
var utc_instance_293031 = [null];
var local_instance_293032 = [null];
var window_308349 = [{innerTitle: null, innerUrl: null}];
var parent_308350 = [null];
var root_308351 = [null];
var prev_root_308352 = [null];
var group_stack_308354 = [null];
var current_308355 = [null];
var scroll_box_308356 = [{x: 0.0, y: 0.0, w: 0.0, h: 0.0}];
var scroll_box_mega_308357 = [{x: 0.0, y: 0.0, w: 0.0, h: 0.0}];
var scroll_box_mini_308358 = [{x: 0.0, y: 0.0, w: 0.0, h: 0.0}];
var mouse_308359 = [{state: 0, pos: {x: 0.0, y: 0.0}, click: false, rightClick: false, down: false, cursorStyle: 0}];
var keyboard_308360 = [{state: 0, keyCode: 0, scanCode: 0, keyString: null, altKey: false, ctrlKey: false, shiftKey: false, superKey: false, inputFocusIdPath: null, prevInputFocusIdPath: null, input: null, textCursor: 0, selectionCursor: 0}];
var draw_main_308363 = [null];
var perf_308364 = [{drawMain: 0.0, numLowLevelCalls: 0}];
var requested_frame_308365 = [false];
var num_groups_308366 = [0];
var root_url_308367 = [null];
var popup_active_308368 = [false];
var in_popup_308369 = [false];
mouse_308359[0] = {state: 0, pos: {x: 0.0, y: 0.0}, click: false, rightClick: false, down: false, cursorStyle: 0};
nimCopy(mouse_308359[0].pos, {x: 0.0, y: 0.0}, NTI301101);

function init_table_311167(initial_size_311171) {
	var result_311173 = {data: null, counter: 0};

	var F={procname:"initTable.initTable",prev:framePtr,filename:"tables.nim",line:0};
	framePtr = F;
		if (!(is_power_of_two_99062(initial_size_311171))) {
		F.line = 118;
		failed_assert_impl_56666(makeNimstrLit("C:\\Users\\me\\.choosenim\\toolchains\\nim-#devel\\lib\\pure\\collections\\tableimpl.nim(118, 10) `isPowerOfTwo(initialSize)` "));
		}
		
		F.line = 119;
		result_311173.counter = 0;
		F.line = 120;
		result_311173.data = new Array(chckRange(initial_size_311171, 0, 2147483647)); for (var i=0;i<chckRange(initial_size_311171, 0, 2147483647);++i) {result_311173.data[i]={Field0: 0, Field1: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, Field2: null};}	framePtr = F.prev;

	return result_311173;

}

function new_table_315546(initial_size_315550) {
	var result_315552 = null;

	var F={procname:"newTable.newTable",prev:framePtr,filename:"tables.nim",line:0};
	framePtr = F;
		F.line = 809;
		result_315552 = {data: null, counter: 0};
		F.line = 810;
		nimCopy(result_315552, init_table_311167(initial_size_315550), NTI311047);
	framePtr = F.prev;

	return result_315552;

}
var div_cache_311029 = [null];
var root_dom_node_311030 = [null];
var color_cache_315691 = [new_table_315546(64)];

function init_table_317012(initial_size_317016) {
	var result_317018 = {data: null, counter: 0};

	var F={procname:"initTable.initTable",prev:framePtr,filename:"tables.nim",line:0};
	framePtr = F;
		if (!(is_power_of_two_99062(initial_size_317016))) {
		F.line = 118;
		failed_assert_impl_56666(makeNimstrLit("C:\\Users\\me\\.choosenim\\toolchains\\nim-#devel\\lib\\pure\\collections\\tableimpl.nim(118, 10) `isPowerOfTwo(initialSize)` "));
		}
		
		F.line = 119;
		result_317018.counter = 0;
		F.line = 120;
		result_317018.data = new Array(chckRange(initial_size_317016, 0, 2147483647)); for (var i=0;i<chckRange(initial_size_317016, 0, 2147483647);++i) {result_317018.data[i]={Field0: 0, Field1: null, Field2: {Field0: 0.0, Field1: 0.0}};}	framePtr = F.prev;

	return result_317018;

}

function new_table_321558(initial_size_321562) {
	var result_321564 = null;

	var F={procname:"newTable.newTable",prev:framePtr,filename:"tables.nim",line:0};
	framePtr = F;
		F.line = 809;
		result_321564 = {data: null, counter: 0};
		F.line = 810;
		nimCopy(result_321564, init_table_317012(initial_size_321562), NTI316892);
	framePtr = F.prev;

	return result_321564;

}
var compute_text_box_cache_321702 = [new_table_321558(64)];
var start_time_323964 = [0.0];
var prev_mouse_cursor_style_323965 = [0];

function new_seq_327056(len_327059) {
	var result_327061 = null;

	var F={procname:"newSeq.newSeq",prev:framePtr,filename:"system.nim",line:0};
	framePtr = F;
		F.line = 996;
		result_327061 = new Array(len_327059); for (var i=0;i<len_327059;++i) {result_327061[i]=0.0;}	framePtr = F.prev;

	return result_327061;

}

function rotl_284230(x_284232, k_284233) {
	var result_284234 = 0;

	var F={procname:"random.rotl",prev:framePtr,filename:"random.nim",line:0};
	framePtr = F;
		F.line = 122;
		result_284234 = ((x_284232 << k_284233) | ((x_284232 >>> 0) >>> ((64 - k_284233) >>> 0)));
	framePtr = F.prev;

	return result_284234;

}

function next_284258(r_284261) {
	var result_284262 = 0;

	var F={procname:"random.next",prev:framePtr,filename:"random.nim",line:0};
	framePtr = F;
		F.line = 139;
		var s0_284263 = r_284261.a0;
		F.line = 140;
		var s1_284264 = r_284261.a1;
		F.line = 141;
		result_284262 = ((s0_284263 + s1_284264) >>> 0);
		F.line = 142;
		s1_284264 = (s1_284264 ^ s0_284263);
		F.line = 143;
		r_284261.a0 = ((rotl_284230(s0_284263, 55) ^ s1_284264) ^ (s1_284264 << 14));
		F.line = 144;
		r_284261.a1 = rotl_284230(s1_284264, 36);
	framePtr = F.prev;

	return result_284262;

}

function rand_284681(r_284684, max_284707) {
	var result_284708 = 0.0;

	var F={procname:"random.rand",prev:framePtr,filename:"random.nim",line:0};
	framePtr = F;
		F.line = 289;
		var x_284709 = next_284258(r_284684);
		F.line = 291;
		result_284708 = ((x_284709 / 4294967295) * max_284707);
	framePtr = F.prev;

	return result_284708;

}

function rand_284820(max_284822) {
	var result_284823 = 0.0;

	var F={procname:"random.rand",prev:framePtr,filename:"random.nim",line:0};
	framePtr = F;
		F.line = 297;
		result_284823 = rand_284681(state_284005[0], chckRange(max_284822, 0.0, Infinity));
	framePtr = F.prev;

	return result_284823;

}

function setup_root_308524() {
	var F={procname:"uibase.setupRoot",prev:framePtr,filename:"uibase.nim",line:0};
	framePtr = F;
		F.line = 126;
		prev_root_308352[0] = root_308351[0];
		F.line = 127;
		root_308351[0] = {id: null, idPath: null, kind: null, text: null, placeholder: null, code: null, kids: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, rotation: 0.0, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0.0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0, textAlignVertical: 0}, imageName: null, cornerRadius: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, wasDrawn: false, editableText: false, multiline: false, drawable: false};
		F.line = 128;
		group_stack_308354[0] = nimCopy(null, [root_308351[0]], NTI308536);
		F.line = 129;
		current_308355[0] = root_308351[0];
		F.line = 130;
		root_308351[0].id = nimCopy(null, makeNimstrLit("root"), NTI43040);
	framePtr = F.prev;

	
}

function draw_start_323994() {
	var F={procname:"backendhtml.drawStart",prev:framePtr,filename:"backendhtml.nim",line:0};
	framePtr = F;
		F.line = 262;
		start_time_323964[0] = window.performance.now();
		F.line = 263;
		num_groups_308366[0] = 0;
		F.line = 264;
		perf_308364[0].numLowLevelCalls = 0;
		F.line = 266;
		window_308349[0].innerUrl = nimCopy(null, cstrToNimstr(window.location.search), NTI43040);
		F.line = 269;
		root_308351[0].box.x = 0.0;
		F.line = 270;
		root_308351[0].box.y = 0.0;
		F.line = 271;
		root_308351[0].box.w = window.innerWidth;
		F.line = 272;
		root_308351[0].box.h = document.body.clientHeight;
		F.line = 274;
		scroll_box_308356[0].x = window.scrollX;
		F.line = 275;
		scroll_box_308356[0].y = window.scrollY;
		F.line = 276;
		scroll_box_308356[0].w = document.body.clientWidth;
		F.line = 277;
		scroll_box_308356[0].h = window.innerHeight;
		F.line = 279;
		scroll_box_mega_308357[0].x = window.scrollX;
		F.line = 280;
		scroll_box_mega_308357[0].y = (window.scrollY - 5.0000000000000000e+002);
		F.line = 281;
		scroll_box_mega_308357[0].w = document.body.clientWidth;
		F.line = 282;
		scroll_box_mega_308357[0].h = addInt(window.innerHeight, 1000);
		F.line = 284;
		scroll_box_mini_308358[0].x = window.scrollX;
		F.line = 285;
		scroll_box_mini_308358[0].y = (window.scrollY + 1.0000000000000000e+002);
		F.line = 286;
		scroll_box_mini_308358[0].w = document.body.clientWidth;
		F.line = 287;
		scroll_box_mini_308358[0].h = subInt(window.innerHeight, 200);
		F.line = 289;
		document.body.style.overflowX = "auto";
		F.line = 290;
		document.body.style.overflowY = "auto";
		F.line = 292;
		mouse_308359[0].cursorStyle = 0;
	framePtr = F.prev;

	
}

function pop_324020(s_324025, s_324025_Idx) {
	var result_324026 = null;

	var F={procname:"pop.pop",prev:framePtr,filename:"system.nim",line:0};
	framePtr = F;
		F.line = 3203;
		var l_324032 = subInt((s_324025[s_324025_Idx] != null ? s_324025[s_324025_Idx].length : 0), 1);
		F.line = 3208;
		result_324026 = s_324025[s_324025_Idx][chckIndx(l_324032, 0, s_324025[s_324025_Idx].length+0-1)-0];
		F.line = 3209;
		if (s_324025[s_324025_Idx] === null) s_324025[s_324025_Idx] = [];
               if (s_324025[s_324025_Idx].length < chckRange(l_324032, 0, 2147483647)) { for (var i=s_324025[s_324025_Idx].length;i<chckRange(l_324032, 0, 2147483647);++i) s_324025[s_324025_Idx].push(null); }
               else { s_324025[s_324025_Idx].length = chckRange(l_324032, 0, 2147483647); };
	framePtr = F.prev;

	return result_324026;

}

function draw_finish_324013() {
	var F={procname:"backendhtml.drawFinish",prev:framePtr,filename:"backendhtml.nim",line:0};
	framePtr = F;
		F.line = 297;
		perf_308364[0].drawMain = (window.performance.now() - start_time_323964[0]);
		L1: do {
			F.line = 304;
				L2: while (true) {
				if (!(num_groups_308366[0] < (root_dom_node_311030[0].childNodes != null ? root_dom_node_311030[0].childNodes.length : 0))) break L2;
					F.line = 305;
					root_dom_node_311030[0].removeChild(root_dom_node_311030[0].lastChild);
					F.line = 306;
					pop_324020(div_cache_311029, 0);
				}
		} while(false);
		if (!((prev_mouse_cursor_style_323965[0] == mouse_308359[0].cursorStyle))) {
		F.line = 310;
		prev_mouse_cursor_style_323965[0] = mouse_308359[0].cursorStyle;
		F.line = 311;
		switch (mouse_308359[0].cursorStyle) {
		case 0:
			F.line = 313;
			root_dom_node_311030[0].style.cursor = "default";
			break;
		case 1:
			F.line = 315;
			root_dom_node_311030[0].style.cursor = "pointer";
			break;
		}
		}
		
		F.line = 318;
		keyboard_308360[0].prevInputFocusIdPath = nimCopy(null, keyboard_308360[0].inputFocusIdPath, NTI43040);
	framePtr = F.prev;

	
}

function hard_redraw_324240() {
	var F={procname:"backendhtml.hardRedraw",prev:framePtr,filename:"backendhtml.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if ((root_dom_node_311030[0] == null)) {
		F.line = 323;
		break BeforeRet;
		}
		
		F.line = 325;
		setup_root_308524();
		F.line = 327;
		draw_start_323994();
		F.line = 328;
		draw_main_308363[0]();
		F.line = 329;
		draw_finish_324013();
	} while (false);
	framePtr = F.prev;

	
}

function request_hard_redraw_324263(time_324265) {
	var F={procname:"backendhtml.requestHardRedraw",prev:framePtr,filename:"backendhtml.nim",line:0};
	framePtr = F;
		F.line = 333;
		requested_frame_308365[0] = false;
		F.line = 334;
		hard_redraw_324240();
	framePtr = F.prev;

	
}

function redraw_324279() {
	var F={procname:"backendhtml.redraw",prev:framePtr,filename:"backendhtml.nim",line:0};
	framePtr = F;
		if (!(requested_frame_308365[0])) {
		F.line = 339;
		requested_frame_308365[0] = true;
		F.line = 340;
		window.requestAnimationFrame(request_hard_redraw_324263);
		}
		
	framePtr = F.prev;

	
}

function titleHEX3D_324621(win_324624, title_324625) {
	var F={procname:"backendhtml.title=",prev:framePtr,filename:"backendhtml.nim",line:0};
	framePtr = F;
		if (!(eqStrings(win_324624.innerTitle, title_324625))) {
		F.line = 479;
		document.title = toJSStr(title_324625);
		F.line = 480;
		redraw_324279();
		}
		
	framePtr = F.prev;

	
}

function add_quoted_334601(s_334604, s_334604_Idx, x_334605) {
	var F={procname:"addQuoted.addQuoted",prev:framePtr,filename:"system.nim",line:0};
	framePtr = F;
		F.line = 4333;
		if (s_334604[s_334604_Idx] != null) { s_334604[s_334604_Idx] = (s_334604[s_334604_Idx]).concat(cstrToNimstr((x_334605)+"")); } else { s_334604[s_334604_Idx] = cstrToNimstr((x_334605)+"").slice(); };
	framePtr = F.prev;

	
}

function HEX24_333801(x_333804) {
	var result_333805 = [null];

	var F={procname:"$.$",prev:framePtr,filename:"dollars.nim",line:0};
	framePtr = F;
		F.line = 73;
		result_333805[0] = nimCopy(null, makeNimstrLit("("), NTI43040);
		F.line = 74;
		var first_element_333806 = true;
		if (!(first_element_333806)) {
		F.line = 79;
		if (result_333805[0] != null) { result_333805[0] = (result_333805[0]).concat(makeNimstrLit(", ")); } else { result_333805[0] = makeNimstrLit(", "); };
		}
		
		F.line = 81;
		if (result_333805[0] != null) { result_333805[0] = (result_333805[0]).concat(makeNimstrLit("x")); } else { result_333805[0] = makeNimstrLit("x"); };
		F.line = 82;
		if (result_333805[0] != null) { result_333805[0] = (result_333805[0]).concat(makeNimstrLit(": ")); } else { result_333805[0] = makeNimstrLit(": "); };
		F.line = 90;
		add_quoted_334601(result_333805, 0, x_333804.x);
		F.line = 91;
		first_element_333806 = false;
		if (!(first_element_333806)) {
		F.line = 79;
		if (result_333805[0] != null) { result_333805[0] = (result_333805[0]).concat(makeNimstrLit(", ")); } else { result_333805[0] = makeNimstrLit(", "); };
		}
		
		F.line = 81;
		if (result_333805[0] != null) { result_333805[0] = (result_333805[0]).concat(makeNimstrLit("y")); } else { result_333805[0] = makeNimstrLit("y"); };
		F.line = 82;
		if (result_333805[0] != null) { result_333805[0] = (result_333805[0]).concat(makeNimstrLit(": ")); } else { result_333805[0] = makeNimstrLit(": "); };
		F.line = 90;
		add_quoted_334601(result_333805, 0, x_333804.y);
		F.line = 91;
		first_element_333806 = false;
		if (!(first_element_333806)) {
		F.line = 79;
		if (result_333805[0] != null) { result_333805[0] = (result_333805[0]).concat(makeNimstrLit(", ")); } else { result_333805[0] = makeNimstrLit(", "); };
		}
		
		F.line = 81;
		if (result_333805[0] != null) { result_333805[0] = (result_333805[0]).concat(makeNimstrLit("w")); } else { result_333805[0] = makeNimstrLit("w"); };
		F.line = 82;
		if (result_333805[0] != null) { result_333805[0] = (result_333805[0]).concat(makeNimstrLit(": ")); } else { result_333805[0] = makeNimstrLit(": "); };
		F.line = 90;
		add_quoted_334601(result_333805, 0, x_333804.w);
		F.line = 91;
		first_element_333806 = false;
		if (!(first_element_333806)) {
		F.line = 79;
		if (result_333805[0] != null) { result_333805[0] = (result_333805[0]).concat(makeNimstrLit(", ")); } else { result_333805[0] = makeNimstrLit(", "); };
		}
		
		F.line = 81;
		if (result_333805[0] != null) { result_333805[0] = (result_333805[0]).concat(makeNimstrLit("h")); } else { result_333805[0] = makeNimstrLit("h"); };
		F.line = 82;
		if (result_333805[0] != null) { result_333805[0] = (result_333805[0]).concat(makeNimstrLit(": ")); } else { result_333805[0] = makeNimstrLit(": "); };
		F.line = 90;
		add_quoted_334601(result_333805, 0, x_333804.h);
		F.line = 91;
		first_element_333806 = false;
		F.line = 98;
		if (result_333805[0] != null) { result_333805[0] = (result_333805[0]).concat(makeNimstrLit(")")); } else { result_333805[0] = makeNimstrLit(")"); };
	framePtr = F.prev;

	return result_333805[0];

}

function pretty_any_327241(v_327244) {
	var result_327245 = null;

	var F={procname:"prettyAny.prettyAny",prev:framePtr,filename:"print.nim",line:0};
	framePtr = F;
		F.line = 83;
		result_327245 = nimCopy(null, HEX24_333801(v_327244), NTI43040);
	framePtr = F.prev;

	return result_327245;

}

function pretty_line_327236(v_327239) {
	var result_327240 = null;

	var F={procname:"prettyLine.prettyLine",prev:framePtr,filename:"print.nim",line:0};
	framePtr = F;
		F.line = 99;
		result_327240 = nimCopy(null, pretty_any_327241(v_327239), NTI43040);
	framePtr = F.prev;

	return result_327240;

}

function HEX5BHEX5D_148304(s_148308, x_148310) {
	var result_148311 = null;

	var F={procname:"[].[]",prev:framePtr,filename:"system.nim",line:0};
	framePtr = F;
		F.line = 3967;
		var a_148401 = x_148310.a;
		F.line = 3968;
		var l_148601 = addInt(subInt(subInt((s_148308 != null ? s_148308.length : 0), x_148310.b), a_148401), 1);
		F.line = 3969;
		result_148311 = nimCopy(null, mnewString(chckRange(l_148601, 0, 2147483647)), NTI43040);
		L1: do {
			F.line = 3970;
			var i_148609 = 0;
			F.line = 2757;
			var i_338516 = 0;
			L2: do {
				F.line = 2758;
					L3: while (true) {
					if (!(i_338516 < l_148601)) break L3;
						F.line = 3970;
						i_148609 = i_338516;
						F.line = 3970;
						result_148311[chckIndx(i_148609, 0, result_148311.length+0-1)-0] = s_148308[chckIndx(addInt(i_148609, a_148401), 0, s_148308.length+0-1)-0];
						F.line = 2760;
						i_338516 = addInt(i_338516, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_148311;

}

function HEX2EHEX2E_148239(a_148243, b_148244) {
	var result_148250 = {a: 0, b: 0};

	var F={procname:".....",prev:framePtr,filename:"system.nim",line:0};
	framePtr = F;
		F.line = 502;
		nimCopy(result_148250, {a: a_148243, b: b_148244}, NTI148247);
	framePtr = F.prev;

	return result_148250;

}

function HEX5BHEX5D_68198(s_68200, i_68201) {
	var result_68202 = 0;

	var F={procname:"system.[]",prev:framePtr,filename:"system.nim",line:0};
	framePtr = F;
		F.line = 4050;
		result_68202 = s_68200[chckIndx(subInt((s_68200 != null ? s_68200.length : 0), i_68201), 0, s_68200.length+0-1)-0];
	framePtr = F.prev;

	return result_68202;

}

function pretty_wrap_282291(str_282293) {
	var result_282294 = null;

	var F={procname:"print.prettyWrap",prev:framePtr,filename:"print.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 106;
		var indent_282295 = [];
		F.line = 107;
		var data_282296 = [];
		F.line = 108;
		var in_string_282297 = false;
		F.line = 109;
		var next_esc_282298 = false;
		L1: do {
			F.line = 110;
			var i_282306 = 0;
			F.line = 2755;
			var colontmp__338509 = 0;
			F.line = 110;
			colontmp__338509 = (str_282293 != null ? str_282293.length : 0);
			F.line = 2757;
			var i_338510 = 0;
			L2: do {
				F.line = 2758;
					L3: while (true) {
					if (!(i_338510 < colontmp__338509)) break L3;
						F.line = 110;
						i_282306 = i_338510;
						F.line = 111;
						var c_282307 = str_282293[chckIndx(i_282306, 0, str_282293.length+0-1)-0];
						if (in_string_282297) {
						F.line = 113;
						if (data_282296 != null) { addChar(data_282296, c_282307); } else { data_282296 = [c_282307]; };
						if (((c_282307 == 34) && !(next_esc_282298))) {
						F.line = 115;
						in_string_282297 = false;
						}
						
						if ((c_282307 == 92)) {
						F.line = 117;
						next_esc_282298 = true;
						}
						else {
							F.line = 119;
							next_esc_282298 = false;
						}
						
						}
						else {
						if ((ConstSet2[c_282307] != undefined)) {
						F.line = 121;
						if (indent_282295 != null) { indent_282295 = (indent_282295).concat(makeNimstrLit("  ")); } else { indent_282295 = makeNimstrLit("  "); };
						F.line = 122;
						if (data_282296 != null) { data_282296 = (data_282296).concat([c_282307].concat(makeNimstrLit("\x0A") || [],indent_282295 || [])); } else { data_282296 = [c_282307].concat(makeNimstrLit("\x0A") || [],indent_282295 || []).slice(); };
						}
						else {
						if ((ConstSet3[c_282307] != undefined)) {
						F.line = 124;
						indent_282295 = nimCopy(null, HEX5BHEX5D_148304(indent_282295, HEX2EHEX2E_148239(0, 3)), NTI43040);
						F.line = 125;
						if (data_282296 != null) { data_282296 = (data_282296).concat((makeNimstrLit("\x0A") || []).concat(indent_282295 || [],[c_282307])); } else { data_282296 = (makeNimstrLit("\x0A") || []).concat(indent_282295 || [],[c_282307]).slice(); };
						}
						else {
						if ((c_282307 == 44)) {
						F.line = 127;
						if (data_282296 != null) { data_282296 = (data_282296).concat([c_282307].concat(makeNimstrLit("\x0A") || [],indent_282295 || [])); } else { data_282296 = [c_282307].concat(makeNimstrLit("\x0A") || [],indent_282295 || []).slice(); };
						}
						else {
						if ((c_282307 == 34)) {
						F.line = 129;
						if (data_282296 != null) { addChar(data_282296, c_282307); } else { data_282296 = [c_282307]; };
						F.line = 130;
						in_string_282297 = true;
						}
						else {
						if ((c_282307 == 32)) {
						if (!((HEX5BHEX5D_68198(data_282296, 1) == 32))) {
						F.line = 133;
						if (data_282296 != null) { addChar(data_282296, c_282307); } else { data_282296 = [c_282307]; };
						}
						
						}
						else {
							F.line = 135;
							if (data_282296 != null) { addChar(data_282296, c_282307); } else { data_282296 = [c_282307]; };
						}
						}}}}}
						F.line = 2760;
						i_338510 = addInt(i_338510, 1);
					}
			} while(false);
		} while(false);
		F.line = 136;
		result_282294 = nimCopy(null, data_282296, NTI43040);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_282294;

}

function pretty_327231(v_327234) {
	var result_327235 = null;

	var F={procname:"pretty.pretty",prev:framePtr,filename:"print.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 140;
		var one_line_337040 = pretty_line_327236(v_327234);
		if ((80 < (one_line_337040 != null ? one_line_337040.length : 0))) {
		F.line = 142;
		result_327235 = nimCopy(null, pretty_wrap_282291(one_line_337040), NTI43040);
		break BeforeRet;
		}
		else {
			F.line = 144;
			result_327235 = nimCopy(null, one_line_337040, NTI43040);
			break BeforeRet;
		}
		
	} while (false);
	framePtr = F.prev;

	return result_327235;

}

function HEX5BHEX5D_337071(s_337076, i_337077) {
	var result_337079 = null;
	var result_337079_Idx = 0;

	var F={procname:"[].[]",prev:framePtr,filename:"system.nim",line:0};
	framePtr = F;
		F.line = 4053;
		result_337079 = s_337076; result_337079_Idx = chckIndx(subInt((s_337076 != null ? s_337076.length : 0), i_337077), 0, s_337076.length+0-1)-0;
	framePtr = F.prev;

	return [result_337079, result_337079_Idx];

}

function remove_all_children_316848(dom_316850) {
	var F={procname:"backendhtml.removeAllChildren",prev:framePtr,filename:"backendhtml.nim",line:0};
	framePtr = F;
		L1: do {
			F.line = 18;
				L2: while (true) {
				if (!!((dom_316850.firstChild == null))) break L2;
					F.line = 19;
					dom_316850.removeChild(dom_316850.firstChild);
				}
		} while(false);
	framePtr = F.prev;

	
}

function HEX3DHEX3D_323710(x_323713, y_323714) {
	var result_323715 = false;

	var F={procname:"==.==",prev:framePtr,filename:"system.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if (!((x_323713.x == y_323714.x))) {
		F.line = 3215;
		result_323715 = false;
		break BeforeRet;
		}
		
		if (!((x_323713.y == y_323714.y))) {
		F.line = 3215;
		result_323715 = false;
		break BeforeRet;
		}
		
		if (!((x_323713.w == y_323714.w))) {
		F.line = 3215;
		result_323715 = false;
		break BeforeRet;
		}
		
		if (!((x_323713.h == y_323714.h))) {
		F.line = 3215;
		result_323715 = false;
		break BeforeRet;
		}
		
		F.line = 3216;
		result_323715 = true;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_323715;

}

function HEX3DHEX3D_312593(x_312596, y_312597) {
	var result_312598 = false;

	var F={procname:"==.==",prev:framePtr,filename:"system.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if (!((x_312596.r == y_312597.r))) {
		F.line = 3215;
		result_312598 = false;
		break BeforeRet;
		}
		
		if (!((x_312596.g == y_312597.g))) {
		F.line = 3215;
		result_312598 = false;
		break BeforeRet;
		}
		
		if (!((x_312596.b == y_312597.b))) {
		F.line = 3215;
		result_312598 = false;
		break BeforeRet;
		}
		
		if (!((x_312596.a == y_312597.a))) {
		F.line = 3215;
		result_312598 = false;
		break BeforeRet;
		}
		
		F.line = 3216;
		result_312598 = true;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_312598;

}

function to_html_rgba_268026(c_268028) {
	var result_268029 = null;

	var F={procname:"chroma.toHtmlRgba",prev:framePtr,filename:"chroma.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 203;
		result_268029 = nimCopy(null, (makeNimstrLit("rgba(") || []).concat(cstrToNimstr(((((c_268028.r * 2.5500000000000000e+002))|0))+"") || [],makeNimstrLit(", ") || [],cstrToNimstr(((((c_268028.g * 2.5500000000000000e+002))|0))+"") || [],makeNimstrLit(", ") || [],cstrToNimstr(((((c_268028.b * 2.5500000000000000e+002))|0))+"") || [],makeNimstrLit(", ") || [],cstrToNimstr((c_268028.a)+"") || [],makeNimstrLit(")") || []), NTI43040);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_268029;

}

function HEX3DHEX3D_323793(x_323796, y_323797) {
	var result_323798 = false;

	var F={procname:"==.==",prev:framePtr,filename:"system.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if (!(eqStrings(x_323796.fontFamily, y_323797.fontFamily))) {
		F.line = 3215;
		result_323798 = false;
		break BeforeRet;
		}
		
		if (!((x_323796.fontSize == y_323797.fontSize))) {
		F.line = 3215;
		result_323798 = false;
		break BeforeRet;
		}
		
		if (!((x_323796.fontWeight == y_323797.fontWeight))) {
		F.line = 3215;
		result_323798 = false;
		break BeforeRet;
		}
		
		if (!((x_323796.lineHeight == y_323797.lineHeight))) {
		F.line = 3215;
		result_323798 = false;
		break BeforeRet;
		}
		
		if (!((x_323796.textAlignHorizontal == y_323797.textAlignHorizontal))) {
		F.line = 3215;
		result_323798 = false;
		break BeforeRet;
		}
		
		if (!((x_323796.textAlignVertical == y_323797.textAlignVertical))) {
		F.line = 3215;
		result_323798 = false;
		break BeforeRet;
		}
		
		F.line = 3216;
		result_323798 = true;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_323798;

}

function raw_get_318002(t_318006, key_318007, hc_318008, hc_318008_Idx) {
						var Tmp3;

	var result_318009 = 0;

	var F={procname:"rawGet.rawGet",prev:framePtr,filename:"hashcommon.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 54;
		hc_318008[hc_318008_Idx] = hash_92814(key_318007);
		if ((hc_318008[hc_318008_Idx] == 0)) {
		F.line = 56;
		hc_318008[hc_318008_Idx] = 314159265;
		}
		
		if (((t_318006.data != null ? t_318006.data.length : 0) == 0)) {
		F.line = 38;
		result_318009 = -1;
		break BeforeRet;
		}
		
		F.line = 39;
		var h_318150 = (hc_318008[hc_318008_Idx] & (t_318006.data != null ? (t_318006.data.length-1) : -1));
		L1: do {
			F.line = 40;
				L2: while (true) {
				if (!is_filled_106018(t_318006.data[chckIndx(h_318150, 0, t_318006.data.length+0-1)-0].Field0)) break L2;
						if (!(t_318006.data[chckIndx(h_318150, 0, t_318006.data.length+0-1)-0].Field0 == hc_318008[hc_318008_Idx])) Tmp3 = false; else {							Tmp3 = eqStrings(t_318006.data[chckIndx(h_318150, 0, t_318006.data.length+0-1)-0].Field1, key_318007);						}					if (Tmp3) {
					F.line = 46;
					result_318009 = h_318150;
					break BeforeRet;
					}
					
					F.line = 47;
					h_318150 = next_try_106035(h_318150, (t_318006.data != null ? (t_318006.data.length-1) : -1));
				}
		} while(false);
		F.line = 48;
		result_318009 = subInt(-1, h_318150);
	} while (false);
	framePtr = F.prev;

	return result_318009;

}

function has_key_322182(t_322187, key_322188) {
	var result_322189 = false;

	var F={procname:"hasKey.hasKey",prev:framePtr,filename:"tables.nim",line:0};
	framePtr = F;
		F.line = 396;
		var hc_322190 = [0];
		F.line = 397;
		result_322189 = (0 <= raw_get_318002(t_322187, key_322188, hc_322190, 0));
	framePtr = F.prev;

	return result_322189;

}

function has_key_321921(t_321926, key_321927) {
	var result_321928 = false;

	var F={procname:"hasKey.hasKey",prev:framePtr,filename:"tables.nim",line:0};
	framePtr = F;
		F.line = 891;
		result_321928 = has_key_322182(t_321926, key_321927);
	framePtr = F.prev;

	return result_321928;

}

function contains_321841(t_321846, key_321847) {
	var result_321848 = false;

	var F={procname:"contains.contains",prev:framePtr,filename:"tables.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 901;
		result_321848 = has_key_321921(t_321846, key_321847);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_321848;

}

function HEX5BHEX5D_322679(t_322685, key_322686) {
	var result_322688 = null;

	var F={procname:"[].[]",prev:framePtr,filename:"tables.nim",line:0};
	framePtr = F;
		F.line = 258;
		var hcHEX60gensym106565_322689 = [0];
		F.line = 259;
		var indexHEX60gensym106566_322698 = raw_get_318002(t_322685, key_322686, hcHEX60gensym106565_322689, 0);
		if ((0 <= indexHEX60gensym106566_322698)) {
		F.line = 260;
		result_322688 = t_322685.data[chckIndx(indexHEX60gensym106566_322698, 0, t_322685.data.length+0-1)-0].Field2;
		}
		else {
			F.line = 3482;
			var eHEX60gensym323003_323203 = null;
			F.line = 3485;
			eHEX60gensym323003_323203 = {m_type: NTI46454, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
			F.line = 263;
			eHEX60gensym323003_323203.message = nimCopy(null, (makeNimstrLit("key not found: ") || []).concat(key_322686 || []), NTI43040);
			F.line = 3478;
			eHEX60gensym323003_323203.parent = null;
			F.line = 263;
			raiseException(eHEX60gensym323003_323203, "KeyError");
		}
		
	framePtr = F.prev;

	return result_322688;

}

function HEX5BHEX5D_322382(t_322387, key_322388) {
	var result_322390 = null;

	var F={procname:"[].[]",prev:framePtr,filename:"tables.nim",line:0};
	framePtr = F;
		F.line = 857;
		result_322390 = HEX5BHEX5D_322679(t_322387, key_322388);
	framePtr = F.prev;

	return result_322390;

}

function raw_insert_320308(t_320314, data_320317, data_320317_Idx, key_320318, val_320319, hc_320320, h_320321) {
	var F={procname:"rawInsert.rawInsert",prev:framePtr,filename:"tableimpl.nim",line:0};
	framePtr = F;
		F.line = 22;
		data_320317[data_320317_Idx][chckIndx(h_320321, 0, data_320317[data_320317_Idx].length+0-1)-0].Field1 = nimCopy(null, key_320318, NTI43040);
		F.line = 23;
		nimCopy(data_320317[data_320317_Idx][chckIndx(h_320321, 0, data_320317[data_320317_Idx].length+0-1)-0].Field2, val_320319, NTI316878);
		F.line = 24;
		data_320317[data_320317_Idx][chckIndx(h_320321, 0, data_320317[data_320317_Idx].length+0-1)-0].Field0 = hc_320320;
	framePtr = F.prev;

	
}

function enlarge_319348(t_319354) {
	var F={procname:"enlarge.enlarge",prev:framePtr,filename:"tables.nim",line:0};
	framePtr = F;
		F.line = 268;
		var n_319362 = null;
		F.line = 269;
		n_319362 = new Array(chckRange(mulInt((t_319354.data != null ? t_319354.data.length : 0), 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_319354.data != null ? t_319354.data.length : 0), 2), 0, 2147483647);++i) {n_319362[i]={Field0: 0, Field1: null, Field2: {Field0: 0.0, Field1: 0.0}};}		F.line = 270;
		var Tmp1 = t_319354.data; t_319354.data = n_319362; n_319362 = Tmp1;		L2: do {
			F.line = 271;
			var i_319521 = 0;
			F.line = 2690;
			var colontmp__338538 = 0;
			F.line = 271;
			colontmp__338538 = (n_319362 != null ? (n_319362.length-1) : -1);
			F.line = 2707;
			var res_338539 = 0;
			L3: do {
				F.line = 2708;
					L4: while (true) {
					if (!(res_338539 <= colontmp__338538)) break L4;
						F.line = 271;
						i_319521 = res_338539;
						F.line = 272;
						var eh_319670 = n_319362[chckIndx(i_319521, 0, n_319362.length+0-1)-0].Field0;
						if (is_filled_106018(eh_319670)) {
						F.line = 274;
						var j_319677 = (eh_319670 & (t_319354.data != null ? (t_319354.data.length-1) : -1));
						L5: do {
							F.line = 275;
								L6: while (true) {
								if (!is_filled_106018(t_319354.data[chckIndx(j_319677, 0, t_319354.data.length+0-1)-0].Field0)) break L6;
									F.line = 276;
									j_319677 = next_try_106035(j_319677, (t_319354.data != null ? (t_319354.data.length-1) : -1));
								}
						} while(false);
						F.line = 278;
						raw_insert_320308(t_319354, t_319354, "data", n_319362[chckIndx(i_319521, 0, n_319362.length+0-1)-0].Field1, n_319362[chckIndx(i_319521, 0, n_319362.length+0-1)-0].Field2, eh_319670, j_319677);
						}
						
						F.line = 2710;
						res_338539 = addInt(res_338539, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	
}

function raw_get_known_hc_320808(t_320812, key_320813, hc_320814) {
	var result_320815 = 0;

	var F={procname:"rawGetKnownHC.rawGetKnownHC",prev:framePtr,filename:"hashcommon.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if (((t_320812.data != null ? t_320812.data.length : 0) == 0)) {
		F.line = 38;
		result_320815 = -1;
		break BeforeRet;
		}
		
		F.line = 39;
		var h_320953 = (hc_320814 & (t_320812.data != null ? (t_320812.data.length-1) : -1));
		L1: do {
			F.line = 40;
				L2: while (true) {
				if (!is_filled_106018(t_320812.data[chckIndx(h_320953, 0, t_320812.data.length+0-1)-0].Field0)) break L2;
					if (((t_320812.data[chckIndx(h_320953, 0, t_320812.data.length+0-1)-0].Field0 == hc_320814) && eqStrings(t_320812.data[chckIndx(h_320953, 0, t_320812.data.length+0-1)-0].Field1, key_320813))) {
					F.line = 46;
					result_320815 = h_320953;
					break BeforeRet;
					}
					
					F.line = 47;
					h_320953 = next_try_106035(h_320953, (t_320812.data != null ? (t_320812.data.length-1) : -1));
				}
		} while(false);
		F.line = 48;
		result_320815 = subInt(-1, h_320953);
	} while (false);
	framePtr = F.prev;

	return result_320815;

}

function HEX5BHEX5DHEX3D_317574(t_317580, key_317581, val_317582) {
	var F={procname:"[]=.[]=",prev:framePtr,filename:"tables.nim",line:0};
	framePtr = F;
		if (((t_317580.data != null ? t_317580.data.length : 0) == 0)) {
		if (!(is_power_of_two_99062(64))) {
		F.line = 118;
		failed_assert_impl_56666(makeNimstrLit("C:\\Users\\me\\.choosenim\\toolchains\\nim-#devel\\lib\\pure\\collections\\tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
		}
		
		F.line = 119;
		t_317580.counter = 0;
		F.line = 120;
		t_317580.data = new Array(64); for (var i=0;i<64;++i) {t_317580.data[i]={Field0: 0, Field1: null, Field2: {Field0: 0.0, Field1: 0.0}};}		}
		
		F.line = 57;
		var hc_318001 = [0];
		F.line = 58;
		var index_318617 = raw_get_318002(t_317580, key_317581, hc_318001, 0);
		if ((0 <= index_318617)) {
		F.line = 59;
		nimCopy(t_317580.data[chckIndx(index_318617, 0, t_317580.data.length+0-1)-0].Field2, val_317582, NTI316878);
		}
		else {
			if (((t_317580.data != null ? t_317580.data.length : 0) == 0)) {
			if (!(is_power_of_two_99062(64))) {
			F.line = 118;
			failed_assert_impl_56666(makeNimstrLit("C:\\Users\\me\\.choosenim\\toolchains\\nim-#devel\\lib\\pure\\collections\\tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
			}
			
			F.line = 119;
			t_317580.counter = 0;
			F.line = 120;
			t_317580.data = new Array(64); for (var i=0;i<64;++i) {t_317580.data[i]={Field0: 0, Field1: null, Field2: {Field0: 0.0, Field1: 0.0}};}			}
			
			if (must_rehash_106053((t_317580.data != null ? t_317580.data.length : 0), t_317580.counter)) {
			F.line = 49;
			enlarge_319348(t_317580);
			F.line = 50;
			index_318617 = raw_get_known_hc_320808(t_317580, key_317581, hc_318001[0]);
			}
			
			F.line = 51;
			index_318617 = subInt(-1, index_318617);
			F.line = 52;
			raw_insert_320308(t_317580, t_317580, "data", key_317581, val_317582, hc_318001[0], index_318617);
			F.line = 60;
			t_317580.counter = addInt(t_317580.counter, 1);
		}
		
	framePtr = F.prev;

	
}

function HEX5BHEX5DHEX3D_323359(t_323364, key_323365, val_323366) {
	var F={procname:"[]=.[]=",prev:framePtr,filename:"tables.nim",line:0};
	framePtr = F;
		F.line = 873;
		HEX5BHEX5DHEX3D_317574(t_323364, key_323365, val_323366);
	framePtr = F.prev;

	
}

function compute_text_box_321716(text_321718, width_321719, font_name_321720, font_size_321721) {
	var result_321723 = {Field0: 0.0, Field1: 0.0};

	var F={procname:"backendhtml.computeTextBox",prev:framePtr,filename:"backendhtml.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 26;
		var key_321724 = (text_321718 || []).concat(cstrToNimstr((width_321719)+"") || [],font_name_321720 || [],cstrToNimstr((font_size_321721)+"") || []);
		if (contains_321841(compute_text_box_cache_321702[0], key_321724)) {
		F.line = 28;
		nimCopy(result_321723, HEX5BHEX5D_322382(compute_text_box_cache_321702[0], key_321724), NTI321722);
		break BeforeRet;
		}
		
		F.line = 29;
		var temp_div_323249 = document.createElement("div");
		F.line = 30;
		document.body.appendChild(temp_div_323249);
		F.line = 31;
		temp_div_323249.style.fontSize = toJSStr((cstrToNimstr((font_size_321721)+"") || []).concat(makeNimstrLit("px") || []));
		F.line = 32;
		temp_div_323249.style.fontFamily = toJSStr(font_name_321720);
		F.line = 33;
		temp_div_323249.style.position = "absolute";
		F.line = 34;
		temp_div_323249.style.left = "-1000";
		F.line = 35;
		temp_div_323249.style.top = "-1000";
		F.line = 36;
		temp_div_323249.style.maxWidth = toJSStr((cstrToNimstr((width_321719)+"") || []).concat(makeNimstrLit("px") || []));
		F.line = 37;
		temp_div_323249.innerHTML = toJSStr(text_321718);
		F.line = 38;
		result_321723["Field0"] = temp_div_323249.clientWidth;
		F.line = 39;
		result_321723["Field1"] = temp_div_323249.clientHeight;
		F.line = 40;
		document.body.removeChild(temp_div_323249);
		F.line = 41;
		HEX5BHEX5DHEX3D_323359(compute_text_box_cache_321702[0], key_321724, result_321723);
	} while (false);
	framePtr = F.prev;

	return result_321723;

}

function HEX3DHEX3D_323859(x_323862, y_323863) {
	var result_323864 = false;

	var F={procname:"==.==",prev:framePtr,filename:"system.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if (!((x_323862["Field0"] == y_323863["Field0"]))) {
		F.line = 3215;
		result_323864 = false;
		break BeforeRet;
		}
		
		if (!((x_323862["Field1"] == y_323863["Field1"]))) {
		F.line = 3215;
		result_323864 = false;
		break BeforeRet;
		}
		
		if (!((x_323862["Field2"] == y_323863["Field2"]))) {
		F.line = 3215;
		result_323864 = false;
		break BeforeRet;
		}
		
		if (!((x_323862["Field3"] == y_323863["Field3"]))) {
		F.line = 3215;
		result_323864 = false;
		break BeforeRet;
		}
		
		F.line = 3216;
		result_323864 = true;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_323864;

}

function draw_diff_323678(group_323680) {
			var Tmp3;
			var Tmp4;
			var Tmp5;
			var Tmp6;
				var Tmp7;

	var F={procname:"backendhtml.drawDiff",prev:framePtr,filename:"backendhtml.nim",line:0};
	framePtr = F;
		L1: do {
			F.line = 53;
				L2: while (true) {
				if (!((div_cache_311029[0] != null ? div_cache_311029[0].length : 0) <= num_groups_308366[0])) break L2;
					F.line = 54;
					root_dom_node_311030[0].appendChild(document.createElement("div"));
					F.line = 55;
					perf_308364[0].numLowLevelCalls = addInt(perf_308364[0].numLowLevelCalls, 1);
					F.line = 56;
					if (div_cache_311029[0] != null) { div_cache_311029[0].push({id: null, idPath: null, kind: null, text: null, placeholder: null, code: null, kids: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, rotation: 0.0, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0.0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0, textAlignVertical: 0}, imageName: null, cornerRadius: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, wasDrawn: false, editableText: false, multiline: false, drawable: false}); } else { div_cache_311029[0] = [{id: null, idPath: null, kind: null, text: null, placeholder: null, code: null, kids: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, rotation: 0.0, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0.0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0, textAlignVertical: 0}, imageName: null, cornerRadius: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, wasDrawn: false, editableText: false, multiline: false, drawable: false}]; };
				}
		} while(false);
		F.line = 58;
		var dom_323699 = root_dom_node_311030[0].childNodes[chckIndx(num_groups_308366[0], 0, root_dom_node_311030[0].childNodes.length+0-1)-0];
		F.line = 59;
		var cache_group_323700 = div_cache_311029[0][chckIndx(num_groups_308366[0], 0, div_cache_311029[0].length+0-1)-0];
		if (!(eqStrings(cache_group_323700.idPath, current_308355[0].idPath))) {
		F.line = 62;
		perf_308364[0].numLowLevelCalls = addInt(perf_308364[0].numLowLevelCalls, 1);
		F.line = 63;
		cache_group_323700.id = nimCopy(null, current_308355[0].id, NTI43040);
		F.line = 64;
		cache_group_323700.idPath = nimCopy(null, current_308355[0].idPath, NTI43040);
		F.line = 65;
		dom_323699.id = toJSStr(current_308355[0].idPath);
		}
		
		if (!((cache_group_323700.drawable == current_308355[0].drawable))) {
		F.line = 68;
		remove_all_children_316848(dom_323699);
		F.line = 69;
		cache_group_323700.drawable = current_308355[0].drawable;
		if (current_308355[0].drawable) {
		F.line = 71;
		var canvas_node_323709 = document.createElement("canvas");
		F.line = 72;
		canvas_node_323709.id = toJSStr((current_308355[0].idPath || []).concat(makeNimstrLit("-canvas") || []));
		F.line = 73;
		canvas_node_323709.style.width = toJSStr((cstrToNimstr((current_308355[0].box.w)+"") || []).concat(makeNimstrLit("px") || []));
		F.line = 74;
		canvas_node_323709.style.height = toJSStr((cstrToNimstr((current_308355[0].box.h)+"") || []).concat(makeNimstrLit("px") || []));
		F.line = 75;
		canvas_node_323709.setAttribute("width", toJSStr(cstrToNimstr((current_308355[0].box.w)+"")));
		F.line = 76;
		canvas_node_323709.setAttribute("height", toJSStr(cstrToNimstr((current_308355[0].box.h)+"")));
		F.line = 77;
		dom_323699.appendChild(canvas_node_323709);
		}
		
		}
		
		if (!(HEX3DHEX3D_323710(cache_group_323700.screenBox, current_308355[0].screenBox))) {
		F.line = 80;
		perf_308364[0].numLowLevelCalls = addInt(perf_308364[0].numLowLevelCalls, 1);
		F.line = 81;
		nimCopy(cache_group_323700.screenBox, current_308355[0].screenBox, NTI305690);
		F.line = 82;
		dom_323699.style.position = "absolute";
		F.line = 83;
		dom_323699.style.left = toJSStr((cstrToNimstr((current_308355[0].screenBox.x)+"") || []).concat(makeNimstrLit("px") || []));
		F.line = 84;
		dom_323699.style.top = toJSStr((cstrToNimstr((current_308355[0].screenBox.y)+"") || []).concat(makeNimstrLit("px") || []));
		F.line = 85;
		dom_323699.style.width = toJSStr((cstrToNimstr((current_308355[0].screenBox.w)+"") || []).concat(makeNimstrLit("px") || []));
		F.line = 86;
		dom_323699.style.height = toJSStr((cstrToNimstr((current_308355[0].screenBox.h)+"") || []).concat(makeNimstrLit("px") || []));
		if (eqStrings(current_308355[0].kind, makeNimstrLit("text"))) {
		if ((0 < (dom_323699.childNodes != null ? dom_323699.childNodes.length : 0))) {
		F.line = 90;
		var text_area_node_323749 = dom_323699.childNodes[chckIndx(0, 0, dom_323699.childNodes.length+0-1)-0];
		F.line = 91;
		text_area_node_323749.style.width = toJSStr((cstrToNimstr((current_308355[0].box.w)+"") || []).concat(makeNimstrLit("px") || []));
		F.line = 92;
		text_area_node_323749.style.height = toJSStr((cstrToNimstr((current_308355[0].box.h)+"") || []).concat(makeNimstrLit("px") || []));
		}
		
		}
		
		if (current_308355[0].drawable) {
		if ((0 < (dom_323699.childNodes != null ? dom_323699.childNodes.length : 0))) {
		F.line = 96;
		var canvas_node_323756 = dom_323699.childNodes[chckIndx(0, 0, dom_323699.childNodes.length+0-1)-0];
		F.line = 97;
		canvas_node_323756.style.width = toJSStr((cstrToNimstr((current_308355[0].box.w)+"") || []).concat(makeNimstrLit("px") || []));
		F.line = 98;
		canvas_node_323756.style.height = toJSStr((cstrToNimstr((current_308355[0].box.h)+"") || []).concat(makeNimstrLit("px") || []));
		F.line = 99;
		canvas_node_323756.setAttribute("width", toJSStr(cstrToNimstr((current_308355[0].box.w)+"")));
		F.line = 100;
		canvas_node_323756.setAttribute("height", toJSStr(cstrToNimstr((current_308355[0].box.h)+"")));
		}
		
		}
		
		}
		
			if (!(HEX3DHEX3D_312593(cache_group_323700.fill, current_308355[0].fill))) Tmp3 = true; else {				Tmp3 = !(eqStrings(cache_group_323700.kind, current_308355[0].kind));			}		if (Tmp3) {
		F.line = 103;
		perf_308364[0].numLowLevelCalls = addInt(perf_308364[0].numLowLevelCalls, 1);
		F.line = 104;
		nimCopy(cache_group_323700.fill, current_308355[0].fill, NTI262003);
		if (eqStrings(current_308355[0].kind, makeNimstrLit("text"))) {
		F.line = 106;
		dom_323699.style.color = toJSStr(to_html_rgba_268026(current_308355[0].fill));
		F.line = 107;
		dom_323699.style.backgroundColor = "rgba(0,0,0,0)";
		}
		else {
			F.line = 109;
			dom_323699.style.backgroundColor = toJSStr(to_html_rgba_268026(current_308355[0].fill));
			F.line = 110;
			dom_323699.style.color = "rgba(0,0,0,0)";
		}
		
		}
		
			if (!(HEX3DHEX3D_312593(cache_group_323700.stroke, current_308355[0].stroke))) Tmp4 = true; else {				Tmp4 = !((cache_group_323700.strokeWeight == current_308355[0].strokeWeight));			}		if (Tmp4) {
		F.line = 114;
		perf_308364[0].numLowLevelCalls = addInt(perf_308364[0].numLowLevelCalls, 1);
		F.line = 115;
		nimCopy(cache_group_323700.stroke, current_308355[0].stroke, NTI262003);
		F.line = 116;
		cache_group_323700.strokeWeight = current_308355[0].strokeWeight;
		if ((0.0 < current_308355[0].strokeWeight)) {
		F.line = 118;
		dom_323699.style.borderStyle = "solid";
		F.line = 119;
		dom_323699.style.boxSizing = "border-box";
		F.line = 120;
		dom_323699.style.borderColor = toJSStr(to_html_rgba_268026(current_308355[0].stroke));
		F.line = 121;
		dom_323699.style.borderWidth = toJSStr((cstrToNimstr((current_308355[0].strokeWeight)+"") || []).concat(makeNimstrLit("px") || []));
		}
		else {
			F.line = 123;
			dom_323699.style.borderStyle = "none";
		}
		
		}
		
		if (!((cache_group_323700.transparency == current_308355[0].transparency))) {
		F.line = 126;
		perf_308364[0].numLowLevelCalls = addInt(perf_308364[0].numLowLevelCalls, 1);
		F.line = 127;
		cache_group_323700.transparency = current_308355[0].transparency;
		F.line = 128;
		dom_323699.style.opacity = toJSStr(cstrToNimstr((current_308355[0].transparency)+""));
		}
		
		if (!(HEX3DHEX3D_323793(cache_group_323700.textStyle, current_308355[0].textStyle))) {
		F.line = 131;
		perf_308364[0].numLowLevelCalls = addInt(perf_308364[0].numLowLevelCalls, 1);
		F.line = 132;
		nimCopy(cache_group_323700.textStyle, current_308355[0].textStyle, NTI308205);
		F.line = 133;
		dom_323699.style.fontFamily = toJSStr(current_308355[0].textStyle.fontFamily);
		F.line = 134;
		dom_323699.style.fontSize = toJSStr((cstrToNimstr((current_308355[0].textStyle.fontSize)+"") || []).concat(makeNimstrLit("px") || []));
		F.line = 135;
		dom_323699.style.fontWeight = toJSStr(cstrToNimstr((current_308355[0].textStyle.fontWeight)+""));
		}
		
			if (!eqStrings(cache_group_323700.kind, makeNimstrLit("text"))) Tmp5 = false; else {				Tmp5 = !(eqStrings(current_308355[0].kind, makeNimstrLit("text")));			}		if (Tmp5) {
		F.line = 139;
		remove_all_children_316848(dom_323699);
		F.line = 140;
		cache_group_323700.text = nimCopy(null, [], NTI43040);
		}
		
		if (eqStrings(current_308355[0].kind, makeNimstrLit("text"))) {
		if (current_308355[0].editableText) {
		F.line = 145;
		var text_area_node_323832 = null;
			if ((cache_group_323700.editableText == false)) Tmp6 = true; else {				Tmp6 = ((dom_323699.childNodes != null ? dom_323699.childNodes.length : 0) == 0);			}		if (Tmp6) {
		F.line = 147;
		remove_all_children_316848(dom_323699);
		if (current_308355[0].multiline) {
		F.line = 149;
		text_area_node_323832 = document.createElement("textarea");
		}
		else {
			F.line = 151;
			text_area_node_323832 = document.createElement("input");
		}
		
		F.line = 152;
		text_area_node_323832.setAttribute("type", "text");
		F.line = 153;
		text_area_node_323832.style.border = "none";
		F.line = 154;
		text_area_node_323832.style.outline = "none";
		F.line = 155;
		text_area_node_323832.style.width = toJSStr((cstrToNimstr((current_308355[0].box.w)+"") || []).concat(makeNimstrLit("px") || []));
		F.line = 156;
		text_area_node_323832.style.height = toJSStr((cstrToNimstr((current_308355[0].box.h)+"") || []).concat(makeNimstrLit("px") || []));
		F.line = 157;
		text_area_node_323832.style.backgroundColor = "transparent";
		F.line = 158;
		text_area_node_323832.style.fontFamily = "inherit";
		F.line = 159;
		text_area_node_323832.style.fontSize = "inherit";
		F.line = 160;
		text_area_node_323832.style.fontWeight = "inherit";
		F.line = 161;
		text_area_node_323832.style.padding = "0px";
		F.line = 162;
		text_area_node_323832.style.resize = "none";
		F.line = 164;
		dom_323699.appendChild(text_area_node_323832);
		F.line = 165;
		cache_group_323700.text = nimCopy(null, [], NTI43040);
		F.line = 166;
		cache_group_323700.placeholder = nimCopy(null, [], NTI43040);
		F.line = 167;
		cache_group_323700.editableText = current_308355[0].editableText;
		}
		else {
			F.line = 169;
			text_area_node_323832 = dom_323699.childNodes[chckIndx(0, 0, dom_323699.childNodes.length+0-1)-0];
		}
		
		F.line = 171;
		cache_group_323700.editableText = true;
		if (!(eqStrings(cache_group_323700.text, current_308355[0].text))) {
		F.line = 174;
		cache_group_323700.text = nimCopy(null, current_308355[0].text, NTI43040);
		F.line = 176;
		text_area_node_323832.value = toJSStr(current_308355[0].text);
		}
		
		if (!(eqStrings(cache_group_323700.placeholder, current_308355[0].placeholder))) {
		F.line = 179;
		cache_group_323700.placeholder = nimCopy(null, current_308355[0].placeholder, NTI43040);
		F.line = 180;
		text_area_node_323832.setAttribute("placeholder", toJSStr(current_308355[0].placeholder));
		}
		
		}
		else {
			if ((cache_group_323700.editableText == true)) {
			F.line = 185;
			remove_all_children_316848(dom_323699);
			F.line = 186;
			cache_group_323700.text = nimCopy(null, [], NTI43040);
			F.line = 187;
			cache_group_323700.editableText = current_308355[0].editableText;
			}
			
			if (!(eqStrings(cache_group_323700.text, current_308355[0].text))) {
			F.line = 190;
			perf_308364[0].numLowLevelCalls = addInt(perf_308364[0].numLowLevelCalls, 1);
			F.line = 191;
			cache_group_323700.text = nimCopy(null, current_308355[0].text, NTI43040);
			F.line = 194;
			remove_all_children_316848(dom_323699);
			F.line = 196;
			var text_div_323850 = document.createElement("span");
			F.line = 197;
			dom_323699.appendChild(text_div_323850);
			if (!(eqStrings(current_308355[0].text, []))) {
			F.line = 201;
			var text_dom_323853 = document.createTextNode(toJSStr(current_308355[0].text));
			F.line = 202;
			text_div_323850.appendChild(text_dom_323853);
			}
			
				if (!((current_308355[0].textStyle.textAlignHorizontal == -1))) Tmp7 = true; else {					Tmp7 = !((current_308355[0].textStyle.textAlignVertical == 1));				}			if (Tmp7) {
			F.line = 205;
			var box_323854 = compute_text_box_321716(current_308355[0].text, current_308355[0].screenBox.w, current_308355[0].textStyle.fontFamily, current_308355[0].textStyle.fontSize);
			F.line = 211;
			text_div_323850.style.position = "absolute";
			F.line = 212;
			switch (current_308355[0].textStyle.textAlignHorizontal) {
			case -1:
				F.line = 214;
				text_div_323850.style.left = "0px";
				break;
			case 1:
				F.line = 216;
				text_div_323850.style.left = toJSStr((cstrToNimstr(((current_308355[0].screenBox.w - box_323854["Field0"]))+"") || []).concat(makeNimstrLit("px") || []));
				break;
			default: 
				F.line = 218;
				text_div_323850.style.left = toJSStr((cstrToNimstr((((current_308355[0].screenBox.w / 2.0000000000000000e+000) - (box_323854["Field0"] / 2.0000000000000000e+000)))+"") || []).concat(makeNimstrLit("px") || []));
				break;
			}
			F.line = 220;
			switch (current_308355[0].textStyle.textAlignVertical) {
			case -1:
				F.line = 222;
				text_div_323850.style.top = "0px";
				break;
			case 1:
				F.line = 224;
				text_div_323850.style.top = toJSStr((cstrToNimstr(((current_308355[0].screenBox.h - box_323854["Field1"]))+"") || []).concat(makeNimstrLit("px") || []));
				break;
			default: 
				F.line = 226;
				text_div_323850.style.top = toJSStr((cstrToNimstr((((current_308355[0].screenBox.h / 2.0000000000000000e+000) - (box_323854["Field1"] / 2.0000000000000000e+000)))+"") || []).concat(makeNimstrLit("px") || []));
				break;
			}
			}
			
			}
			
		}
		
		}
		
		if (!(eqStrings(cache_group_323700.imageName, current_308355[0].imageName))) {
		F.line = 230;
		cache_group_323700.imageName = nimCopy(null, current_308355[0].imageName, NTI43040);
		if (!(eqStrings(current_308355[0].imageName, []))) {
		F.line = 232;
		dom_323699.style.backgroundImage = toJSStr((makeNimstrLit("url(") || []).concat(current_308355[0].imageName || [],makeNimstrLit(".png)") || []));
		F.line = 233;
		dom_323699.style.backgroundSize = "100% 100%";
		}
		else {
			F.line = 235;
			dom_323699.style.backgroundImage = "";
		}
		
		}
		
		if (!(HEX3DHEX3D_323859(cache_group_323700.cornerRadius, current_308355[0].cornerRadius))) {
		F.line = 238;
		nimCopy(cache_group_323700.cornerRadius, current_308355[0].cornerRadius, NTI308251);
		F.line = 243;
		dom_323699.style.borderRadius = toJSStr((cstrToNimstr((current_308355[0].cornerRadius["Field0"])+"") || []).concat(makeNimstrLit("px ") || [],cstrToNimstr((current_308355[0].cornerRadius["Field1"])+"") || [],makeNimstrLit("px ") || [],cstrToNimstr((current_308355[0].cornerRadius["Field2"])+"") || [],makeNimstrLit("px ") || [],cstrToNimstr((current_308355[0].cornerRadius["Field3"])+"") || [],makeNimstrLit("px") || []));
		}
		
		F.line = 247;
		cache_group_323700.kind = nimCopy(null, current_308355[0].kind, NTI43040);
		F.line = 249;
		num_groups_308366[0] = addInt(num_groups_308366[0], 1);
	framePtr = F.prev;

	
}

function draw_323948(group_323950) {
	var F={procname:"backendhtml.draw",prev:framePtr,filename:"backendhtml.nim",line:0};
	framePtr = F;
		F.line = 253;
		draw_diff_323678(group_323950);
	framePtr = F.prev;

	
}

function HEX2B_308715(a_308717, b_308718) {
	var result_308719 = {x: 0.0, y: 0.0, w: 0.0, h: 0.0};

	var F={procname:"uibase.+",prev:framePtr,filename:"uibase.nim",line:0};
	framePtr = F;
		F.line = 173;
		result_308719.x = (a_308717.x + b_308718.x);
		F.line = 174;
		result_308719.y = (a_308717.y + b_308718.y);
		F.line = 175;
		result_308719.w = a_308717.w;
		F.line = 176;
		result_308719.h = a_308717.h;
	framePtr = F.prev;

	return result_308719;

}

function box_325508(x_325510, y_325511, w_325512, h_325513) {
	var F={procname:"fidget.box",prev:framePtr,filename:"fidget.nim",line:0};
	framePtr = F;
		F.line = 221;
		current_308355[0].box.x = x_325510;
		F.line = 222;
		current_308355[0].box.y = y_325511;
		F.line = 223;
		current_308355[0].box.w = w_325512;
		F.line = 224;
		current_308355[0].box.h = h_325513;
		F.line = 225;
		nimCopy(current_308355[0].screenBox, current_308355[0].box, NTI305690);
		if (!((parent_308350[0] == null))) {
		F.line = 227;
		nimCopy(current_308355[0].screenBox, HEX2B_308715(current_308355[0].box, parent_308350[0].screenBox), NTI305690);
		}
		
	framePtr = F.prev;

	
}

function box_337220(x_337226, y_337227, w_337228, h_337229) {
	var F={procname:"box.box",prev:framePtr,filename:"fidget.nim",line:0};
	framePtr = F;
		F.line = 232;
		box_325508(x_337226, y_337227, w_337228, h_337229);
	framePtr = F.prev;

	
}

function box_337276(x_337282, y_337283, w_337284, h_337285) {
	var F={procname:"box.box",prev:framePtr,filename:"fidget.nim",line:0};
	framePtr = F;
		F.line = 232;
		box_325508(x_337282, y_337283, w_337284, h_337285);
	framePtr = F.prev;

	
}

function substr_71222(s_71224, first_71225, last_71226) {
	var result_71227 = null;

	var F={procname:"system.substr",prev:framePtr,filename:"system.nim",line:0};
	framePtr = F;
		F.line = 4506;
		var first_71228 = nimMax(first_71225, 0);
		F.line = 4507;
		var l_71230 = nimMax(addInt(subInt(nimMin(last_71226, (s_71224 != null ? (s_71224.length-1) : -1)), first_71228), 1), 0);
		F.line = 4508;
		result_71227 = nimCopy(null, mnewString(chckRange(l_71230, 0, 2147483647)), NTI43040);
		L1: do {
			F.line = 4509;
			var i_71239 = 0;
			F.line = 2717;
			var colontmp__270361 = 0;
			F.line = 4509;
			colontmp__270361 = subInt(l_71230, 1);
			F.line = 2728;
			var res_270362 = 0;
			L2: do {
				F.line = 2729;
					L3: while (true) {
					if (!(res_270362 <= colontmp__270361)) break L3;
						F.line = 4509;
						i_71239 = res_270362;
						F.line = 4510;
						result_71227[chckIndx(i_71239, 0, result_71227.length+0-1)-0] = s_71224[chckIndx(addInt(i_71239, first_71228), 0, s_71224.length+0-1)-0];
						F.line = 2731;
						res_270362 = addInt(res_270362, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_71227;

}

function nsuStrip(s_200075, leading_200076, trailing_200077, chars_200079) {
					var Tmp5;

	var result_200080 = null;

	var F={procname:"strutils.strip",prev:framePtr,filename:"strutils.nim",line:0};
	framePtr = F;
		F.line = 2793;
		var first_200082 = 0;
		F.line = 2794;
		var last_200083 = subInt((s_200075 != null ? s_200075.length : 0), 1);
		if (leading_200076) {
		L1: do {
			F.line = 2796;
				L2: while (true) {
				if (!((first_200082 <= last_200083) && (chars_200079[s_200075[chckIndx(first_200082, 0, s_200075.length+0-1)-0]] != undefined))) break L2;
					F.line = 2796;
					first_200082 = addInt(first_200082, 1);
				}
		} while(false);
		}
		
		if (trailing_200077) {
		L3: do {
			F.line = 2798;
				L4: while (true) {
					if (!(0 <= last_200083)) Tmp5 = false; else {						Tmp5 = (chars_200079[s_200075[chckIndx(last_200083, 0, s_200075.length+0-1)-0]] != undefined);					}				if (!Tmp5) break L4;
					F.line = 2798;
					last_200083 = subInt(last_200083, 1);
				}
		} while(false);
		}
		
		F.line = 2799;
		result_200080 = nimCopy(null, substr_71222(s_200075, first_200082, last_200083), NTI43040);
	framePtr = F.prev;

	return result_200080;

}

function c2n_265153(hex_265155, i_265156) {
	var result_265157 = 0;

	var F={procname:"chroma.c2n",prev:framePtr,filename:"chroma.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 41;
		var c_265162 = hex_265155[chckIndx(i_265156, 0, hex_265155.length+0-1)-0];
		F.line = 42;
		switch (c_265162) {
		case 48:
		case 49:
		case 50:
		case 51:
		case 52:
		case 53:
		case 54:
		case 55:
		case 56:
		case 57:
			F.line = 43;
			result_265157 = subInt(c_265162, 48);
			break BeforeRet;
			break;
		case 97:
		case 98:
		case 99:
		case 100:
		case 101:
		case 102:
			F.line = 44;
			result_265157 = subInt(addInt(10, c_265162), 97);
			break BeforeRet;
			break;
		case 65:
		case 66:
		case 67:
		case 68:
		case 69:
		case 70:
			F.line = 45;
			result_265157 = subInt(addInt(10, c_265162), 65);
			break BeforeRet;
			break;
		default: 
			F.line = 3482;
			var eHEX60gensym265207_265403 = null;
			F.line = 3485;
			eHEX60gensym265207_265403 = {m_type: NTI262033, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
			F.line = 47;
			eHEX60gensym265207_265403.message = nimCopy(null, makeNimstrLit("format is not hex"), NTI43040);
			F.line = 3478;
			eHEX60gensym265207_265403.parent = null;
			F.line = 47;
			raiseException(eHEX60gensym265207_265403, "InvalidColor");
			break;
		}
	} while (false);
	framePtr = F.prev;

	return result_265157;

}

function parse_html_hex_tiny_266474(hex_266476) {
	var result_266477 = {r: 0.0, g: 0.0, b: 0.0, a: 0.0};

	var F={procname:"chroma.parseHtmlHexTiny",prev:framePtr,filename:"chroma.nim",line:0};
	framePtr = F;
		if (!((hex_266476[chckIndx(0, 0, hex_266476.length+0-1)-0] == 35))) {
		F.line = 3482;
		var eHEX60gensym266480_266603 = null;
		F.line = 3485;
		eHEX60gensym266480_266603 = {m_type: NTI262033, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 122;
		eHEX60gensym266480_266603.message = nimCopy(null, makeNimstrLit("Expected \'#\'"), NTI43040);
		F.line = 3478;
		eHEX60gensym266480_266603.parent = null;
		F.line = 122;
		raiseException(eHEX60gensym266480_266603, "InvalidColor");
		}
		
		if (!(((hex_266476 != null ? hex_266476.length : 0) == 4))) {
		F.line = 123;
		failed_assert_impl_56666(makeNimstrLit("C:\\Users\\me\\Dropbox\\p\\istrolid2\\libs\\chroma\\src\\chroma.nim(123, 10) `hex.len == 4` "));
		}
		
		F.line = 124;
		result_266477.r = (c2n_265153(hex_266476, 1) / 1.5000000000000000e+001);
		F.line = 125;
		result_266477.g = (c2n_265153(hex_266476, 2) / 1.5000000000000000e+001);
		F.line = 126;
		result_266477.b = (c2n_265153(hex_266476, 3) / 1.5000000000000000e+001);
		F.line = 127;
		result_266477.a = 1.0000000000000000e+000;
	framePtr = F.prev;

	return result_266477;

}

function parse_hex_265453(hex_265455) {
	var result_265456 = {r: 0.0, g: 0.0, b: 0.0, a: 0.0};

	var F={procname:"chroma.parseHex",prev:framePtr,filename:"chroma.nim",line:0};
	framePtr = F;
		if (!(((hex_265455 != null ? hex_265455.length : 0) == 6))) {
		F.line = 55;
		failed_assert_impl_56666(makeNimstrLit("C:\\Users\\me\\Dropbox\\p\\istrolid2\\libs\\chroma\\src\\chroma.nim(55, 10) `hex.len == 6` "));
		}
		
		F.line = 56;
		result_265456.r = (addInt(mulInt(c2n_265153(hex_265455, 0), 16), c2n_265153(hex_265455, 1)) / 2.5500000000000000e+002);
		F.line = 57;
		result_265456.g = (addInt(mulInt(c2n_265153(hex_265455, 2), 16), c2n_265153(hex_265455, 3)) / 2.5500000000000000e+002);
		F.line = 58;
		result_265456.b = (addInt(mulInt(c2n_265153(hex_265455, 4), 16), c2n_265153(hex_265455, 5)) / 2.5500000000000000e+002);
		F.line = 59;
		result_265456.a = 1.0000000000000000e+000;
	framePtr = F.prev;

	return result_265456;

}

function parse_html_hex_266286(hex_266288) {
	var result_266289 = {r: 0.0, g: 0.0, b: 0.0, a: 0.0};

	var F={procname:"chroma.parseHtmlHex",prev:framePtr,filename:"chroma.nim",line:0};
	framePtr = F;
		F.line = 99;
		if (!((hex_266288[chckIndx(0, 0, hex_266288.length+0-1)-0] == 35))) {
		F.line = 3482;
		var eHEX60gensym266292_266403 = null;
		F.line = 3485;
		eHEX60gensym266292_266403 = {m_type: NTI262033, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 104;
		eHEX60gensym266292_266403.message = nimCopy(null, makeNimstrLit("Expected \'#\'"), NTI43040);
		F.line = 3478;
		eHEX60gensym266292_266403.parent = null;
		F.line = 104;
		raiseException(eHEX60gensym266292_266403, "InvalidColor");
		}
		
		nimCopy(result_266289, parse_hex_265453(HEX5BHEX5D_148304(hex_266288, HEX2EHEX2E_148239(1, 1))), NTI262003);
	framePtr = F.prev;

	return result_266289;

}

function HEX5BHEX5D_122681(s_122685, x_122687) {
	var result_122688 = null;

	var F={procname:"[].[]",prev:framePtr,filename:"system.nim",line:0};
	framePtr = F;
		F.line = 3967;
		var a_122801 = x_122687.a;
		F.line = 3968;
		var l_123001 = addInt(subInt(x_122687.b, a_122801), 1);
		F.line = 3969;
		result_122688 = nimCopy(null, mnewString(chckRange(l_123001, 0, 2147483647)), NTI43040);
		L1: do {
			F.line = 3970;
			var i_123009 = 0;
			F.line = 2757;
			var i_338565 = 0;
			L2: do {
				F.line = 2758;
					L3: while (true) {
					if (!(i_338565 < l_123001)) break L3;
						F.line = 3970;
						i_123009 = i_338565;
						F.line = 3970;
						result_122688[chckIndx(i_123009, 0, result_122688.length+0-1)-0] = s_122685[chckIndx(addInt(i_123009, a_122801), 0, s_122685.length+0-1)-0];
						F.line = 2760;
						i_338565 = addInt(i_338565, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_122688;

}

function HEX2EHEX2E_122620(a_122624, b_122625) {
	var result_122627 = {a: 0, b: 0};

	var F={procname:".....",prev:framePtr,filename:"system.nim",line:0};
	framePtr = F;
		F.line = 502;
		nimCopy(result_122627, {a: a_122624, b: b_122625}, NTI103907);
	framePtr = F.prev;

	return result_122627;

}

function nsuFindChar(s_196816, sub_196817, start_196818, last_196819) {
		var Tmp1;

	var result_196821 = 0;

	var F={procname:"strutils.find",prev:framePtr,filename:"strutils.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 1867;
		if ((last_196819 == 0)) {
		Tmp1 = (s_196816 != null ? (s_196816.length-1) : -1);
		}
		else {
		Tmp1 = last_196819;
		}
		
		var last_196823 = Tmp1;
		L2: do {
			F.line = 1879;
			var i_197206 = 0;
			F.line = 2717;
			var colontmp__338582 = 0;
			F.line = 1879;
			colontmp__338582 = start_196818;
			F.line = 2728;
			var res_338583 = colontmp__338582;
			L3: do {
				F.line = 2729;
					L4: while (true) {
					if (!(res_338583 <= last_196823)) break L4;
						F.line = 1879;
						i_197206 = res_338583;
						if ((sub_196817 == s_196816[chckIndx(i_197206, 0, s_196816.length+0-1)-0])) {
						F.line = 1880;
						result_196821 = i_197206;
						break BeforeRet;
						}
						
						F.line = 2731;
						res_338583 = addInt(res_338583, 1);
					}
			} while(false);
		} while(false);
		F.line = 1881;
		result_196821 = -1;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_196821;

}

function substr_71253(s_71255, first_71256) {
	var result_71258 = null;

	var F={procname:"system.substr",prev:framePtr,filename:"system.nim",line:0};
	framePtr = F;
		F.line = 4513;
		result_71258 = nimCopy(null, substr_71222(s_71255, first_71256, (s_71255 != null ? (s_71255.length-1) : -1)), NTI43040);
	framePtr = F.prev;

	return result_71258;

}

function nsuInitSkipTable(a_196539, sub_196540) {
	var F={procname:"strutils.initSkipTable",prev:framePtr,filename:"strutils.nim",line:0};
	framePtr = F;
		F.line = 1803;
		var m_196541 = (sub_196540 != null ? sub_196540.length : 0);
		F.line = 1804;
		var i_196543 = 0;
		L1: do {
			F.line = 1805;
				L2: while (true) {
				if (!(i_196543 <= 248)) break L2;
					F.line = 1806;
					a_196539[chckIndx(chckRange(addInt(i_196543, 0), 0, 255), 0, a_196539.length+0-1)-0] = m_196541;
					F.line = 1807;
					a_196539[chckIndx(chckRange(addInt(i_196543, 1), 0, 255), 0, a_196539.length+0-1)-0] = m_196541;
					F.line = 1808;
					a_196539[chckIndx(chckRange(addInt(i_196543, 2), 0, 255), 0, a_196539.length+0-1)-0] = m_196541;
					F.line = 1809;
					a_196539[chckIndx(chckRange(addInt(i_196543, 3), 0, 255), 0, a_196539.length+0-1)-0] = m_196541;
					F.line = 1810;
					a_196539[chckIndx(chckRange(addInt(i_196543, 4), 0, 255), 0, a_196539.length+0-1)-0] = m_196541;
					F.line = 1811;
					a_196539[chckIndx(chckRange(addInt(i_196543, 5), 0, 255), 0, a_196539.length+0-1)-0] = m_196541;
					F.line = 1812;
					a_196539[chckIndx(chckRange(addInt(i_196543, 6), 0, 255), 0, a_196539.length+0-1)-0] = m_196541;
					F.line = 1813;
					a_196539[chckIndx(chckRange(addInt(i_196543, 7), 0, 255), 0, a_196539.length+0-1)-0] = m_196541;
					F.line = 1814;
					i_196543 = addInt(i_196543, 8);
				}
		} while(false);
		L3: do {
			F.line = 1816;
			var i_196559 = 0;
			F.line = 2755;
			var colontmp__270352 = 0;
			F.line = 1816;
			colontmp__270352 = subInt(m_196541, 1);
			F.line = 2757;
			var i_270353 = 0;
			L4: do {
				F.line = 2758;
					L5: while (true) {
					if (!(i_270353 < colontmp__270352)) break L5;
						F.line = 1816;
						i_196559 = i_270353;
						F.line = 1817;
						a_196539[chckIndx(sub_196540[chckIndx(i_196559, 0, sub_196540.length+0-1)-0], 0, a_196539.length+0-1)-0] = subInt(subInt(m_196541, 1), i_196559);
						F.line = 2760;
						i_270353 = addInt(i_270353, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	
}

function nsuFindStrA(a_196575, s_196576, sub_196577, start_196578, last_196579) {
		var Tmp1;

	var result_196581 = 0;

	var F={procname:"strutils.find",prev:framePtr,filename:"strutils.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 1827;
		if ((last_196579 == 0)) {
		Tmp1 = (s_196576 != null ? (s_196576.length-1) : -1);
		}
		else {
		Tmp1 = last_196579;
		}
		
		var last_196583 = Tmp1;
		F.line = 1828;
		var sub_last_196584 = subInt((sub_196577 != null ? sub_196577.length : 0), 1);
		if ((sub_last_196584 == -1)) {
		F.line = 1833;
		result_196581 = start_196578;
		break BeforeRet;
		}
		
		F.line = 1837;
		var skip_196585 = start_196578;
		L2: do {
			F.line = 1839;
				L3: while (true) {
				if (!(sub_last_196584 <= subInt(last_196583, skip_196585))) break L3;
					F.line = 1840;
					var i_196586 = sub_last_196584;
					L4: do {
						F.line = 1841;
							L5: while (true) {
							if (!(s_196576[chckIndx(addInt(skip_196585, i_196586), 0, s_196576.length+0-1)-0] == sub_196577[chckIndx(i_196586, 0, sub_196577.length+0-1)-0])) break L5;
								if ((i_196586 == 0)) {
								F.line = 1843;
								result_196581 = skip_196585;
								break BeforeRet;
								}
								
								F.line = 1844;
								i_196586 = subInt(i_196586, 1);
							}
					} while(false);
					F.line = 1845;
					skip_196585 = addInt(skip_196585, a_196575[chckIndx(s_196576[chckIndx(addInt(skip_196585, sub_last_196584), 0, s_196576.length+0-1)-0], 0, a_196575.length+0-1)-0]);
				}
		} while(false);
		F.line = 1846;
		result_196581 = -1;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_196581;

}

function nsuReplaceStr(s_198116, sub_198117, by_198118) {
	var result_198119 = null;

	var F={procname:"strutils.replace",prev:framePtr,filename:"strutils.nim",line:0};
	framePtr = F;
		F.line = 2068;
		result_198119 = nimCopy(null, [], NTI43040);
		F.line = 2069;
		var sub_len_198120 = (sub_198117 != null ? sub_198117.length : 0);
		if ((sub_len_198120 == 0)) {
		F.line = 2071;
		result_198119 = nimCopy(null, s_198116, NTI43040);
		}
		else {
		if ((sub_len_198120 == 1)) {
		F.line = 2075;
		var c_198121 = sub_198117[chckIndx(0, 0, sub_198117.length+0-1)-0];
		F.line = 2076;
		var last_198123 = (s_198116 != null ? (s_198116.length-1) : -1);
		F.line = 2077;
		var i_198125 = 0;
		L1: do {
			F.line = 2078;
				L2: while (true) {
				if (!true) break L2;
					F.line = 2079;
					var j_198126 = nsuFindChar(s_198116, c_198121, chckRange(i_198125, 0, 2147483647), last_198123);
					if ((j_198126 < 0)) {
					F.line = 2080;
					break L1;
					}
					
					F.line = 2081;
					if (result_198119 != null) { result_198119 = (result_198119).concat(substr_71222(s_198116, i_198125, subInt(j_198126, 1))); } else { result_198119 = substr_71222(s_198116, i_198125, subInt(j_198126, 1)).slice(); };
					F.line = 2082;
					if (result_198119 != null) { result_198119 = (result_198119).concat(by_198118); } else { result_198119 = by_198118.slice(); };
					F.line = 2083;
					i_198125 = addInt(j_198126, sub_len_198120);
				}
		} while(false);
		F.line = 2085;
		if (result_198119 != null) { result_198119 = (result_198119).concat(substr_71253(s_198116, i_198125)); } else { result_198119 = substr_71253(s_198116, i_198125).slice(); };
		}
		else {
			F.line = 2087;
			var a_198127 = [new Int32Array(256)];
			F.line = 2088;
			nsuInitSkipTable(a_198127[0], sub_198117);
			F.line = 2089;
			var last_198130 = (s_198116 != null ? (s_198116.length-1) : -1);
			F.line = 2090;
			var i_198132 = 0;
			L3: do {
				F.line = 2091;
					L4: while (true) {
					if (!true) break L4;
						F.line = 2092;
						var j_198133 = nsuFindStrA(a_198127[0], s_198116, sub_198117, chckRange(i_198132, 0, 2147483647), last_198130);
						if ((j_198133 < 0)) {
						F.line = 2093;
						break L3;
						}
						
						F.line = 2094;
						if (result_198119 != null) { result_198119 = (result_198119).concat(substr_71222(s_198116, i_198132, subInt(j_198133, 1))); } else { result_198119 = substr_71222(s_198116, i_198132, subInt(j_198133, 1)).slice(); };
						F.line = 2095;
						if (result_198119 != null) { result_198119 = (result_198119).concat(by_198118); } else { result_198119 = by_198118.slice(); };
						F.line = 2096;
						i_198132 = addInt(j_198133, sub_len_198120);
					}
			} while(false);
			F.line = 2098;
			if (result_198119 != null) { result_198119 = (result_198119).concat(substr_71253(s_198116, i_198132)); } else { result_198119 = substr_71253(s_198116, i_198132).slice(); };
		}
		}
	framePtr = F.prev;

	return result_198119;

}

function nsuSplitChar(s_192255, sep_192256, maxsplit_192257) {
	var result_192259 = null;

	var F={procname:"strutils.split",prev:framePtr,filename:"strutils.nim",line:0};
	framePtr = F;
		F.line = 423;
		result_192259 = nimCopy(null, [], NTI192275);
		L1: do {
			F.line = 424;
			var xHEX60gensym192260_192276 = null;
			F.line = 395;
			var lastHEX60gensym191807_338591 = 0;
			F.line = 396;
			var splitsHEX60gensym191808_338592 = maxsplit_192257;
			L2: do {
				F.line = 456;
					L3: while (true) {
					if (!(lastHEX60gensym191807_338591 <= (s_192255 != null ? s_192255.length : 0))) break L3;
						F.line = 399;
						var firstHEX60gensym191809_338594 = lastHEX60gensym191807_338591;
						L4: do {
							F.line = 400;
								L5: while (true) {
								if (!((lastHEX60gensym191807_338591 < (s_192255 != null ? s_192255.length : 0)) && !((s_192255[chckIndx(lastHEX60gensym191807_338591, 0, s_192255.length+0-1)-0] == sep_192256)))) break L5;
									F.line = 401;
									lastHEX60gensym191807_338591 = addInt(lastHEX60gensym191807_338591, 1);
								}
						} while(false);
						if ((splitsHEX60gensym191808_338592 == 0)) {
						F.line = 402;
						lastHEX60gensym191807_338591 = (s_192255 != null ? s_192255.length : 0);
						}
						
						F.line = 733;
						xHEX60gensym192260_192276 = substr_71222(s_192255, firstHEX60gensym191809_338594, subInt(lastHEX60gensym191807_338591, 1));
						F.line = 424;
						var Tmp6 = nimCopy(null, xHEX60gensym192260_192276, NTI43040);
						if (result_192259 != null) { result_192259.push(Tmp6); } else { result_192259 = [Tmp6]; };
						if ((splitsHEX60gensym191808_338592 == 0)) {
						F.line = 404;
						break L2;
						}
						
						F.line = 405;
						splitsHEX60gensym191808_338592 = subInt(splitsHEX60gensym191808_338592, 1);
						F.line = 406;
						lastHEX60gensym191807_338591 = addInt(lastHEX60gensym191807_338591, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_192259;

}

function min_54101(x_54103, y_54104) {
		var Tmp1;
			var Tmp2;

	var result_54105 = 0.0;

			if ((x_54103 <= y_54104)) Tmp2 = true; else {				Tmp2 = !((y_54104 == y_54104));			}		if (Tmp2) {
		Tmp1 = x_54103;
		}
		else {
		Tmp1 = y_54104;
		}
		
		result_54105 = Tmp1;

	return result_54105;

}

function to_float_52057(i_52059) {
	var result_52060 = 0.0;

	var F={procname:"system.toFloat",prev:framePtr,filename:"system.nim",line:0};
	framePtr = F;
		F.line = 2306;
		result_52060 = i_52059;
	framePtr = F.prev;

	return result_52060;

}

function ten_to_the_power_of_66326(b_66328) {
	var result_66329 = 0.0;

	var F={procname:"system.tenToThePowerOf",prev:framePtr,filename:"jssys.nim",line:0};
	framePtr = F;
		F.line = 669;
		var b_66330 = b_66328;
		F.line = 670;
		var a_66331 = 1.0000000000000000e+001;
		F.line = 671;
		result_66329 = 1.0000000000000000e+000;
		L1: do {
			F.line = 672;
				L2: while (true) {
				if (!true) break L2;
					if (((b_66330 & 1) == 1)) {
					F.line = 674;
					result_66329 = (result_66329 * a_66331);
					}
					
					F.line = 675;
					b_66330 = (b_66330 >> 1);
					if ((b_66330 == 0)) {
					F.line = 676;
					break L1;
					}
					
					F.line = 677;
					a_66331 = (a_66331 * a_66331);
				}
		} while(false);
	framePtr = F.prev;

	return result_66329;

}

function npuParseFloat(s_112623, number_112625, number_112625_Idx, start_112626) {
	var result_112628 = 0;

	var F={procname:"parseutils.parseFloat",prev:framePtr,filename:"parseutils.nim",line:0};
	framePtr = F;
		F.line = 570;
		var bf_112629 = [0.0];
		F.line = 571;
		result_112628 = nimParseBiggestFloat(s_112623, bf_112629, 0, start_112626);
		if (!((result_112628 == 0))) {
		F.line = 573;
		number_112625[number_112625_Idx] = bf_112629[0];
		}
		
	framePtr = F.prev;

	return result_112628;

}

function nsuParseFloat(s_194025) {
			var Tmp1;

	var result_194026 = [0.0];

	var F={procname:"strutils.parseFloat",prev:framePtr,filename:"strutils.nim",line:0};
	framePtr = F;
		F.line = 1138;
		var l_194028 = npuParseFloat(s_194025, result_194026, 0, 0);
			if (!((l_194028 == (s_194025 != null ? s_194025.length : 0)))) Tmp1 = true; else {				Tmp1 = (l_194028 == 0);			}		if (Tmp1) {
		F.line = 3482;
		var eHEX60gensym194031_194203 = null;
		F.line = 3485;
		eHEX60gensym194031_194203 = {m_type: NTI46452, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 1140;
		eHEX60gensym194031_194203.message = nimCopy(null, (makeNimstrLit("invalid float: ") || []).concat(s_194025 || []), NTI43040);
		F.line = 3478;
		eHEX60gensym194031_194203.parent = null;
		F.line = 1140;
		raiseException(eHEX60gensym194031_194203, "ValueError");
		}
		
	framePtr = F.prev;

	return result_194026[0];

}

function parse_html_rgba_267446(text_267448) {
	var result_267449 = {r: 0.0, g: 0.0, b: 0.0, a: 0.0};

	var F={procname:"chroma.parseHtmlRgba",prev:framePtr,filename:"chroma.nim",line:0};
	framePtr = F;
		if (!(eqStrings(HEX5BHEX5D_122681(text_267448, HEX2EHEX2E_122620(0, 4)), makeNimstrLit("rgba(")))) {
		F.line = 3482;
		var eHEX60gensym267489_267603 = null;
		F.line = 3485;
		eHEX60gensym267489_267603 = {m_type: NTI262033, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 181;
		eHEX60gensym267489_267603.message = nimCopy(null, makeNimstrLit("Expected \'rgba(\'"), NTI43040);
		F.line = 3478;
		eHEX60gensym267489_267603.parent = null;
		F.line = 181;
		raiseException(eHEX60gensym267489_267603, "InvalidColor");
		}
		
		if (!((HEX5BHEX5D_68198(text_267448, 1) == 41))) {
		F.line = 3482;
		var eHEX60gensym267617_267803 = null;
		F.line = 3485;
		eHEX60gensym267617_267803 = {m_type: NTI262033, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 183;
		eHEX60gensym267617_267803.message = nimCopy(null, makeNimstrLit("Expected \')\'"), NTI43040);
		F.line = 3478;
		eHEX60gensym267617_267803.parent = null;
		F.line = 183;
		raiseException(eHEX60gensym267617_267803, "InvalidColor");
		}
		
		F.line = 184;
		var inner_267844 = nsuReplaceStr(HEX5BHEX5D_148304(text_267448, HEX2EHEX2E_148239(5, 2)), makeNimstrLit(" "), []);
		F.line = 185;
		var arr_267845 = nsuSplitChar(inner_267844, 44, -1);
		if (!(((arr_267845 != null ? arr_267845.length : 0) == 4))) {
		F.line = 3482;
		var eHEX60gensym267853_268003 = null;
		F.line = 3485;
		eHEX60gensym267853_268003 = {m_type: NTI262033, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 187;
		eHEX60gensym267853_268003.message = nimCopy(null, makeNimstrLit("Expected 4 numbers in rgba()"), NTI43040);
		F.line = 3478;
		eHEX60gensym267853_268003.parent = null;
		F.line = 187;
		raiseException(eHEX60gensym267853_268003, "InvalidColor");
		}
		
		F.line = 188;
		result_267449.r = min_54101(1.0000000000000000e+000, (nsuParseFloat(arr_267845[chckIndx(0, 0, arr_267845.length+0-1)-0]) / 2.5500000000000000e+002));
		F.line = 189;
		result_267449.g = min_54101(1.0000000000000000e+000, (nsuParseFloat(arr_267845[chckIndx(1, 0, arr_267845.length+0-1)-0]) / 2.5500000000000000e+002));
		F.line = 190;
		result_267449.b = min_54101(1.0000000000000000e+000, (nsuParseFloat(arr_267845[chckIndx(2, 0, arr_267845.length+0-1)-0]) / 2.5500000000000000e+002));
		F.line = 191;
		result_267449.a = min_54101(1.0000000000000000e+000, nsuParseFloat(arr_267845[chckIndx(3, 0, arr_267845.length+0-1)-0]));
	framePtr = F.prev;

	return result_267449;

}

function parse_html_rgb_266881(text_266883) {
	var result_266884 = {r: 0.0, g: 0.0, b: 0.0, a: 0.0};

	var F={procname:"chroma.parseHtmlRgb",prev:framePtr,filename:"chroma.nim",line:0};
	framePtr = F;
		if (!(eqStrings(HEX5BHEX5D_122681(text_266883, HEX2EHEX2E_122620(0, 3)), makeNimstrLit("rgb(")))) {
		F.line = 3482;
		var eHEX60gensym266924_267003 = null;
		F.line = 3485;
		eHEX60gensym266924_267003 = {m_type: NTI262033, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 147;
		eHEX60gensym266924_267003.message = nimCopy(null, makeNimstrLit("Expected \'rgb(\'"), NTI43040);
		F.line = 3478;
		eHEX60gensym266924_267003.parent = null;
		F.line = 147;
		raiseException(eHEX60gensym266924_267003, "InvalidColor");
		}
		
		if (!((HEX5BHEX5D_68198(text_266883, 1) == 41))) {
		F.line = 3482;
		var eHEX60gensym267017_267203 = null;
		F.line = 3485;
		eHEX60gensym267017_267203 = {m_type: NTI262033, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 149;
		eHEX60gensym267017_267203.message = nimCopy(null, makeNimstrLit("Expected \')\'"), NTI43040);
		F.line = 3478;
		eHEX60gensym267017_267203.parent = null;
		F.line = 149;
		raiseException(eHEX60gensym267017_267203, "InvalidColor");
		}
		
		F.line = 150;
		var inner_267244 = nsuReplaceStr(HEX5BHEX5D_148304(text_266883, HEX2EHEX2E_148239(4, 2)), makeNimstrLit(" "), []);
		F.line = 151;
		var arr_267245 = nsuSplitChar(inner_267244, 44, -1);
		if (!(((arr_267245 != null ? arr_267245.length : 0) == 3))) {
		F.line = 3482;
		var eHEX60gensym267253_267403 = null;
		F.line = 3485;
		eHEX60gensym267253_267403 = {m_type: NTI262033, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 153;
		eHEX60gensym267253_267403.message = nimCopy(null, makeNimstrLit("Expected 3 numbers in rgb()"), NTI43040);
		F.line = 3478;
		eHEX60gensym267253_267403.parent = null;
		F.line = 153;
		raiseException(eHEX60gensym267253_267403, "InvalidColor");
		}
		
		F.line = 154;
		result_266884.r = min_54101(1.0000000000000000e+000, (nsuParseFloat(arr_267245[chckIndx(0, 0, arr_267245.length+0-1)-0]) / 2.5500000000000000e+002));
		F.line = 155;
		result_266884.g = min_54101(1.0000000000000000e+000, (nsuParseFloat(arr_267245[chckIndx(1, 0, arr_267245.length+0-1)-0]) / 2.5500000000000000e+002));
		F.line = 156;
		result_266884.b = min_54101(1.0000000000000000e+000, (nsuParseFloat(arr_267245[chckIndx(2, 0, arr_267245.length+0-1)-0]) / 2.5500000000000000e+002));
		F.line = 157;
		result_266884.a = 1.0000000000000000e+000;
	framePtr = F.prev;

	return result_266884;

}

function nsuToLowerAsciiChar(c_191380) {
	var result_191381 = 0;

	var F={procname:"strutils.toLowerAscii",prev:framePtr,filename:"strutils.nim",line:0};
	framePtr = F;
		if ((ConstSet12[c_191380] != undefined)) {
		F.line = 222;
		result_191381 = chckRange(addInt(c_191380, 32), 0, 255);
		}
		else {
			F.line = 224;
			result_191381 = c_191380;
		}
		
	framePtr = F.prev;

	return result_191381;

}

function nsuToLowerAsciiStr(s_191429) {
	var result_191430 = null;

	var F={procname:"strutils.toLowerAscii",prev:framePtr,filename:"strutils.nim",line:0};
	framePtr = F;
		F.line = 227;
		result_191430 = nimCopy(null, mnewString(chckRange((s_191429 != null ? s_191429.length : 0), 0, 2147483647)), NTI43040);
		L1: do {
			F.line = 228;
			var iHEX60gensym191431_191440 = 0;
			F.line = 2717;
			var colontmp__270368 = 0;
			F.line = 228;
			colontmp__270368 = subInt((s_191429 != null ? s_191429.length : 0), 1);
			F.line = 2728;
			var res_270369 = 0;
			L2: do {
				F.line = 2729;
					L3: while (true) {
					if (!(res_270369 <= colontmp__270368)) break L3;
						F.line = 243;
						iHEX60gensym191431_191440 = res_270369;
						F.line = 229;
						result_191430[chckIndx(iHEX60gensym191431_191440, 0, result_191430.length+0-1)-0] = nsuToLowerAsciiChar(s_191429[chckIndx(iHEX60gensym191431_191440, 0, s_191429.length+0-1)-0]);
						F.line = 2731;
						res_270369 = addInt(res_270369, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_191430;

}

function has_key_268508(t_268513, key_268514) {
	var result_268515 = false;

	var F={procname:"hasKey.hasKey",prev:framePtr,filename:"tables.nim",line:0};
	framePtr = F;
		F.line = 396;
		var hc_268516 = [0];
		F.line = 397;
		result_268515 = (0 <= raw_get_240002(t_268513, key_268514, hc_268516, 0));
	framePtr = F.prev;

	return result_268515;

}

function has_key_268247(t_268252, key_268253) {
	var result_268254 = false;

	var F={procname:"hasKey.hasKey",prev:framePtr,filename:"tables.nim",line:0};
	framePtr = F;
		F.line = 891;
		result_268254 = has_key_268508(t_268252, key_268253);
	framePtr = F.prev;

	return result_268254;

}

function contains_268167(t_268172, key_268173) {
	var result_268174 = false;

	var F={procname:"contains.contains",prev:framePtr,filename:"tables.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 901;
		result_268174 = has_key_268247(t_268172, key_268173);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_268174;

}

function HEX5BHEX5D_269005(t_269011, key_269012) {
	var result_269014 = null;
	var result_269014_Idx = 0;

	var F={procname:"[].[]",prev:framePtr,filename:"tables.nim",line:0};
	framePtr = F;
		F.line = 258;
		var hcHEX60gensym106565_269015 = [0];
		F.line = 259;
		var indexHEX60gensym106566_269024 = raw_get_240002(t_269011, key_269012, hcHEX60gensym106565_269015, 0);
		if ((0 <= indexHEX60gensym106566_269024)) {
		F.line = 260;
		result_269014 = t_269011.data[chckIndx(indexHEX60gensym106566_269024, 0, t_269011.data.length+0-1)-0]; result_269014_Idx = "Field2";
		}
		else {
			F.line = 3482;
			var eHEX60gensym269203_269403 = null;
			F.line = 3485;
			eHEX60gensym269203_269403 = {m_type: NTI46454, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
			F.line = 263;
			eHEX60gensym269203_269403.message = nimCopy(null, (makeNimstrLit("key not found: ") || []).concat(key_269012 || []), NTI43040);
			F.line = 3478;
			eHEX60gensym269203_269403.parent = null;
			F.line = 263;
			raiseException(eHEX60gensym269203_269403, "KeyError");
		}
		
	framePtr = F.prev;

	return [result_269014, result_269014_Idx];

}

function HEX5BHEX5D_268708(t_268713, key_268714) {
		var Tmp1;

	var result_268716 = null;
	var result_268716_Idx = 0;

	var F={procname:"[].[]",prev:framePtr,filename:"tables.nim",line:0};
	framePtr = F;
		F.line = 857;
		result_268716 = (Tmp1 = HEX5BHEX5D_269005(t_268713, key_268714), Tmp1)[0]; result_268716_Idx = Tmp1[1];
	framePtr = F.prev;

	return [result_268716, result_268716_Idx];

}

function parse_html_name_268046(text_268048) {
		var Tmp1;

	var result_268049 = {r: 0.0, g: 0.0, b: 0.0, a: 0.0};

	var F={procname:"chroma.parseHtmlName",prev:framePtr,filename:"chroma.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 213;
		var lower_name_268050 = nsuToLowerAsciiStr(text_268048);
		if (contains_268167(color_names_243673[0], lower_name_268050)) {
		F.line = 215;
		nimCopy(result_268049, parse_hex_265453((Tmp1 = HEX5BHEX5D_268708(color_names_243673[0], lower_name_268050), Tmp1)[0][Tmp1[1]]), NTI262003);
		break BeforeRet;
		}
		else {
			F.line = 3482;
			var eHEX60gensym269451_269603 = null;
			F.line = 3485;
			eHEX60gensym269451_269603 = {m_type: NTI262033, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
			F.line = 217;
			eHEX60gensym269451_269603.message = nimCopy(null, makeNimstrLit("Not a valid color name."), NTI43040);
			F.line = 3478;
			eHEX60gensym269451_269603.parent = null;
			F.line = 217;
			raiseException(eHEX60gensym269451_269603, "InvalidColor");
		}
		
	} while (false);
	framePtr = F.prev;

	return result_268049;

}

function parse_html_color_269623(color_text_269625) {
	var result_269626 = {r: 0.0, g: 0.0, b: 0.0, a: 0.0};

	var F={procname:"chroma.parseHtmlColor",prev:framePtr,filename:"chroma.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 226;
		var text_269627 = nsuStrip(color_text_269625, true, true, ConstSet4);
		if ((text_269627[chckIndx(0, 0, text_269627.length+0-1)-0] == 35)) {
		if (((text_269627 != null ? text_269627.length : 0) == 4)) {
		F.line = 229;
		nimCopy(result_269626, parse_html_hex_tiny_266474(text_269627), NTI262003);
		break BeforeRet;
		}
		else {
		if (((text_269627 != null ? text_269627.length : 0) == 7)) {
		F.line = 231;
		nimCopy(result_269626, parse_html_hex_266286(text_269627), NTI262003);
		break BeforeRet;
		}
		else {
			F.line = 3482;
			var eHEX60gensym269630_269803 = null;
			F.line = 3485;
			eHEX60gensym269630_269803 = {m_type: NTI262033, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
			F.line = 233;
			eHEX60gensym269630_269803.message = nimCopy(null, makeNimstrLit("HTML color invalid."), NTI43040);
			F.line = 3478;
			eHEX60gensym269630_269803.parent = null;
			F.line = 233;
			raiseException(eHEX60gensym269630_269803, "InvalidColor");
		}
		}
		}
		else {
		if (eqStrings(HEX5BHEX5D_122681(text_269627, HEX2EHEX2E_122620(0, 3)), makeNimstrLit("rgba"))) {
		F.line = 235;
		nimCopy(result_269626, parse_html_rgba_267446(text_269627), NTI262003);
		break BeforeRet;
		}
		else {
		if (eqStrings(HEX5BHEX5D_122681(text_269627, HEX2EHEX2E_122620(0, 2)), makeNimstrLit("rgb"))) {
		F.line = 237;
		nimCopy(result_269626, parse_html_rgb_266881(text_269627), NTI262003);
		break BeforeRet;
		}
		else {
			F.line = 239;
			nimCopy(result_269626, parse_html_name_268046(text_269627), NTI262003);
			break BeforeRet;
		}
		}}
	} while (false);
	framePtr = F.prev;

	return result_269626;

}

function fill_325605(color_325607) {
	var F={procname:"fidget.fill",prev:framePtr,filename:"fidget.nim",line:0};
	framePtr = F;
		F.line = 253;
		nimCopy(current_308355[0].fill, parse_html_color_269623(color_325607), NTI262003);
	framePtr = F.prev;

	
}

function box_337650(x_337656, y_337657, w_337658, h_337659) {
	var F={procname:"box.box",prev:framePtr,filename:"fidget.nim",line:0};
	framePtr = F;
		F.line = 232;
		box_325508(x_337656, y_337657, w_337658, h_337659);
	framePtr = F.prev;

	
}

function between_308654(value_308659, min_308660, max_308661) {
		var Tmp1;

	var result_308662 = false;

	var F={procname:"between.between",prev:framePtr,filename:"uibase.nim",line:0};
	framePtr = F;
		F.line = 154;
		if (!(min_308660 <= value_308659)) Tmp1 = false; else {			Tmp1 = (value_308659 <= max_308661);		}		result_308662 = Tmp1;
	framePtr = F.prev;

	return result_308662;

}

function overlap_308649(a_308651, b_308652) {
	var result_308653 = false;

	var F={procname:"uibase.overlap",prev:framePtr,filename:"uibase.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 166;
		var x_overlap_308684 = (between_308654(a_308651.x, b_308652.x, (b_308652.x + b_308652.w)) || between_308654(b_308652.x, a_308651.x, (a_308651.x + a_308651.w)));
		F.line = 167;
		var y_overlap_308701 = (between_308654(a_308651.y, b_308652.y, (b_308652.y + b_308652.h)) || between_308654(b_308652.y, a_308651.y, (a_308651.y + a_308651.h)));
		F.line = 168;
		result_308653 = (x_overlap_308684 && y_overlap_308701);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_308653;

}

function inside_308631(p_308633, b_308634) {
		var Tmp1;
		var Tmp2;
		var Tmp3;

	var result_308635 = false;

	var F={procname:"uibase.inside",prev:framePtr,filename:"uibase.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 160;
		if (!(b_308634.x < p_308633.x)) Tmp3 = false; else {			Tmp3 = (p_308633.x < (b_308634.x + b_308634.w));		}		if (!Tmp3) Tmp2 = false; else {			Tmp2 = (b_308634.y < p_308633.y);		}		if (!Tmp2) Tmp1 = false; else {			Tmp1 = (p_308633.y < (b_308634.y + b_308634.h));		}		result_308635 = Tmp1;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_308635;

}

function mouse_overlap_logic_325276() {
		var Tmp1;

	var result_325278 = false;

	var F={procname:"fidget.mouseOverlapLogic",prev:framePtr,filename:"fidget.nim",line:0};
	framePtr = F;
		F.line = 99;
		if (!(!(popup_active_308368[0]) || in_popup_308369[0])) Tmp1 = false; else {			Tmp1 = inside_308631(mouse_308359[0].pos, current_308355[0].screenBox);		}		result_325278 = Tmp1;
	framePtr = F.prev;

	return result_325278;

}

function HEX2DHEX3D_337718(x_337722, x_337722_Idx, y_337723) {
	var F={procname:"-=.-=",prev:framePtr,filename:"system.nim",line:0};
	framePtr = F;
		F.line = 4141;
		x_337722[x_337722_Idx] = (x_337722[x_337722_Idx] - y_337723);
	framePtr = F.prev;

	
}

function box_337817(x_337823, y_337824, w_337825, h_337826) {
	var F={procname:"box.box",prev:framePtr,filename:"fidget.nim",line:0};
	framePtr = F;
		F.line = 232;
		box_325508(x_337823, y_337824, w_337825, h_337826);
	framePtr = F.prev;

	
}

function HEX2BHEX3D_199656(x_199660, x_199660_Idx, y_199661) {
	var F={procname:"+=.+=",prev:framePtr,filename:"system.nim",line:0};
	framePtr = F;
		F.line = 4136;
		x_199660[x_199660_Idx] = (x_199660[x_199660_Idx] + y_199661);
	framePtr = F.prev;

	
}

function set_324294(keyboard_324296, state_324297, event_324298) {
	var F={procname:"backendhtml.set",prev:framePtr,filename:"backendhtml.nim",line:0};
	framePtr = F;
		F.line = 344;
		keyboard_324296.state = state_324297;
		F.line = 345;
		keyboard_324296.keyCode = event_324298.keyCode;
		F.line = 346;
		var key_string_324299 = null;
		F.line = 347;
		key_string_324299 = event_324298.key
		F.line = 348;
		keyboard_324296.keyString = nimCopy(null, cstrToNimstr(key_string_324299), NTI43040);
		F.line = 349;
		keyboard_324296.altKey = event_324298.altKey;
		F.line = 350;
		keyboard_324296.ctrlKey = event_324298.ctrlKey;
		F.line = 351;
		keyboard_324296.shiftKey = event_324298.shiftKey;
	framePtr = F.prev;

	
}

function use_308550(keyboard_308552) {
	var F={procname:"uibase.use",prev:framePtr,filename:"uibase.nim",line:0};
	framePtr = F;
		F.line = 134;
		keyboard_308552.state = 0;
		F.line = 135;
		keyboard_308552.keyCode = 0;
		F.line = 136;
		keyboard_308552.scanCode = 0;
		F.line = 137;
		keyboard_308552.keyString = nimCopy(null, [], NTI43040);
		F.line = 138;
		keyboard_308552.altKey = false;
		F.line = 139;
		keyboard_308552.ctrlKey = false;
		F.line = 140;
		keyboard_308552.shiftKey = false;
		F.line = 141;
		keyboard_308552.superKey = false;
	framePtr = F.prev;

	
}

function start_fidget_324313() {

		function HEX3Aanonymous_324315(event_324317) {
			var F={procname:"startFidget.:anonymous",prev:framePtr,filename:"backendhtml.nim",line:0};
			framePtr = F;
				F.line = 361;
				root_dom_node_311030[0] = document.createElement("div");
				F.line = 362;
				document.body.appendChild(root_dom_node_311030[0]);
				F.line = 363;
				redraw_324279();
			framePtr = F.prev;

			
		}

		function HEX3Aanonymous_324331(event_324333) {
			var F={procname:"startFidget.:anonymous",prev:framePtr,filename:"backendhtml.nim",line:0};
			framePtr = F;
				F.line = 367;
				redraw_324279();
			framePtr = F.prev;

			
		}

		function HEX3Aanonymous_324347(event_324349) {
			var F={procname:"startFidget.:anonymous",prev:framePtr,filename:"backendhtml.nim",line:0};
			framePtr = F;
				F.line = 371;
				redraw_324279();
			framePtr = F.prev;

			
		}

		function HEX3Aanonymous_324363(event_324365) {
			var F={procname:"startFidget.:anonymous",prev:framePtr,filename:"backendhtml.nim",line:0};
			framePtr = F;
				F.line = 375;
				mouse_308359[0].pos.x = event_324365.pageX;
				F.line = 376;
				mouse_308359[0].pos.y = event_324365.pageY;
				F.line = 377;
				mouse_308359[0].click = true;
				F.line = 378;
				mouse_308359[0].down = true;
				F.line = 379;
				hard_redraw_324240();
				F.line = 380;
				mouse_308359[0].click = false;
			framePtr = F.prev;

			
		}

		function HEX3Aanonymous_324379(event_324381) {
			var F={procname:"startFidget.:anonymous",prev:framePtr,filename:"backendhtml.nim",line:0};
			framePtr = F;
				F.line = 384;
				redraw_324279();
				F.line = 385;
				mouse_308359[0].down = false;
			framePtr = F.prev;

			
		}

		function HEX3Aanonymous_324395(event_324397) {
			var F={procname:"startFidget.:anonymous",prev:framePtr,filename:"backendhtml.nim",line:0};
			framePtr = F;
				F.line = 389;
				mouse_308359[0].pos.x = event_324397.pageX;
				F.line = 390;
				mouse_308359[0].pos.y = event_324397.pageY;
				F.line = 391;
				redraw_324279();
			framePtr = F.prev;

			
		}

		function HEX3Aanonymous_324411(event_324413) {
			var F={procname:"startFidget.:anonymous",prev:framePtr,filename:"backendhtml.nim",line:0};
			framePtr = F;
				F.line = 396;
				set_324294(keyboard_308360[0], 2, event_324413);
				F.line = 397;
				hard_redraw_324240();
				if (!((keyboard_308360[0].state == 0))) {
				F.line = 399;
				use_308550(keyboard_308360[0]);
				}
				else {
					F.line = 401;
				event_324413.preventDefault();
				}
				
			framePtr = F.prev;

			
		}

		function HEX3Aanonymous_324432(event_324434) {
			var F={procname:"startFidget.:anonymous",prev:framePtr,filename:"backendhtml.nim",line:0};
			framePtr = F;
				F.line = 406;
				set_324294(keyboard_308360[0], 1, event_324434);
				F.line = 407;
				hard_redraw_324240();
				if (!((keyboard_308360[0].state == 0))) {
				F.line = 409;
				use_308550(keyboard_308360[0]);
				}
				else {
					F.line = 411;
				event_324434.preventDefault();
				}
				
			framePtr = F.prev;

			
		}

function is_text_tag_324453(node_324455) {
		var Tmp1;

	var result_324456 = false;

	var F={procname:"startFidget.isTextTag",prev:framePtr,filename:"backendhtml.nim",line:0};
	framePtr = F;
		F.line = 424;
		if ((node_324455.nodeName == "TEXTAREA")) Tmp1 = true; else {			Tmp1 = (node_324455.nodeName == "INPUT");		}		result_324456 = Tmp1;
	framePtr = F.prev;

	return result_324456;

}

		function HEX3Aanonymous_324470(event_324472) {
			var F={procname:"startFidget.:anonymous",prev:framePtr,filename:"backendhtml.nim",line:0};
			framePtr = F;
				if (is_text_tag_324453(document.activeElement)) {
				F.line = 429;
				keyboard_308360[0].input = nimCopy(null, cstrToNimstr(document.activeElement.value), NTI43040);
				F.line = 430;
				keyboard_308360[0].inputFocusIdPath = nimCopy(null, cstrToNimstr(document.activeElement.parentElement.id), NTI43040);
				F.line = 431;
				keyboard_308360[0].state = 4;
				F.line = 432;
				redraw_324279();
				}
				
			framePtr = F.prev;

			
		}

		function HEX3Aanonymous_324486(event_324488) {
			var F={procname:"startFidget.:anonymous",prev:framePtr,filename:"backendhtml.nim",line:0};
			framePtr = F;
				if (is_text_tag_324453(document.activeElement)) {
				F.line = 439;
				keyboard_308360[0].input = nimCopy(null, cstrToNimstr(document.activeElement.value), NTI43040);
				F.line = 440;
				keyboard_308360[0].inputFocusIdPath = nimCopy(null, cstrToNimstr(document.activeElement.parentElement.id), NTI43040);
				F.line = 441;
				redraw_324279();
				}
				
			framePtr = F.prev;

			
		}

		function HEX3Aanonymous_324502(event_324504) {
			var F={procname:"startFidget.:anonymous",prev:framePtr,filename:"backendhtml.nim",line:0};
			framePtr = F;
				F.line = 447;
				keyboard_308360[0].input = nimCopy(null, [], NTI43040);
				F.line = 448;
				keyboard_308360[0].inputFocusIdPath = nimCopy(null, [], NTI43040);
				F.line = 449;
				redraw_324279();
			framePtr = F.prev;

			
		}

		function HEX3Aanonymous_324518(event_324520) {
			var F={procname:"startFidget.:anonymous",prev:framePtr,filename:"backendhtml.nim",line:0};
			framePtr = F;
				F.line = 453;
				redraw_324279();
			framePtr = F.prev;

			
		}

	var F={procname:"backendhtml.startFidget",prev:framePtr,filename:"backendhtml.nim",line:0};
	framePtr = F;
		F.line = 357;
		window_308349[0].innerUrl = nimCopy(null, cstrToNimstr(window.location.pathname), NTI43040);
		F.line = 359;
		window.addEventListener("load", HEX3Aanonymous_324315, false);
		F.line = 365;
		window.addEventListener("resize", HEX3Aanonymous_324331, false);
		F.line = 369;
		window.addEventListener("scroll", HEX3Aanonymous_324347, false);
		F.line = 373;
		window.addEventListener("mousedown", HEX3Aanonymous_324363, false);
		F.line = 382;
		window.addEventListener("mouseup", HEX3Aanonymous_324379, false);
		F.line = 387;
		window.addEventListener("mousemove", HEX3Aanonymous_324395, false);
		F.line = 393;
		window.addEventListener("keydown", HEX3Aanonymous_324411, false);
		F.line = 403;
		window.addEventListener("keyup", HEX3Aanonymous_324432, false);
		F.line = 426;
		window.addEventListener("input", HEX3Aanonymous_324470, false);
		F.line = 434;
		window.addEventListener("focusin", HEX3Aanonymous_324486, false);
		F.line = 443;
		window.addEventListener("focusout", HEX3Aanonymous_324502, false);
		F.line = 451;
		window.addEventListener("popstate", HEX3Aanonymous_324518, false);
	framePtr = F.prev;

	
}

function HEX3Aanonymous_327216() {
		var Tmp1;
			var Tmp6;
			var Tmp11;
			var Tmp12;
			var Tmp13;
				var Tmp18;
				var Tmp23;
				var Tmp24;
								var Tmp28;
									var Tmp33;
											var Tmp38;
									var Tmp39;
									var Tmp40;
									var Tmp41;
											var Tmp46;
									var Tmp47;
									var Tmp48;
									var Tmp49;
										var Tmp54;
										var Tmp59;
										var Tmp60;
										var Tmp61;
										var Tmp66;
										var Tmp67;
									var Tmp68;
									var Tmp69;
								var Tmp70;
								var Tmp71;
			var Tmp72;
			var Tmp73;
		var Tmp74;
		var Tmp75;

	var F={procname:"bars.:anonymous",prev:framePtr,filename:"bars.nim",line:0};
	framePtr = F;
		F.line = 19;
		titleHEX3D_324621(window_308349[0], makeNimstrLit("Fidget Bars Example"));
		F.line = 21;
		rawEcho(makeNimstrLit("root.box"), makeNimstrLit("="), pretty_327231(root_308351[0].box));
		F.line = 23;
		var h_337062 = addInt(mulInt((bars_327090[0] != null ? bars_327090[0].length : 0), 60), 20);
		F.line = 24;
		var bar_w_337064 = (root_308351[0].box.w - 1.0000000000000000e+002);
		F.line = 19;
		parent_308350[0] = (Tmp1 = HEX5BHEX5D_337071(group_stack_308354[0], 1), Tmp1)[0][Tmp1[1]];
		if (!(parent_308350[0].wasDrawn)) {
		F.line = 21;
		draw_323948(parent_308350[0]);
		F.line = 22;
		parent_308350[0].wasDrawn = true;
		}
		
		F.line = 24;
		current_308355[0] = {id: null, idPath: null, kind: null, text: null, placeholder: null, code: null, kids: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, rotation: 0.0, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0.0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0, textAlignVertical: 0}, imageName: null, cornerRadius: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, wasDrawn: false, editableText: false, multiline: false, drawable: false};
		F.line = 25;
		current_308355[0].id = nimCopy(null, makeNimstrLit("main"), NTI43040);
		F.line = 68;
		current_308355[0].kind = nimCopy(null, makeNimstrLit("frame"), NTI43040);
		F.line = 27;
		current_308355[0].wasDrawn = false;
		F.line = 28;
		current_308355[0].transparency = 1.0000000000000000e+000;
		F.line = 29;
		nimCopy(current_308355[0].textStyle, parent_308350[0].textStyle, NTI308205);
		F.line = 30;
		if (group_stack_308354[0] != null) { group_stack_308354[0].push(current_308355[0]); } else { group_stack_308354[0] = [current_308355[0]]; };
		L2: do {
			F.line = 32;
			var gHEX60gensym337065_337214 = null;
			F.line = 184;
			var i_338393 = 0;
			F.line = 185;
			var l_338394 = (group_stack_308354[0] != null ? group_stack_308354[0].length : 0);
			L3: do {
				F.line = 186;
					L4: while (true) {
					if (!(i_338393 < l_338394)) break L4;
						F.line = 32;
						gHEX60gensym337065_337214 = group_stack_308354[0][chckIndx(i_338393, 0, group_stack_308354[0].length+0-1)-0];
						if (!(eqStrings(gHEX60gensym337065_337214.id, []))) {
						if ((0 < (current_308355[0].idPath != null ? current_308355[0].idPath.length : 0))) {
						F.line = 35;
						if (current_308355[0].idPath != null) { current_308355[0].idPath = (current_308355[0].idPath).concat(makeNimstrLit("-")); } else { current_308355[0].idPath = makeNimstrLit("-"); };
						}
						
						F.line = 36;
						if (current_308355[0].idPath != null) { current_308355[0].idPath = (current_308355[0].idPath).concat(gHEX60gensym337065_337214.id); } else { current_308355[0].idPath = gHEX60gensym337065_337214.id.slice(); };
						}
						
						F.line = 188;
						i_338393 = addInt(i_338393, 1);
						if (!(((group_stack_308354[0] != null ? group_stack_308354[0].length : 0) == l_338394))) {
						F.line = 189;
						failed_assert_impl_56666(makeNimstrLit("C:\\Users\\me\\.choosenim\\toolchains\\nim-#devel\\lib\\system\\iterators.nim(189, 11) `len(a) ==\x0A    L` the length of the seq changed while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);
		L5: do {
			F.line = 26;
			box_337220(0, 0, ((root_308351[0].box.w)|0), nimMax(((root_308351[0].box.h)|0), h_337062));
			F.line = 19;
			parent_308350[0] = (Tmp6 = HEX5BHEX5D_337071(group_stack_308354[0], 1), Tmp6)[0][Tmp6[1]];
			if (!(parent_308350[0].wasDrawn)) {
			F.line = 21;
			draw_323948(parent_308350[0]);
			F.line = 22;
			parent_308350[0].wasDrawn = true;
			}
			
			F.line = 24;
			current_308355[0] = {id: null, idPath: null, kind: null, text: null, placeholder: null, code: null, kids: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, rotation: 0.0, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0.0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0, textAlignVertical: 0}, imageName: null, cornerRadius: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, wasDrawn: false, editableText: false, multiline: false, drawable: false};
			F.line = 93;
			current_308355[0].id = nimCopy(null, [], NTI43040);
			F.line = 73;
			current_308355[0].kind = nimCopy(null, makeNimstrLit("rectangle"), NTI43040);
			F.line = 27;
			current_308355[0].wasDrawn = false;
			F.line = 28;
			current_308355[0].transparency = 1.0000000000000000e+000;
			F.line = 29;
			nimCopy(current_308355[0].textStyle, parent_308350[0].textStyle, NTI308205);
			F.line = 30;
			if (group_stack_308354[0] != null) { group_stack_308354[0].push(current_308355[0]); } else { group_stack_308354[0] = [current_308355[0]]; };
			L7: do {
				F.line = 32;
				var gHEX60gensym337243_337270 = null;
				F.line = 184;
				var i_338402 = 0;
				F.line = 185;
				var l_338403 = (group_stack_308354[0] != null ? group_stack_308354[0].length : 0);
				L8: do {
					F.line = 186;
						L9: while (true) {
						if (!(i_338402 < l_338403)) break L9;
							F.line = 32;
							gHEX60gensym337243_337270 = group_stack_308354[0][chckIndx(i_338402, 0, group_stack_308354[0].length+0-1)-0];
							if (!(eqStrings(gHEX60gensym337243_337270.id, []))) {
							if ((0 < (current_308355[0].idPath != null ? current_308355[0].idPath.length : 0))) {
							F.line = 35;
							if (current_308355[0].idPath != null) { current_308355[0].idPath = (current_308355[0].idPath).concat(makeNimstrLit("-")); } else { current_308355[0].idPath = makeNimstrLit("-"); };
							}
							
							F.line = 36;
							if (current_308355[0].idPath != null) { current_308355[0].idPath = (current_308355[0].idPath).concat(gHEX60gensym337243_337270.id); } else { current_308355[0].idPath = gHEX60gensym337243_337270.id.slice(); };
							}
							
							F.line = 188;
							i_338402 = addInt(i_338402, 1);
							if (!(((group_stack_308354[0] != null ? group_stack_308354[0].length : 0) == l_338403))) {
							F.line = 189;
							failed_assert_impl_56666(makeNimstrLit("C:\\Users\\me\\.choosenim\\toolchains\\nim-#devel\\lib\\system\\iterators.nim(189, 11) `len(a) ==\x0A    L` the length of the seq changed while iterating over it"));
							}
							
						}
				} while(false);
			} while(false);
			L10: do {
				F.line = 94;
				box_337276(0, 0, parent_308350[0].box.w, parent_308350[0].box.h);
				F.line = 95;
				fill_325605(makeNimstrLit("#F7F7F9"));
			} while(false);
			if (!(current_308355[0].wasDrawn)) {
			F.line = 47;
			draw_323948(current_308355[0]);
			F.line = 48;
			current_308355[0].wasDrawn = true;
			}
			
			F.line = 50;
			pop_324020(group_stack_308354, 0);
			if ((1 < (group_stack_308354[0] != null ? group_stack_308354[0].length : 0))) {
			F.line = 52;
			current_308355[0] = (Tmp11 = HEX5BHEX5D_337071(group_stack_308354[0], 1), Tmp11)[0][Tmp11[1]];
			}
			else {
				F.line = 54;
				current_308355[0] = null;
			}
			
			if ((2 < (group_stack_308354[0] != null ? group_stack_308354[0].length : 0))) {
			F.line = 56;
			parent_308350[0] = (Tmp12 = HEX5BHEX5D_337071(group_stack_308354[0], 2), Tmp12)[0][Tmp12[1]];
			}
			else {
				F.line = 58;
				parent_308350[0] = null;
			}
			
			F.line = 19;
			parent_308350[0] = (Tmp13 = HEX5BHEX5D_337071(group_stack_308354[0], 1), Tmp13)[0][Tmp13[1]];
			if (!(parent_308350[0].wasDrawn)) {
			F.line = 21;
			draw_323948(parent_308350[0]);
			F.line = 22;
			parent_308350[0].wasDrawn = true;
			}
			
			F.line = 24;
			current_308355[0] = {id: null, idPath: null, kind: null, text: null, placeholder: null, code: null, kids: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, rotation: 0.0, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0.0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0, textAlignVertical: 0}, imageName: null, cornerRadius: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, wasDrawn: false, editableText: false, multiline: false, drawable: false};
			F.line = 29;
			current_308355[0].id = nimCopy(null, makeNimstrLit("center"), NTI43040);
			F.line = 63;
			current_308355[0].kind = nimCopy(null, makeNimstrLit("group"), NTI43040);
			F.line = 27;
			current_308355[0].wasDrawn = false;
			F.line = 28;
			current_308355[0].transparency = 1.0000000000000000e+000;
			F.line = 29;
			nimCopy(current_308355[0].textStyle, parent_308350[0].textStyle, NTI308205);
			F.line = 30;
			if (group_stack_308354[0] != null) { group_stack_308354[0].push(current_308355[0]); } else { group_stack_308354[0] = [current_308355[0]]; };
			L14: do {
				F.line = 32;
				var gHEX60gensym337344_337371 = null;
				F.line = 184;
				var i_338411 = 0;
				F.line = 185;
				var l_338412 = (group_stack_308354[0] != null ? group_stack_308354[0].length : 0);
				L15: do {
					F.line = 186;
						L16: while (true) {
						if (!(i_338411 < l_338412)) break L16;
							F.line = 32;
							gHEX60gensym337344_337371 = group_stack_308354[0][chckIndx(i_338411, 0, group_stack_308354[0].length+0-1)-0];
							if (!(eqStrings(gHEX60gensym337344_337371.id, []))) {
							if ((0 < (current_308355[0].idPath != null ? current_308355[0].idPath.length : 0))) {
							F.line = 35;
							if (current_308355[0].idPath != null) { current_308355[0].idPath = (current_308355[0].idPath).concat(makeNimstrLit("-")); } else { current_308355[0].idPath = makeNimstrLit("-"); };
							}
							
							F.line = 36;
							if (current_308355[0].idPath != null) { current_308355[0].idPath = (current_308355[0].idPath).concat(gHEX60gensym337344_337371.id); } else { current_308355[0].idPath = gHEX60gensym337344_337371.id.slice(); };
							}
							
							F.line = 188;
							i_338411 = addInt(i_338411, 1);
							if (!(((group_stack_308354[0] != null ? group_stack_308354[0].length : 0) == l_338412))) {
							F.line = 189;
							failed_assert_impl_56666(makeNimstrLit("C:\\Users\\me\\.choosenim\\toolchains\\nim-#devel\\lib\\system\\iterators.nim(189, 11) `len(a) ==\x0A    L` the length of the seq changed while iterating over it"));
							}
							
						}
				} while(false);
			} while(false);
			L17: do {
				F.line = 30;
				box_325508(5.0000000000000000e+001, 0.0, bar_w_337064, nimMax(((root_308351[0].box.h)|0), h_337062));
				F.line = 19;
				parent_308350[0] = (Tmp18 = HEX5BHEX5D_337071(group_stack_308354[0], 1), Tmp18)[0][Tmp18[1]];
				if (!(parent_308350[0].wasDrawn)) {
				F.line = 21;
				draw_323948(parent_308350[0]);
				F.line = 22;
				parent_308350[0].wasDrawn = true;
				}
				
				F.line = 24;
				current_308355[0] = {id: null, idPath: null, kind: null, text: null, placeholder: null, code: null, kids: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, rotation: 0.0, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0.0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0, textAlignVertical: 0}, imageName: null, cornerRadius: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, wasDrawn: false, editableText: false, multiline: false, drawable: false};
				F.line = 93;
				current_308355[0].id = nimCopy(null, [], NTI43040);
				F.line = 73;
				current_308355[0].kind = nimCopy(null, makeNimstrLit("rectangle"), NTI43040);
				F.line = 27;
				current_308355[0].wasDrawn = false;
				F.line = 28;
				current_308355[0].transparency = 1.0000000000000000e+000;
				F.line = 29;
				nimCopy(current_308355[0].textStyle, parent_308350[0].textStyle, NTI308205);
				F.line = 30;
				if (group_stack_308354[0] != null) { group_stack_308354[0].push(current_308355[0]); } else { group_stack_308354[0] = [current_308355[0]]; };
				L19: do {
					F.line = 32;
					var gHEX60gensym337377_337404 = null;
					F.line = 184;
					var i_338420 = 0;
					F.line = 185;
					var l_338421 = (group_stack_308354[0] != null ? group_stack_308354[0].length : 0);
					L20: do {
						F.line = 186;
							L21: while (true) {
							if (!(i_338420 < l_338421)) break L21;
								F.line = 32;
								gHEX60gensym337377_337404 = group_stack_308354[0][chckIndx(i_338420, 0, group_stack_308354[0].length+0-1)-0];
								if (!(eqStrings(gHEX60gensym337377_337404.id, []))) {
								if ((0 < (current_308355[0].idPath != null ? current_308355[0].idPath.length : 0))) {
								F.line = 35;
								if (current_308355[0].idPath != null) { current_308355[0].idPath = (current_308355[0].idPath).concat(makeNimstrLit("-")); } else { current_308355[0].idPath = makeNimstrLit("-"); };
								}
								
								F.line = 36;
								if (current_308355[0].idPath != null) { current_308355[0].idPath = (current_308355[0].idPath).concat(gHEX60gensym337377_337404.id); } else { current_308355[0].idPath = gHEX60gensym337377_337404.id.slice(); };
								}
								
								F.line = 188;
								i_338420 = addInt(i_338420, 1);
								if (!(((group_stack_308354[0] != null ? group_stack_308354[0].length : 0) == l_338421))) {
								F.line = 189;
								failed_assert_impl_56666(makeNimstrLit("C:\\Users\\me\\.choosenim\\toolchains\\nim-#devel\\lib\\system\\iterators.nim(189, 11) `len(a) ==\x0A    L` the length of the seq changed while iterating over it"));
								}
								
							}
					} while(false);
				} while(false);
				L22: do {
					F.line = 94;
					box_337276(0, 0, parent_308350[0].box.w, parent_308350[0].box.h);
					F.line = 95;
					fill_325605(makeNimstrLit("#FFFFFF"));
				} while(false);
				if (!(current_308355[0].wasDrawn)) {
				F.line = 47;
				draw_323948(current_308355[0]);
				F.line = 48;
				current_308355[0].wasDrawn = true;
				}
				
				F.line = 50;
				pop_324020(group_stack_308354, 0);
				if ((1 < (group_stack_308354[0] != null ? group_stack_308354[0].length : 0))) {
				F.line = 52;
				current_308355[0] = (Tmp23 = HEX5BHEX5D_337071(group_stack_308354[0], 1), Tmp23)[0][Tmp23[1]];
				}
				else {
					F.line = 54;
					current_308355[0] = null;
				}
				
				if ((2 < (group_stack_308354[0] != null ? group_stack_308354[0].length : 0))) {
				F.line = 56;
				parent_308350[0] = (Tmp24 = HEX5BHEX5D_337071(group_stack_308354[0], 2), Tmp24)[0][Tmp24[1]];
				}
				else {
					F.line = 58;
					parent_308350[0] = null;
				}
				
				L25: do {
					F.line = 33;
					var i_337615 = 0;
					F.line = 33;
					var bar_337616 = null;
					var bar_337616_Idx = 0;
					F.line = 127;
					var i_338483 = 0;
					F.line = 128;
					var l_338484 = (bars_327090[0] != null ? bars_327090[0].length : 0);
					L26: do {
						F.line = 129;
							L27: while (true) {
							if (!(i_338483 < l_338484)) break L27;
								F.line = 33;
								i_337615 = i_338483;
								F.line = 130;
								bar_337616 = bars_327090[0]; bar_337616_Idx = chckIndx(i_338483, 0, bars_327090[0].length+0-1)-0;
								F.line = 19;
								parent_308350[0] = (Tmp28 = HEX5BHEX5D_337071(group_stack_308354[0], 1), Tmp28)[0][Tmp28[1]];
								if (!(parent_308350[0].wasDrawn)) {
								F.line = 21;
								draw_323948(parent_308350[0]);
								F.line = 22;
								parent_308350[0].wasDrawn = true;
								}
								
								F.line = 24;
								current_308355[0] = {id: null, idPath: null, kind: null, text: null, placeholder: null, code: null, kids: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, rotation: 0.0, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0.0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0, textAlignVertical: 0}, imageName: null, cornerRadius: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, wasDrawn: false, editableText: false, multiline: false, drawable: false};
								F.line = 34;
								current_308355[0].id = nimCopy(null, makeNimstrLit("bar"), NTI43040);
								F.line = 63;
								current_308355[0].kind = nimCopy(null, makeNimstrLit("group"), NTI43040);
								F.line = 27;
								current_308355[0].wasDrawn = false;
								F.line = 28;
								current_308355[0].transparency = 1.0000000000000000e+000;
								F.line = 29;
								nimCopy(current_308355[0].textStyle, parent_308350[0].textStyle, NTI308205);
								F.line = 30;
								if (group_stack_308354[0] != null) { group_stack_308354[0].push(current_308355[0]); } else { group_stack_308354[0] = [current_308355[0]]; };
								L29: do {
									F.line = 32;
									var gHEX60gensym337617_337644 = null;
									F.line = 184;
									var i_338430 = 0;
									F.line = 185;
									var l_338431 = (group_stack_308354[0] != null ? group_stack_308354[0].length : 0);
									L30: do {
										F.line = 186;
											L31: while (true) {
											if (!(i_338430 < l_338431)) break L31;
												F.line = 32;
												gHEX60gensym337617_337644 = group_stack_308354[0][chckIndx(i_338430, 0, group_stack_308354[0].length+0-1)-0];
												if (!(eqStrings(gHEX60gensym337617_337644.id, []))) {
												if ((0 < (current_308355[0].idPath != null ? current_308355[0].idPath.length : 0))) {
												F.line = 35;
												if (current_308355[0].idPath != null) { current_308355[0].idPath = (current_308355[0].idPath).concat(makeNimstrLit("-")); } else { current_308355[0].idPath = makeNimstrLit("-"); };
												}
												
												F.line = 36;
												if (current_308355[0].idPath != null) { current_308355[0].idPath = (current_308355[0].idPath).concat(gHEX60gensym337617_337644.id); } else { current_308355[0].idPath = gHEX60gensym337617_337644.id.slice(); };
												}
												
												F.line = 188;
												i_338430 = addInt(i_338430, 1);
												if (!(((group_stack_308354[0] != null ? group_stack_308354[0].length : 0) == l_338431))) {
												F.line = 189;
												failed_assert_impl_56666(makeNimstrLit("C:\\Users\\me\\.choosenim\\toolchains\\nim-#devel\\lib\\system\\iterators.nim(189, 11) `len(a) ==\x0A    L` the length of the seq changed while iterating over it"));
												}
												
											}
									} while(false);
								} while(false);
								L32: do {
									F.line = 35;
									box_337650(20, addInt(20, mulInt(60, i_337615)), bar_w_337064, 60);
									if (overlap_308649(current_308355[0].screenBox, scroll_box_308356[0])) {
									F.line = 19;
									parent_308350[0] = (Tmp33 = HEX5BHEX5D_337071(group_stack_308354[0], 1), Tmp33)[0][Tmp33[1]];
									if (!(parent_308350[0].wasDrawn)) {
									F.line = 21;
									draw_323948(parent_308350[0]);
									F.line = 22;
									parent_308350[0].wasDrawn = true;
									}
									
									F.line = 24;
									current_308355[0] = {id: null, idPath: null, kind: null, text: null, placeholder: null, code: null, kids: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, rotation: 0.0, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0.0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0, textAlignVertical: 0}, imageName: null, cornerRadius: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, wasDrawn: false, editableText: false, multiline: false, drawable: false};
									F.line = 40;
									current_308355[0].id = nimCopy(null, makeNimstrLit("dec"), NTI43040);
									F.line = 73;
									current_308355[0].kind = nimCopy(null, makeNimstrLit("rectangle"), NTI43040);
									F.line = 27;
									current_308355[0].wasDrawn = false;
									F.line = 28;
									current_308355[0].transparency = 1.0000000000000000e+000;
									F.line = 29;
									nimCopy(current_308355[0].textStyle, parent_308350[0].textStyle, NTI308205);
									F.line = 30;
									if (group_stack_308354[0] != null) { group_stack_308354[0].push(current_308355[0]); } else { group_stack_308354[0] = [current_308355[0]]; };
									L34: do {
										F.line = 32;
										var gHEX60gensym337673_337700 = null;
										F.line = 184;
										var i_338437 = 0;
										F.line = 185;
										var l_338438 = (group_stack_308354[0] != null ? group_stack_308354[0].length : 0);
										L35: do {
											F.line = 186;
												L36: while (true) {
												if (!(i_338437 < l_338438)) break L36;
													F.line = 32;
													gHEX60gensym337673_337700 = group_stack_308354[0][chckIndx(i_338437, 0, group_stack_308354[0].length+0-1)-0];
													if (!(eqStrings(gHEX60gensym337673_337700.id, []))) {
													if ((0 < (current_308355[0].idPath != null ? current_308355[0].idPath.length : 0))) {
													F.line = 35;
													if (current_308355[0].idPath != null) { current_308355[0].idPath = (current_308355[0].idPath).concat(makeNimstrLit("-")); } else { current_308355[0].idPath = makeNimstrLit("-"); };
													}
													
													F.line = 36;
													if (current_308355[0].idPath != null) { current_308355[0].idPath = (current_308355[0].idPath).concat(gHEX60gensym337673_337700.id); } else { current_308355[0].idPath = gHEX60gensym337673_337700.id.slice(); };
													}
													
													F.line = 188;
													i_338437 = addInt(i_338437, 1);
													if (!(((group_stack_308354[0] != null ? group_stack_308354[0].length : 0) == l_338438))) {
													F.line = 189;
													failed_assert_impl_56666(makeNimstrLit("C:\\Users\\me\\.choosenim\\toolchains\\nim-#devel\\lib\\system\\iterators.nim(189, 11) `len(a) ==\x0A    L` the length of the seq changed while iterating over it"));
													}
													
												}
										} while(false);
									} while(false);
									L37: do {
										F.line = 41;
										box_337220(0, 0, 40, 40);
										F.line = 42;
										fill_325605(makeNimstrLit("#AEB5C0"));
										if (mouse_overlap_logic_325276()) {
										F.line = 45;
										fill_325605(makeNimstrLit("#FF4400"));
										}
										
											if (!mouse_308359[0].click) Tmp38 = false; else {												Tmp38 = mouse_overlap_logic_325276();											}										if (Tmp38) {
										F.line = 48;
										HEX2DHEX3D_337718(bar_337616, bar_337616_Idx, 1.0000000000000001e-001);
										if ((bar_337616[bar_337616_Idx] < 0.0)) {
										F.line = 49;
										bar_337616[bar_337616_Idx] = 0.0;
										}
										
										}
										
									} while(false);
									if (!(current_308355[0].wasDrawn)) {
									F.line = 47;
									draw_323948(current_308355[0]);
									F.line = 48;
									current_308355[0].wasDrawn = true;
									}
									
									F.line = 50;
									pop_324020(group_stack_308354, 0);
									if ((1 < (group_stack_308354[0] != null ? group_stack_308354[0].length : 0))) {
									F.line = 52;
									current_308355[0] = (Tmp39 = HEX5BHEX5D_337071(group_stack_308354[0], 1), Tmp39)[0][Tmp39[1]];
									}
									else {
										F.line = 54;
										current_308355[0] = null;
									}
									
									if ((2 < (group_stack_308354[0] != null ? group_stack_308354[0].length : 0))) {
									F.line = 56;
									parent_308350[0] = (Tmp40 = HEX5BHEX5D_337071(group_stack_308354[0], 2), Tmp40)[0][Tmp40[1]];
									}
									else {
										F.line = 58;
										parent_308350[0] = null;
									}
									
									F.line = 19;
									parent_308350[0] = (Tmp41 = HEX5BHEX5D_337071(group_stack_308354[0], 1), Tmp41)[0][Tmp41[1]];
									if (!(parent_308350[0].wasDrawn)) {
									F.line = 21;
									draw_323948(parent_308350[0]);
									F.line = 22;
									parent_308350[0].wasDrawn = true;
									}
									
									F.line = 24;
									current_308355[0] = {id: null, idPath: null, kind: null, text: null, placeholder: null, code: null, kids: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, rotation: 0.0, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0.0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0, textAlignVertical: 0}, imageName: null, cornerRadius: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, wasDrawn: false, editableText: false, multiline: false, drawable: false};
									F.line = 51;
									current_308355[0].id = nimCopy(null, makeNimstrLit("inc"), NTI43040);
									F.line = 73;
									current_308355[0].kind = nimCopy(null, makeNimstrLit("rectangle"), NTI43040);
									F.line = 27;
									current_308355[0].wasDrawn = false;
									F.line = 28;
									current_308355[0].transparency = 1.0000000000000000e+000;
									F.line = 29;
									nimCopy(current_308355[0].textStyle, parent_308350[0].textStyle, NTI308205);
									F.line = 30;
									if (group_stack_308354[0] != null) { group_stack_308354[0].push(current_308355[0]); } else { group_stack_308354[0] = [current_308355[0]]; };
									L42: do {
										F.line = 32;
										var gHEX60gensym337782_337809 = null;
										F.line = 184;
										var i_338446 = 0;
										F.line = 185;
										var l_338447 = (group_stack_308354[0] != null ? group_stack_308354[0].length : 0);
										L43: do {
											F.line = 186;
												L44: while (true) {
												if (!(i_338446 < l_338447)) break L44;
													F.line = 32;
													gHEX60gensym337782_337809 = group_stack_308354[0][chckIndx(i_338446, 0, group_stack_308354[0].length+0-1)-0];
													if (!(eqStrings(gHEX60gensym337782_337809.id, []))) {
													if ((0 < (current_308355[0].idPath != null ? current_308355[0].idPath.length : 0))) {
													F.line = 35;
													if (current_308355[0].idPath != null) { current_308355[0].idPath = (current_308355[0].idPath).concat(makeNimstrLit("-")); } else { current_308355[0].idPath = makeNimstrLit("-"); };
													}
													
													F.line = 36;
													if (current_308355[0].idPath != null) { current_308355[0].idPath = (current_308355[0].idPath).concat(gHEX60gensym337782_337809.id); } else { current_308355[0].idPath = gHEX60gensym337782_337809.id.slice(); };
													}
													
													F.line = 188;
													i_338446 = addInt(i_338446, 1);
													if (!(((group_stack_308354[0] != null ? group_stack_308354[0].length : 0) == l_338447))) {
													F.line = 189;
													failed_assert_impl_56666(makeNimstrLit("C:\\Users\\me\\.choosenim\\toolchains\\nim-#devel\\lib\\system\\iterators.nim(189, 11) `len(a) ==\x0A    L` the length of the seq changed while iterating over it"));
													}
													
												}
										} while(false);
									} while(false);
									L45: do {
										F.line = 52;
										box_337817((bar_w_337064 - 8.0000000000000000e+001), 0, 40, 40);
										F.line = 53;
										fill_325605(makeNimstrLit("#AEB5C0"));
										if (mouse_overlap_logic_325276()) {
										F.line = 56;
										fill_325605(makeNimstrLit("#FF4400"));
										}
										
											if (!mouse_308359[0].click) Tmp46 = false; else {												Tmp46 = mouse_overlap_logic_325276();											}										if (Tmp46) {
										F.line = 59;
										HEX2BHEX3D_199656(bar_337616, bar_337616_Idx, 1.0000000000000001e-001);
										if ((1.0000000000000000e+000 < bar_337616[bar_337616_Idx])) {
										F.line = 60;
										bar_337616[bar_337616_Idx] = 1.0000000000000000e+000;
										}
										
										}
										
									} while(false);
									if (!(current_308355[0].wasDrawn)) {
									F.line = 47;
									draw_323948(current_308355[0]);
									F.line = 48;
									current_308355[0].wasDrawn = true;
									}
									
									F.line = 50;
									pop_324020(group_stack_308354, 0);
									if ((1 < (group_stack_308354[0] != null ? group_stack_308354[0].length : 0))) {
									F.line = 52;
									current_308355[0] = (Tmp47 = HEX5BHEX5D_337071(group_stack_308354[0], 1), Tmp47)[0][Tmp47[1]];
									}
									else {
										F.line = 54;
										current_308355[0] = null;
									}
									
									if ((2 < (group_stack_308354[0] != null ? group_stack_308354[0].length : 0))) {
									F.line = 56;
									parent_308350[0] = (Tmp48 = HEX5BHEX5D_337071(group_stack_308354[0], 2), Tmp48)[0][Tmp48[1]];
									}
									else {
										F.line = 58;
										parent_308350[0] = null;
									}
									
									F.line = 19;
									parent_308350[0] = (Tmp49 = HEX5BHEX5D_337071(group_stack_308354[0], 1), Tmp49)[0][Tmp49[1]];
									if (!(parent_308350[0].wasDrawn)) {
									F.line = 21;
									draw_323948(parent_308350[0]);
									F.line = 22;
									parent_308350[0].wasDrawn = true;
									}
									
									F.line = 24;
									current_308355[0] = {id: null, idPath: null, kind: null, text: null, placeholder: null, code: null, kids: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, rotation: 0.0, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0.0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0, textAlignVertical: 0}, imageName: null, cornerRadius: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, wasDrawn: false, editableText: false, multiline: false, drawable: false};
									F.line = 62;
									current_308355[0].id = nimCopy(null, makeNimstrLit("bar"), NTI43040);
									F.line = 63;
									current_308355[0].kind = nimCopy(null, makeNimstrLit("group"), NTI43040);
									F.line = 27;
									current_308355[0].wasDrawn = false;
									F.line = 28;
									current_308355[0].transparency = 1.0000000000000000e+000;
									F.line = 29;
									nimCopy(current_308355[0].textStyle, parent_308350[0].textStyle, NTI308205);
									F.line = 30;
									if (group_stack_308354[0] != null) { group_stack_308354[0].push(current_308355[0]); } else { group_stack_308354[0] = [current_308355[0]]; };
									L50: do {
										F.line = 32;
										var gHEX60gensym337891_337918 = null;
										F.line = 184;
										var i_338455 = 0;
										F.line = 185;
										var l_338456 = (group_stack_308354[0] != null ? group_stack_308354[0].length : 0);
										L51: do {
											F.line = 186;
												L52: while (true) {
												if (!(i_338455 < l_338456)) break L52;
													F.line = 32;
													gHEX60gensym337891_337918 = group_stack_308354[0][chckIndx(i_338455, 0, group_stack_308354[0].length+0-1)-0];
													if (!(eqStrings(gHEX60gensym337891_337918.id, []))) {
													if ((0 < (current_308355[0].idPath != null ? current_308355[0].idPath.length : 0))) {
													F.line = 35;
													if (current_308355[0].idPath != null) { current_308355[0].idPath = (current_308355[0].idPath).concat(makeNimstrLit("-")); } else { current_308355[0].idPath = makeNimstrLit("-"); };
													}
													
													F.line = 36;
													if (current_308355[0].idPath != null) { current_308355[0].idPath = (current_308355[0].idPath).concat(gHEX60gensym337891_337918.id); } else { current_308355[0].idPath = gHEX60gensym337891_337918.id.slice(); };
													}
													
													F.line = 188;
													i_338455 = addInt(i_338455, 1);
													if (!(((group_stack_308354[0] != null ? group_stack_308354[0].length : 0) == l_338456))) {
													F.line = 189;
													failed_assert_impl_56666(makeNimstrLit("C:\\Users\\me\\.choosenim\\toolchains\\nim-#devel\\lib\\system\\iterators.nim(189, 11) `len(a) ==\x0A    L` the length of the seq changed while iterating over it"));
													}
													
												}
										} while(false);
									} while(false);
									L53: do {
										F.line = 63;
										box_337650(60, 0, (bar_w_337064 - 1.6000000000000000e+002), 40);
										F.line = 19;
										parent_308350[0] = (Tmp54 = HEX5BHEX5D_337071(group_stack_308354[0], 1), Tmp54)[0][Tmp54[1]];
										if (!(parent_308350[0].wasDrawn)) {
										F.line = 21;
										draw_323948(parent_308350[0]);
										F.line = 22;
										parent_308350[0].wasDrawn = true;
										}
										
										F.line = 24;
										current_308355[0] = {id: null, idPath: null, kind: null, text: null, placeholder: null, code: null, kids: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, rotation: 0.0, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0.0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0, textAlignVertical: 0}, imageName: null, cornerRadius: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, wasDrawn: false, editableText: false, multiline: false, drawable: false};
										F.line = 93;
										current_308355[0].id = nimCopy(null, [], NTI43040);
										F.line = 73;
										current_308355[0].kind = nimCopy(null, makeNimstrLit("rectangle"), NTI43040);
										F.line = 27;
										current_308355[0].wasDrawn = false;
										F.line = 28;
										current_308355[0].transparency = 1.0000000000000000e+000;
										F.line = 29;
										nimCopy(current_308355[0].textStyle, parent_308350[0].textStyle, NTI308205);
										F.line = 30;
										if (group_stack_308354[0] != null) { group_stack_308354[0].push(current_308355[0]); } else { group_stack_308354[0] = [current_308355[0]]; };
										L55: do {
											F.line = 32;
											var gHEX60gensym337937_337964 = null;
											F.line = 184;
											var i_338462 = 0;
											F.line = 185;
											var l_338463 = (group_stack_308354[0] != null ? group_stack_308354[0].length : 0);
											L56: do {
												F.line = 186;
													L57: while (true) {
													if (!(i_338462 < l_338463)) break L57;
														F.line = 32;
														gHEX60gensym337937_337964 = group_stack_308354[0][chckIndx(i_338462, 0, group_stack_308354[0].length+0-1)-0];
														if (!(eqStrings(gHEX60gensym337937_337964.id, []))) {
														if ((0 < (current_308355[0].idPath != null ? current_308355[0].idPath.length : 0))) {
														F.line = 35;
														if (current_308355[0].idPath != null) { current_308355[0].idPath = (current_308355[0].idPath).concat(makeNimstrLit("-")); } else { current_308355[0].idPath = makeNimstrLit("-"); };
														}
														
														F.line = 36;
														if (current_308355[0].idPath != null) { current_308355[0].idPath = (current_308355[0].idPath).concat(gHEX60gensym337937_337964.id); } else { current_308355[0].idPath = gHEX60gensym337937_337964.id.slice(); };
														}
														
														F.line = 188;
														i_338462 = addInt(i_338462, 1);
														if (!(((group_stack_308354[0] != null ? group_stack_308354[0].length : 0) == l_338463))) {
														F.line = 189;
														failed_assert_impl_56666(makeNimstrLit("C:\\Users\\me\\.choosenim\\toolchains\\nim-#devel\\lib\\system\\iterators.nim(189, 11) `len(a) ==\x0A    L` the length of the seq changed while iterating over it"));
														}
														
													}
											} while(false);
										} while(false);
										L58: do {
											F.line = 94;
											box_337276(0, 0, parent_308350[0].box.w, parent_308350[0].box.h);
											F.line = 95;
											fill_325605(makeNimstrLit("#F7F7F9"));
										} while(false);
										if (!(current_308355[0].wasDrawn)) {
										F.line = 47;
										draw_323948(current_308355[0]);
										F.line = 48;
										current_308355[0].wasDrawn = true;
										}
										
										F.line = 50;
										pop_324020(group_stack_308354, 0);
										if ((1 < (group_stack_308354[0] != null ? group_stack_308354[0].length : 0))) {
										F.line = 52;
										current_308355[0] = (Tmp59 = HEX5BHEX5D_337071(group_stack_308354[0], 1), Tmp59)[0][Tmp59[1]];
										}
										else {
											F.line = 54;
											current_308355[0] = null;
										}
										
										if ((2 < (group_stack_308354[0] != null ? group_stack_308354[0].length : 0))) {
										F.line = 56;
										parent_308350[0] = (Tmp60 = HEX5BHEX5D_337071(group_stack_308354[0], 2), Tmp60)[0][Tmp60[1]];
										}
										else {
											F.line = 58;
											parent_308350[0] = null;
										}
										
										F.line = 19;
										parent_308350[0] = (Tmp61 = HEX5BHEX5D_337071(group_stack_308354[0], 1), Tmp61)[0][Tmp61[1]];
										if (!(parent_308350[0].wasDrawn)) {
										F.line = 21;
										draw_323948(parent_308350[0]);
										F.line = 22;
										parent_308350[0].wasDrawn = true;
										}
										
										F.line = 24;
										current_308355[0] = {id: null, idPath: null, kind: null, text: null, placeholder: null, code: null, kids: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, rotation: 0.0, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0.0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0, textAlignVertical: 0}, imageName: null, cornerRadius: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, wasDrawn: false, editableText: false, multiline: false, drawable: false};
										F.line = 66;
										current_308355[0].id = nimCopy(null, makeNimstrLit("barFg"), NTI43040);
										F.line = 73;
										current_308355[0].kind = nimCopy(null, makeNimstrLit("rectangle"), NTI43040);
										F.line = 27;
										current_308355[0].wasDrawn = false;
										F.line = 28;
										current_308355[0].transparency = 1.0000000000000000e+000;
										F.line = 29;
										nimCopy(current_308355[0].textStyle, parent_308350[0].textStyle, NTI308205);
										F.line = 30;
										if (group_stack_308354[0] != null) { group_stack_308354[0].push(current_308355[0]); } else { group_stack_308354[0] = [current_308355[0]]; };
										L62: do {
											F.line = 32;
											var gHEX60gensym338025_338052 = null;
											F.line = 184;
											var i_338471 = 0;
											F.line = 185;
											var l_338472 = (group_stack_308354[0] != null ? group_stack_308354[0].length : 0);
											L63: do {
												F.line = 186;
													L64: while (true) {
													if (!(i_338471 < l_338472)) break L64;
														F.line = 32;
														gHEX60gensym338025_338052 = group_stack_308354[0][chckIndx(i_338471, 0, group_stack_308354[0].length+0-1)-0];
														if (!(eqStrings(gHEX60gensym338025_338052.id, []))) {
														if ((0 < (current_308355[0].idPath != null ? current_308355[0].idPath.length : 0))) {
														F.line = 35;
														if (current_308355[0].idPath != null) { current_308355[0].idPath = (current_308355[0].idPath).concat(makeNimstrLit("-")); } else { current_308355[0].idPath = makeNimstrLit("-"); };
														}
														
														F.line = 36;
														if (current_308355[0].idPath != null) { current_308355[0].idPath = (current_308355[0].idPath).concat(gHEX60gensym338025_338052.id); } else { current_308355[0].idPath = gHEX60gensym338025_338052.id.slice(); };
														}
														
														F.line = 188;
														i_338471 = addInt(i_338471, 1);
														if (!(((group_stack_308354[0] != null ? group_stack_308354[0].length : 0) == l_338472))) {
														F.line = 189;
														failed_assert_impl_56666(makeNimstrLit("C:\\Users\\me\\.choosenim\\toolchains\\nim-#devel\\lib\\system\\iterators.nim(189, 11) `len(a) ==\x0A    L` the length of the seq changed while iterating over it"));
														}
														
													}
											} while(false);
										} while(false);
										L65: do {
											F.line = 67;
											box_325508(0.0, 0.0, ((bar_w_337064 - 1.6000000000000000e+002) * bar_337616[bar_337616_Idx]), 4.0000000000000000e+001);
											F.line = 68;
											fill_325605(makeNimstrLit("#46D15F"));
										} while(false);
										if (!(current_308355[0].wasDrawn)) {
										F.line = 47;
										draw_323948(current_308355[0]);
										F.line = 48;
										current_308355[0].wasDrawn = true;
										}
										
										F.line = 50;
										pop_324020(group_stack_308354, 0);
										if ((1 < (group_stack_308354[0] != null ? group_stack_308354[0].length : 0))) {
										F.line = 52;
										current_308355[0] = (Tmp66 = HEX5BHEX5D_337071(group_stack_308354[0], 1), Tmp66)[0][Tmp66[1]];
										}
										else {
											F.line = 54;
											current_308355[0] = null;
										}
										
										if ((2 < (group_stack_308354[0] != null ? group_stack_308354[0].length : 0))) {
										F.line = 56;
										parent_308350[0] = (Tmp67 = HEX5BHEX5D_337071(group_stack_308354[0], 2), Tmp67)[0][Tmp67[1]];
										}
										else {
											F.line = 58;
											parent_308350[0] = null;
										}
										
									} while(false);
									if (!(current_308355[0].wasDrawn)) {
									F.line = 47;
									draw_323948(current_308355[0]);
									F.line = 48;
									current_308355[0].wasDrawn = true;
									}
									
									F.line = 50;
									pop_324020(group_stack_308354, 0);
									if ((1 < (group_stack_308354[0] != null ? group_stack_308354[0].length : 0))) {
									F.line = 52;
									current_308355[0] = (Tmp68 = HEX5BHEX5D_337071(group_stack_308354[0], 1), Tmp68)[0][Tmp68[1]];
									}
									else {
										F.line = 54;
										current_308355[0] = null;
									}
									
									if ((2 < (group_stack_308354[0] != null ? group_stack_308354[0].length : 0))) {
									F.line = 56;
									parent_308350[0] = (Tmp69 = HEX5BHEX5D_337071(group_stack_308354[0], 2), Tmp69)[0][Tmp69[1]];
									}
									else {
										F.line = 58;
										parent_308350[0] = null;
									}
									
									}
									
								} while(false);
								if (!(current_308355[0].wasDrawn)) {
								F.line = 47;
								draw_323948(current_308355[0]);
								F.line = 48;
								current_308355[0].wasDrawn = true;
								}
								
								F.line = 50;
								pop_324020(group_stack_308354, 0);
								if ((1 < (group_stack_308354[0] != null ? group_stack_308354[0].length : 0))) {
								F.line = 52;
								current_308355[0] = (Tmp70 = HEX5BHEX5D_337071(group_stack_308354[0], 1), Tmp70)[0][Tmp70[1]];
								}
								else {
									F.line = 54;
									current_308355[0] = null;
								}
								
								if ((2 < (group_stack_308354[0] != null ? group_stack_308354[0].length : 0))) {
								F.line = 56;
								parent_308350[0] = (Tmp71 = HEX5BHEX5D_337071(group_stack_308354[0], 2), Tmp71)[0][Tmp71[1]];
								}
								else {
									F.line = 58;
									parent_308350[0] = null;
								}
								
								F.line = 131;
								i_338483 = addInt(i_338483, 1);
								if (!(((bars_327090[0] != null ? bars_327090[0].length : 0) == l_338484))) {
								F.line = 132;
								failed_assert_impl_56666(makeNimstrLit("C:\\Users\\me\\.choosenim\\toolchains\\nim-#devel\\lib\\system\\iterators.nim(132, 11) `len(a) ==\x0A    L` the length of the seq changed while iterating over it"));
								}
								
							}
					} while(false);
				} while(false);
			} while(false);
			if (!(current_308355[0].wasDrawn)) {
			F.line = 47;
			draw_323948(current_308355[0]);
			F.line = 48;
			current_308355[0].wasDrawn = true;
			}
			
			F.line = 50;
			pop_324020(group_stack_308354, 0);
			if ((1 < (group_stack_308354[0] != null ? group_stack_308354[0].length : 0))) {
			F.line = 52;
			current_308355[0] = (Tmp72 = HEX5BHEX5D_337071(group_stack_308354[0], 1), Tmp72)[0][Tmp72[1]];
			}
			else {
				F.line = 54;
				current_308355[0] = null;
			}
			
			if ((2 < (group_stack_308354[0] != null ? group_stack_308354[0].length : 0))) {
			F.line = 56;
			parent_308350[0] = (Tmp73 = HEX5BHEX5D_337071(group_stack_308354[0], 2), Tmp73)[0][Tmp73[1]];
			}
			else {
				F.line = 58;
				parent_308350[0] = null;
			}
			
		} while(false);
		if (!(current_308355[0].wasDrawn)) {
		F.line = 47;
		draw_323948(current_308355[0]);
		F.line = 48;
		current_308355[0].wasDrawn = true;
		}
		
		F.line = 50;
		pop_324020(group_stack_308354, 0);
		if ((1 < (group_stack_308354[0] != null ? group_stack_308354[0].length : 0))) {
		F.line = 52;
		current_308355[0] = (Tmp74 = HEX5BHEX5D_337071(group_stack_308354[0], 1), Tmp74)[0][Tmp74[1]];
		}
		else {
			F.line = 54;
			current_308355[0] = null;
		}
		
		if ((2 < (group_stack_308354[0] != null ? group_stack_308354[0].length : 0))) {
		F.line = 56;
		parent_308350[0] = (Tmp75 = HEX5BHEX5D_337071(group_stack_308354[0], 2), Tmp75)[0][Tmp75[1]];
		}
		else {
			F.line = 58;
			parent_308350[0] = null;
		}
		
	framePtr = F.prev;

	
}
var bars_327090 = [new_seq_327056(30)];
L2: do {
	var i_327214 = [0];
	var bar_327215 = [0.0];
	var i_338383 = 0;
	var l_338384 = (bars_327090[0] != null ? bars_327090[0].length : 0);
	L3: do {
			L4: while (true) {
			if (!(i_338383 < l_338384)) break L4;
				i_327214[0] = i_338383;
				bar_327215[0] = bars_327090[0][i_338383];
				bars_327090[0][i_327214[0]] = rand_284820(1.0000000000000000e+000);
				i_338383 += 1;
				if (!(((bars_327090[0] != null ? bars_327090[0].length : 0) == l_338384))) {
				failed_assert_impl_56666(makeNimstrLit("C:\\Users\\me\\.choosenim\\toolchains\\nim-#devel\\lib\\system\\iterators.nim(122, 11) `len(a) ==\x0A    L` the length of the seq changed while iterating over it"));
				}
				
			}
	} while(false);
} while(false);
draw_main_308363[0] = HEX3Aanonymous_327216;
start_fidget_324313();
