/* Generated by the Nim Compiler v0.19.9 */
/*   (c) 2018 Andreas Rumpf */

var framePtr = null;
var excHandler = 0;
var lastJSError = null;
if (typeof Int8Array === 'undefined') Int8Array = Array;
if (typeof Int16Array === 'undefined') Int16Array = Array;
if (typeof Int32Array === 'undefined') Int32Array = Array;
if (typeof Uint8Array === 'undefined') Uint8Array = Array;
if (typeof Uint16Array === 'undefined') Uint16Array = Array;
if (typeof Uint32Array === 'undefined') Uint32Array = Array;
if (typeof Float32Array === 'undefined') Float32Array = Array;
if (typeof Float64Array === 'undefined') Float64Array = Array;
var NTI40254 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI40252 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI171695 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI253194 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI272878 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI272816 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI36014 = {size: 0,kind: 35,base: null,node: null,finalizer: null};
var NTI272818 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI40244 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI259081 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI259036 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI36032 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI36028 = {size: 0,kind: 37,base: null,node: null,finalizer: null};
var NTI253192 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI259034 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI259068 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI259063 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI259040 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI259193 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI36026 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI259032 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI40258 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI40242 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI40246 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI179015 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI224067 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI224064 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI224061 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI40262 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI36006 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI52344 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI40208 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI40318 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI36016 = {size: 0,kind: 40,base: null,node: null,finalizer: null};
var NTI36040 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI36042 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI40312 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI40226 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI40228 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI40250 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NNI40250 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI40250.node = NNI40250;
var NNI40228 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI40228.node = NNI40228;
NTI40312.base = NTI40226;
NTI40318.base = NTI40226;
var NNI40226 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI40312, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI36042, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI36040, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI36040, name: "trace", sons: null}, 
{kind: 1, offset: "raiseId", len: 0, typ: NTI36016, name: "raiseId", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI40318, name: "up", sons: null}]};
NTI40226.node = NNI40226;
var NNI40208 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI40208.node = NNI40208;
NTI40226.base = NTI40208;
NTI40228.base = NTI40226;
NTI40250.base = NTI40228;
var NNI52344 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI36042, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI36006, name: "Field1", sons: null}]};
NTI52344.node = NNI52344;
var NNI40262 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI40262.node = NNI40262;
NTI40262.base = NTI40228;
var NNI224067 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI179015, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI36040, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI36040, name: "Field2", sons: null}]};
NTI224067.node = NNI224067;
NTI224064.base = NTI224067;
var NNI224061 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI224064, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI36006, name: "counter", sons: null}]};
NTI224061.node = NNI224061;
var NNI40246 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI40246.node = NNI40246;
var NNI40242 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI40242.node = NNI40242;
NTI40242.base = NTI40228;
NTI40246.base = NTI40242;
var NNI40258 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI40258.node = NNI40258;
NTI40258.base = NTI40228;
var NNI259032 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "x", len: 0, typ: NTI36026, name: "x", sons: null}, 
{kind: 1, offset: "y", len: 0, typ: NTI36026, name: "y", sons: null}]};
NTI259032.node = NNI259032;
NTI259068.base = NTI259040;
var NNI259034 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "x", len: 0, typ: NTI36026, name: "x", sons: null}, 
{kind: 1, offset: "y", len: 0, typ: NTI36026, name: "y", sons: null}, 
{kind: 1, offset: "w", len: 0, typ: NTI36026, name: "w", sons: null}, 
{kind: 1, offset: "h", len: 0, typ: NTI36026, name: "h", sons: null}]};
NTI259034.node = NNI259034;
var NNI253192 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "r", len: 0, typ: NTI36028, name: "r", sons: null}, 
{kind: 1, offset: "g", len: 0, typ: NTI36028, name: "g", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI36028, name: "b", sons: null}, 
{kind: 1, offset: "a", len: 0, typ: NTI36028, name: "a", sons: null}]};
NTI253192.node = NNI253192;
var NNI259036 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "fontFamily", len: 0, typ: NTI36040, name: "fontFamily", sons: null}, 
{kind: 1, offset: "fontSize", len: 0, typ: NTI36026, name: "fontSize", sons: null}, 
{kind: 1, offset: "fontWeight", len: 0, typ: NTI36026, name: "fontWeight", sons: null}, 
{kind: 1, offset: "lineHeight", len: 0, typ: NTI36026, name: "lineHeight", sons: null}, 
{kind: 1, offset: "textAlignHorizontal", len: 0, typ: NTI36026, name: "textAlignHorizontal", sons: null}, 
{kind: 1, offset: "textAlignVertical", len: 0, typ: NTI36026, name: "textAlignVertical", sons: null}]};
NTI259036.node = NNI259036;
var NNI259081 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI36006, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI36006, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI36006, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI36006, name: "Field3", sons: null}]};
NTI259081.node = NNI259081;
var NNI259063 = {kind: 2, len: 19, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "id", len: 0, typ: NTI36040, name: "id", sons: null}, 
{kind: 1, offset: "kind", len: 0, typ: NTI36040, name: "kind", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI36040, name: "text", sons: null}, 
{kind: 1, offset: "code", len: 0, typ: NTI36040, name: "code", sons: null}, 
{kind: 1, offset: "kids", len: 0, typ: NTI259068, name: "kids", sons: null}, 
{kind: 1, offset: "box", len: 0, typ: NTI259034, name: "box", sons: null}, 
{kind: 1, offset: "screenBox", len: 0, typ: NTI259034, name: "screenBox", sons: null}, 
{kind: 1, offset: "fill", len: 0, typ: NTI253192, name: "fill", sons: null}, 
{kind: 1, offset: "transparency", len: 0, typ: NTI36028, name: "transparency", sons: null}, 
{kind: 1, offset: "strokeWeight", len: 0, typ: NTI36006, name: "strokeWeight", sons: null}, 
{kind: 1, offset: "stroke", len: 0, typ: NTI253192, name: "stroke", sons: null}, 
{kind: 1, offset: "zLevel", len: 0, typ: NTI36006, name: "zLevel", sons: null}, 
{kind: 1, offset: "resizeDone", len: 0, typ: NTI36032, name: "resizeDone", sons: null}, 
{kind: 1, offset: "htmlDone", len: 0, typ: NTI36032, name: "htmlDone", sons: null}, 
{kind: 1, offset: "textStyle", len: 0, typ: NTI259036, name: "textStyle", sons: null}, 
{kind: 1, offset: "imageName", len: 0, typ: NTI36040, name: "imageName", sons: null}, 
{kind: 1, offset: "cornerRadius", len: 0, typ: NTI259081, name: "cornerRadius", sons: null}, 
{kind: 1, offset: "wasDrawn", len: 0, typ: NTI36032, name: "wasDrawn", sons: null}, 
{kind: 1, offset: "editableText", len: 0, typ: NTI36032, name: "editableText", sons: null}]};
NTI259063.node = NNI259063;
NTI259040.base = NTI259063;
NTI259193.base = NTI259040;
var NNI40244 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI40244.node = NNI40244;
NTI40244.base = NTI40242;
NTI272816.base = NTI272878;
var NNI272818 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "seconds", len: 0, typ: NTI36014, name: "seconds", sons: null}, 
{kind: 1, offset: "nanosecond", len: 0, typ: NTI272816, name: "nanosecond", sons: null}]};
NTI272818.node = NNI272818;
var NNI253194 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI253194.node = NNI253194;
NTI253194.base = NTI40226;
NTI171695.base = NTI36040;
var NNI40252 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI40252.node = NNI40252;
NTI40252.base = NTI40228;
var NNI40254 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI40254.node = NNI40254;
NTI40254.base = NTI40252;

function setConstr() {
		    var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

	
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_54230, src_54231, ti_54232) {
	var result_54419 = null;

		switch (ti_54232.kind) {
		case 21:
		case 22:
		case 23:
		case 5:
			if (!(is_fat_pointer_54201(ti_54232))) {
			result_54419 = src_54231;
			}
			else {
				result_54419 = [src_54231[0], src_54231[1]];
			}
			
			break;
		case 19:
			      if (dest_54230 === null || dest_54230 === undefined) {
        dest_54230 = {};
      }
      else {
        for (var key in dest_54230) { delete dest_54230[key]; }
      }
      for (var key in src_54231) { dest_54230[key] = src_54231[key]; }
      result_54419 = dest_54230;
    
			break;
		case 18:
		case 17:
			if (!((ti_54232.base == null))) {
			result_54419 = nimCopy(dest_54230, src_54231, ti_54232.base);
			}
			else {
			if ((ti_54232.kind == 17)) {
			result_54419 = (dest_54230 === null || dest_54230 === undefined) ? {m_type: ti_54232} : dest_54230;
			}
			else {
				result_54419 = (dest_54230 === null || dest_54230 === undefined) ? {} : dest_54230;
			}
			}
			nimCopyAux(result_54419, src_54231, ti_54232.node);
			break;
		case 24:
		case 4:
		case 27:
		case 16:
			      if (src_54231 === null) {
        result_54419 = null;
      }
      else {
        if (dest_54230 === null || dest_54230 === undefined) {
          dest_54230 = new Array(src_54231.length);
        }
        else {
          dest_54230.length = src_54231.length;
        }
        result_54419 = dest_54230;
        for (var i = 0; i < src_54231.length; ++i) {
          result_54419[i] = nimCopy(result_54419[i], src_54231[i], ti_54232.base);
        }
      }
    
			break;
		case 28:
			      if (src_54231 !== null) {
        result_54419 = src_54231.slice(0);
      }
    
			break;
		default: 
			result_54419 = src_54231;
			break;
		}

	return result_54419;

}

function makeNimstrLit(c_53212) {
		  var ln = c_53212.length;
  var result = new Array(ln);
  for (var i = 0; i < ln; ++i) {
    result[i] = c_53212.charCodeAt(i);
  }
  return result;
  

	
}

function arrayConstr(len_54480, value_54481, typ_54482) {
		    var result = new Array(len_54480);
    for (var i = 0; i < len_54480; ++i) result[i] = nimCopy(null, value_54481, typ_54482);
    return result;
  

	
}

function cstrToNimstr(c_53229) {
		  var ln = c_53229.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_53229.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_53229.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

	
}

function toJSStr(s_53246) {
		  if (s_53246 === null) return "";
  var len = s_53246.length;
  var asciiPart = new Array(len);
  var fcc = String.fromCharCode;
  var nonAsciiPart = null;
  var nonAsciiOffset = 0;
  for (var i = 0; i < len; ++i) {
    if (nonAsciiPart !== null) {
      var offset = (i - nonAsciiOffset) * 2;
      var code = s_53246[i].toString(16);
      if (code.length == 1) {
        code = "0"+code;
      }
      nonAsciiPart[offset] = "%";
      nonAsciiPart[offset + 1] = code;
    }
    else if (s_53246[i] < 128)
      asciiPart[i] = fcc(s_53246[i]);
    else {
      asciiPart.length = i;
      nonAsciiOffset = i;
      nonAsciiPart = new Array((len - i) * 2);
      --i;
    }
  }
  asciiPart = asciiPart.join("");
  return (nonAsciiPart === null) ?
      asciiPart : asciiPart + decodeURIComponent(nonAsciiPart.join(""));
  

	
}

function raiseException(e_52818, ename_52819) {
		e_52818.name = ename_52819;
		if ((excHandler == 0)) {
		unhandledException(e_52818);
		}
		
		e_52818.trace = nimCopy(null, raw_write_stack_trace_52641(), NTI36040);
		throw e_52818;

	
}

function chckRange(i_54518, a_54519, b_54520) {
			var Tmp1;

	var result_54521 = 0;

	BeforeRet: do {
			if (!(a_54519 <= i_54518)) Tmp1 = false; else {				Tmp1 = (i_54518 <= b_54520);			}		if (Tmp1) {
		result_54521 = i_54518;
		break BeforeRet;
		}
		else {
		raiseRangeError();
		}
		
	} while (false);

	return result_54521;

}

function subInt(a_53621, b_53622) {
		    var result = a_53621 - b_53622;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}

function chckIndx(i_54499, a_54500, b_54501) {
			var Tmp1;

	var result_54502 = 0;

	BeforeRet: do {
			if (!(a_54500 <= i_54499)) Tmp1 = false; else {				Tmp1 = (i_54499 <= b_54501);			}		if (Tmp1) {
		result_54502 = i_54499;
		break BeforeRet;
		}
		else {
		raiseIndexError();
		}
		
	} while (false);

	return result_54502;

}

function addInt(a_53603, b_53604) {
		    var result = a_53603 + b_53604;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}

function eqStrings(a_53441, b_53442) {
		    if (a_53441 == b_53442) return true;
    if (a_53441 === null && b_53442.length == 0) return true;
    if (b_53442 === null && a_53441.length == 0) return true;
    if ((!a_53441) || (!b_53442)) return false;
    var alen = a_53441.length;
    if (alen != b_53442.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_53441[i] != b_53442[i]) return false;
    return true;
  

	
}

function mulInt(a_53639, b_53640) {
		    var result = a_53639 * b_53640;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}

function rawEcho() {
		      var buf = "";
      for (var i = 0; i < arguments.length; ++i) {
        buf += toJSStr(arguments[i]);
      }
      console.log(buf);
    

	
}

function divInt(a_53657, b_53658) {
		    if (b_53658 == 0) raiseDivByZero();
    if (b_53658 == -1 && a_53657 == 2147483647) raiseOverflow();
    return Math.trunc(a_53657 / b_53658);
  

	
}
		var unit_weights_273005 = [1, 1000, 1000000, 1000000000, 60000000000, 3600000000000, 86400000000000, 604800000000000];

function modInt(a_53675, b_53676) {
		    if (b_53676 == 0) raiseDivByZero();
    if (b_53676 == -1 && a_53675 == 2147483647) raiseOverflow();
    return Math.trunc(a_53675 % b_53676);
  

	
}

function nimMax(a_53958, b_53959) {
		var Tmp1;

	var result_53960 = 0;

	BeforeRet: do {
		if ((b_53959 <= a_53958)) {
		Tmp1 = a_53958;
		}
		else {
		Tmp1 = b_53959;
		}
		
		result_53960 = Tmp1;
		break BeforeRet;
	} while (false);

	return result_53960;

}

function nimMin(a_53940, b_53941) {
		var Tmp1;

	var result_53942 = 0;

	BeforeRet: do {
		if ((a_53940 <= b_53941)) {
		Tmp1 = a_53940;
		}
		else {
		Tmp1 = b_53941;
		}
		
		result_53942 = Tmp1;
		break BeforeRet;
	} while (false);

	return result_53942;

}

function mnewString(len_53263) {
		    return new Array(len_53263);
  

	
}
var ConstSet2 = setConstr(32, 9, 11, 13, 10, 12);
var ConstSet3 = setConstr([97, 122], [65, 90], [48, 57], 95);
var ConstSet4 = setConstr([97, 122], [65, 90], [48, 57], 95);
var ConstSet5 = setConstr([48, 57]);
var ConstSet6 = setConstr([48, 57]);
var ConstSet7 = setConstr(101, 69);
var ConstSet8 = setConstr([48, 57]);
var ConstSet9 = setConstr([48, 57]);

function nimParseBiggestFloat(s_54697, number_54699, number_54699_Idx, start_54700) {
	var result_54702 = 0;

	var F={procname:"system.nimParseBiggestFloat",prev:framePtr,filename:"../../../../Nim/lib/system/jssys.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 676;
		var esign_54703 = 1.0000000000000000e+00;
		F.line = 677;
		var sign_54704 = 1.0000000000000000e+00;
		F.line = 678;
		var i_54705 = start_54700;
		F.line = 679;
		var exponent_54706 = 0;
		F.line = 680;
		var flags_54707 = 0;
		F.line = 681;
		number_54699[number_54699_Idx] = 0.0;
		if ((s_54697[i_54705] == 43)) {
		F.line = 682;
		i_54705 += 1;
		}
		else {
		if ((s_54697[i_54705] == 45)) {
		F.line = 684;
		sign_54704 = -1.0000000000000000e+00;
		F.line = 685;
		i_54705 += 1;
		}
		}
		if (((s_54697[i_54705] == 78) || (s_54697[i_54705] == 110))) {
		if (((s_54697[(i_54705 + 1)] == 65) || (s_54697[(i_54705 + 1)] == 97))) {
		if (((s_54697[(i_54705 + 2)] == 78) || (s_54697[(i_54705 + 2)] == 110))) {
		if (!((ConstSet3[s_54697[(i_54705 + 3)]] != undefined))) {
		F.line = 690;
		number_54699[number_54699_Idx] = NaN;
		F.line = 691;
		result_54702 = ((i_54705 + 3) - start_54700);
		break BeforeRet;
		}
		
		}
		
		}
		
		F.line = 692;
		result_54702 = 0;
		break BeforeRet;
		}
		
		if (((s_54697[i_54705] == 73) || (s_54697[i_54705] == 105))) {
		if (((s_54697[(i_54705 + 1)] == 78) || (s_54697[(i_54705 + 1)] == 110))) {
		if (((s_54697[(i_54705 + 2)] == 70) || (s_54697[(i_54705 + 2)] == 102))) {
		if (!((ConstSet4[s_54697[(i_54705 + 3)]] != undefined))) {
		F.line = 697;
		number_54699[number_54699_Idx] = (Infinity * sign_54704);
		F.line = 698;
		result_54702 = ((i_54705 + 3) - start_54700);
		break BeforeRet;
		}
		
		}
		
		}
		
		F.line = 699;
		result_54702 = 0;
		break BeforeRet;
		}
		
		L1: do {
			F.line = 700;
				L2: while (true) {
				if (!(ConstSet5[s_54697[i_54705]] != undefined)) break L2;
					F.line = 702;
					flags_54707 = (flags_54707 | 1);
					F.line = 703;
					number_54699[number_54699_Idx] = ((number_54699[number_54699_Idx] * 1.0000000000000000e+01) + (s_54697[i_54705] - 48));
					F.line = 704;
					i_54705 += 1;
					L3: do {
						F.line = 705;
							L4: while (true) {
							if (!(s_54697[i_54705] == 95)) break L4;
								F.line = 705;
								i_54705 += 1;
							}
					} while(false);
				}
		} while(false);
		if ((s_54697[i_54705] == 46)) {
		F.line = 708;
		var hd_54786 = 1.0000000000000000e+00;
		F.line = 709;
		i_54705 += 1;
		L5: do {
			F.line = 710;
				L6: while (true) {
				if (!(ConstSet6[s_54697[i_54705]] != undefined)) break L6;
					F.line = 712;
					flags_54707 = (flags_54707 | 2);
					F.line = 713;
					number_54699[number_54699_Idx] = ((number_54699[number_54699_Idx] * 1.0000000000000000e+01) + (s_54697[i_54705] - 48));
					F.line = 714;
					hd_54786 = (hd_54786 * 1.0000000000000000e+01);
					F.line = 715;
					i_54705 += 1;
					L7: do {
						F.line = 716;
							L8: while (true) {
							if (!(s_54697[i_54705] == 95)) break L8;
								F.line = 716;
								i_54705 += 1;
							}
					} while(false);
				}
		} while(false);
		F.line = 717;
		number_54699[number_54699_Idx] = (number_54699[number_54699_Idx] / hd_54786);
		}
		
		if ((flags_54707 == 0)) {
		F.line = 719;
		result_54702 = 0;
		break BeforeRet;
		}
		
		if ((ConstSet7[s_54697[i_54705]] != undefined)) {
		F.line = 722;
		i_54705 += 1;
		if ((s_54697[i_54705] == 43)) {
		F.line = 724;
		i_54705 += 1;
		}
		else {
		if ((s_54697[i_54705] == 45)) {
		F.line = 726;
		esign_54703 = -1.0000000000000000e+00;
		F.line = 727;
		i_54705 += 1;
		}
		}
		if (!((ConstSet8[s_54697[i_54705]] != undefined))) {
		F.line = 729;
		result_54702 = 0;
		break BeforeRet;
		}
		
		L9: do {
			F.line = 730;
				L10: while (true) {
				if (!(ConstSet9[s_54697[i_54705]] != undefined)) break L10;
					F.line = 731;
					exponent_54706 = (((exponent_54706 * 10) + s_54697[i_54705]) - 48);
					F.line = 732;
					i_54705 += 1;
					L11: do {
						F.line = 733;
							L12: while (true) {
							if (!(s_54697[i_54705] == 95)) break L12;
								F.line = 733;
								i_54705 += 1;
							}
					} while(false);
				}
		} while(false);
		}
		
		F.line = 735;
		var hd_54924 = ten_to_the_power_of_54664(exponent_54706);
		if ((0.0 < esign_54703)) {
		F.line = 736;
		number_54699[number_54699_Idx] = (number_54699[number_54699_Idx] * hd_54924);
		}
		else {
			F.line = 737;
			number_54699[number_54699_Idx] = (number_54699[number_54699_Idx] / hd_54924);
		}
		
		F.line = 739;
		number_54699[number_54699_Idx] = (number_54699[number_54699_Idx] * sign_54704);
		F.line = 740;
		result_54702 = (i_54705 - start_54700);
	} while (false);
	framePtr = F.prev;

	return result_54702;

}
var ConstSet10 = setConstr([65, 90]);
var nim_program_result = 0;
var global_raise_hook_50418 = [null];
var local_raise_hook_50423 = [null];
var out_of_mem_hook_50426 = [null];
  if (!Math.trunc) {
    Math.trunc = function(v) {
      v = +v;
      if (!isFinite(v)) return v;

      return (v - v % 1)   ||   (v < 0 ? -0 : v === 0 ? v : 0);
    };
  }
var object_id_179245 = [0];

function is_power_of_two_79047(x_79049) {
		var Tmp1;

	var result_79050 = false;

	BeforeRet: do {
		if (!(0 < x_79049)) Tmp1 = false; else {			Tmp1 = ((x_79049 & (x_79049 - 1)) == 0);		}		result_79050 = Tmp1;
		break BeforeRet;
	} while (false);

	return result_79050;

}

function is_fat_pointer_54201(ti_54203) {
	var result_54204 = false;

	BeforeRet: do {
		result_54204 = !((ConstSet1[ti_54203.base.kind] != undefined));
		break BeforeRet;
	} while (false);

	return result_54204;

}

function nimCopyAux(dest_54235, src_54236, n_54238) {
		switch (n_54238.kind) {
		case 0:
			break;
		case 1:
			      dest_54235[n_54238.offset] = nimCopy(dest_54235[n_54238.offset], src_54236[n_54238.offset], n_54238.typ);
    
			break;
		case 2:
			    for (var i = 0; i < n_54238.sons.length; i++) {
      nimCopyAux(dest_54235, src_54236, n_54238.sons[i]);
    }
    
			break;
		case 3:
			      dest_54235[n_54238.offset] = nimCopy(dest_54235[n_54238.offset], src_54236[n_54238.offset], n_54238.typ);
      for (var i = 0; i < n_54238.sons.length; ++i) {
        nimCopyAux(dest_54235, src_54236, n_54238.sons[i][1]);
      }
    
			break;
		}

	
}

function add_50438(x_50441, x_50441_Idx, y_50442) {
		      if (x_50441[x_50441_Idx] === null) { x_50441[x_50441_Idx] = []; }
      var off = x_50441[x_50441_Idx].length;
      x_50441[x_50441_Idx].length += y_50442.length;
      for (var i = 0; i < y_50442.length; ++i) {
        x_50441[x_50441_Idx][off+i] = y_50442.charCodeAt(i);
      }
    

	
}

function aux_write_stack_trace_52339(f_52341) {
					var Tmp3;

	var result_52342 = [null];

		var it_52350 = f_52341;
		var i_52352 = 0;
		var total_52354 = 0;
		var temp_frames_52361 = arrayConstr(64, {Field0: null, Field1: 0}, NTI52344);
		L1: do {
				L2: while (true) {
					if (!!((it_52350 == null))) Tmp3 = false; else {						Tmp3 = (i_52352 <= 63);					}				if (!Tmp3) break L2;
					temp_frames_52361[i_52352].Field0 = it_52350.procname;
					temp_frames_52361[i_52352].Field1 = it_52350.line;
					i_52352 += 1;
					total_52354 += 1;
					it_52350 = it_52350.prev;
				}
		} while(false);
		L4: do {
				L5: while (true) {
				if (!!((it_52350 == null))) break L5;
					total_52354 += 1;
					it_52350 = it_52350.prev;
				}
		} while(false);
		result_52342[0] = nimCopy(null, [], NTI36040);
		if (!((total_52354 == i_52352))) {
		if (result_52342[0] != null) { result_52342[0] = (result_52342[0]).concat(makeNimstrLit("(")); } else { result_52342[0] = makeNimstrLit("("); };
		if (result_52342[0] != null) { result_52342[0] = (result_52342[0]).concat(cstrToNimstr(((total_52354 - i_52352))+"")); } else { result_52342[0] = cstrToNimstr(((total_52354 - i_52352))+"").slice(); };
		if (result_52342[0] != null) { result_52342[0] = (result_52342[0]).concat(makeNimstrLit(" calls omitted) ...\x0A")); } else { result_52342[0] = makeNimstrLit(" calls omitted) ...\x0A"); };
		}
		
		L6: do {
			var j_52624 = 0;
			var colontmp__252057 = 0;
			colontmp__252057 = (i_52352 - 1);
			var res_252063 = colontmp__252057;
			L7: do {
					L8: while (true) {
					if (!(0 <= res_252063)) break L8;
						j_52624 = res_252063;
						add_50438(result_52342, 0, temp_frames_52361[j_52624].Field0);
						if ((0 < temp_frames_52361[j_52624].Field1)) {
						if (result_52342[0] != null) { result_52342[0] = (result_52342[0]).concat(makeNimstrLit(", line: ")); } else { result_52342[0] = makeNimstrLit(", line: "); };
						if (result_52342[0] != null) { result_52342[0] = (result_52342[0]).concat(cstrToNimstr((temp_frames_52361[j_52624].Field1)+"")); } else { result_52342[0] = cstrToNimstr((temp_frames_52361[j_52624].Field1)+"").slice(); };
						}
						
						if (result_52342[0] != null) { result_52342[0] = (result_52342[0]).concat(makeNimstrLit("\x0A")); } else { result_52342[0] = makeNimstrLit("\x0A"); };
						res_252063 -= 1;
					}
			} while(false);
		} while(false);

	return result_52342[0];

}

function raw_write_stack_trace_52641() {
	var result_52643 = null;

		if (!((framePtr == null))) {
		result_52643 = nimCopy(null, (makeNimstrLit("Traceback (most recent call last)\x0A") || []).concat(aux_write_stack_trace_52339(framePtr) || []), NTI36040);
		}
		else {
			result_52643 = nimCopy(null, makeNimstrLit("No stack traceback available\x0A"), NTI36040);
		}
		

	return result_52643;

}

function unhandledException(e_52705) {
		var buf_52706 = [[]];
		if (!(((e_52705.message != null ? e_52705.message.length : 0) == 0))) {
		if (buf_52706[0] != null) { buf_52706[0] = (buf_52706[0]).concat(makeNimstrLit("Error: unhandled exception: ")); } else { buf_52706[0] = makeNimstrLit("Error: unhandled exception: "); };
		if (buf_52706[0] != null) { buf_52706[0] = (buf_52706[0]).concat(e_52705.message); } else { buf_52706[0] = e_52705.message.slice(); };
		}
		else {
		if (buf_52706[0] != null) { buf_52706[0] = (buf_52706[0]).concat(makeNimstrLit("Error: unhandled exception")); } else { buf_52706[0] = makeNimstrLit("Error: unhandled exception"); };
		}
		
		if (buf_52706[0] != null) { buf_52706[0] = (buf_52706[0]).concat(makeNimstrLit(" [")); } else { buf_52706[0] = makeNimstrLit(" ["); };
		add_50438(buf_52706, 0, e_52705.name);
		if (buf_52706[0] != null) { buf_52706[0] = (buf_52706[0]).concat(makeNimstrLit("]\x0A")); } else { buf_52706[0] = makeNimstrLit("]\x0A"); };
		if (buf_52706[0] != null) { buf_52706[0] = (buf_52706[0]).concat(raw_write_stack_trace_52641()); } else { buf_52706[0] = raw_write_stack_trace_52641().slice(); };
		var cbuf_52801 = toJSStr(buf_52706[0]);
		framePtr = null;
		  if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_52801);
  }
  else {
    throw cbuf_52801;
  }
  

	
}

function sys_fatal_57437(message_57443) {
	var F={procname:"sysFatal.sysFatal",prev:framePtr,filename:"../../../../Nim/lib/system.nim",line:0};
	framePtr = F;
		F.line = 2994;
		var e_57445 = null;
		F.line = 2995;
		e_57445 = {m_type: NTI40250, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 2996;
		e_57445.message = nimCopy(null, message_57443, NTI36040);
		F.line = 2997;
		raiseException(e_57445, "AssertionError");
	framePtr = F.prev;

	
}

function raise_assert_57432(msg_57434) {
	var F={procname:"system.raiseAssert",prev:framePtr,filename:"../../../../Nim/lib/system.nim",line:0};
	framePtr = F;
		F.line = 3952;
		sys_fatal_57437(msg_57434);
	framePtr = F.prev;

	
}

function failed_assert_impl_57480(msg_57482) {
	var F={procname:"system.failedAssertImpl",prev:framePtr,filename:"../../../../Nim/lib/system.nim",line:0};
	framePtr = F;
		F.line = 3959;
		raise_assert_57432(msg_57482);
	framePtr = F.prev;

	
}

function raiseRangeError() {
		var e_53115 = null;
		e_53115 = {m_type: NTI40262, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_53115.message = nimCopy(null, makeNimstrLit("value out of range"), NTI36040);
		e_53115.parent = null;
		raiseException(e_53115, "RangeError");

	
}

function init_table_224149(initial_size_224154) {
	var result_224156 = {data: null, counter: 0};

	var F={procname:"initTable.initTable",prev:framePtr,filename:"../../../../Nim/lib/pure/collections/tables.nim",line:0};
	framePtr = F;
		if (!(is_power_of_two_79047(initial_size_224154))) {
		F.line = 350;
		failed_assert_impl_57480(makeNimstrLit("/p/Nim/lib/pure/collections/tables.nim(350, 10) `isPowerOfTwo(initialSize)` "));
		}
		
		F.line = 351;
		result_224156.counter = 0;
		F.line = 352;
		result_224156.data = new Array(chckRange(initial_size_224154, 0, 2147483647)); for (var i=0;i<chckRange(initial_size_224154, 0, 2147483647);++i) {result_224156.data[i]={Field0: 0, Field1: null, Field2: null};}	framePtr = F.prev;

	return result_224156;

}

function new_table_228223(initial_size_228228) {
	var result_228230 = null;

	var F={procname:"newTable.newTable",prev:framePtr,filename:"../../../../Nim/lib/pure/collections/tables.nim",line:0};
	framePtr = F;
		F.line = 483;
		result_228230 = {data: null, counter: 0};
		F.line = 484;
		nimCopy(result_228230, init_table_224149(initial_size_228228), NTI224061);
	framePtr = F.prev;

	return result_228230;

}

function raiseOverflow() {
		var e_53059 = null;
		e_53059 = {m_type: NTI40246, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_53059.message = nimCopy(null, makeNimstrLit("over- or underflow"), NTI36040);
		e_53059.parent = null;
		raiseException(e_53059, "OverflowError");

	
}

function HEX21HEX26_179016(h_179018, val_179019) {
	var result_179020 = 0;

	var F={procname:"hashes.!&",prev:framePtr,filename:"../../../../Nim/lib/pure/hashes.nim",line:0};
	framePtr = F;
		F.line = 52;
		result_179020 = ((h_179018 + val_179019) >>> 0);
		F.line = 53;
		result_179020 = ((result_179020 + (result_179020 << 10)) >>> 0);
		F.line = 54;
		result_179020 = (result_179020 ^ ((result_179020 >>> 0) >>> 6));
	framePtr = F.prev;

	return result_179020;

}

function raiseIndexError() {
		var e_53143 = null;
		e_53143 = {m_type: NTI40258, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_53143.message = nimCopy(null, makeNimstrLit("index out of bounds"), NTI36040);
		e_53143.parent = null;
		raiseException(e_53143, "IndexError");

	
}

function HEX21HEX24_179070(h_179072) {
	var result_179073 = 0;

	var F={procname:"hashes.!$",prev:framePtr,filename:"../../../../Nim/lib/pure/hashes.nim",line:0};
	framePtr = F;
		F.line = 59;
		result_179073 = ((h_179072 + (h_179072 << 3)) >>> 0);
		F.line = 60;
		result_179073 = (result_179073 ^ ((result_179073 >>> 0) >>> 11));
		F.line = 61;
		result_179073 = ((result_179073 + (result_179073 << 15)) >>> 0);
	framePtr = F.prev;

	return result_179073;

}

function hash_179898(x_179900) {
	var result_179901 = 0;

	var F={procname:"hashes.hash",prev:framePtr,filename:"../../../../Nim/lib/pure/hashes.nim",line:0};
	framePtr = F;
		F.line = 132;
		var h_179902 = 0;
		L1: do {
			F.line = 133;
			var i_179914 = 0;
			F.line = 2155;
			var colontmp__252070 = 0;
			F.line = 133;
			colontmp__252070 = subInt((x_179900 != null ? x_179900.length : 0), 1);
			F.line = 2158;
			var res_252072 = 0;
			L2: do {
				F.line = 2159;
					L3: while (true) {
					if (!(res_252072 <= colontmp__252070)) break L3;
						F.line = 133;
						i_179914 = res_252072;
						F.line = 134;
						h_179902 = HEX21HEX26_179016(h_179902, x_179900[chckIndx(i_179914, 0, x_179900.length+0-1)-0]);
						F.line = 2161;
						res_252072 = addInt(res_252072, 1);
					}
			} while(false);
		} while(false);
		F.line = 135;
		result_179901 = HEX21HEX24_179070(h_179902);
	framePtr = F.prev;

	return result_179901;

}

function is_filled_182487(hcode_182489) {
	var result_182490 = false;

	var F={procname:"tables.isFilled",prev:framePtr,filename:"../../../../Nim/lib/pure/collections/tableimpl.nim",line:0};
	framePtr = F;
		F.line = 18;
		result_182490 = !((hcode_182489 == 0));
	framePtr = F.prev;

	return result_182490;

}

function next_try_182614(h_182616, max_hash_182617) {
	var result_182618 = 0;

	var F={procname:"tables.nextTry",prev:framePtr,filename:"../../../../Nim/lib/pure/collections/tableimpl.nim",line:0};
	framePtr = F;
		F.line = 28;
		result_182618 = (addInt(h_182616, 1) & max_hash_182617);
	framePtr = F.prev;

	return result_182618;

}

function raw_get_224399(t_224404, key_224406, hc_224408, hc_224408_Idx) {
						var Tmp3;

	var result_224409 = 0;

	var F={procname:"rawGet.rawGet",prev:framePtr,filename:"../../../../Nim/lib/pure/collections/tableimpl.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 43;
		hc_224408[hc_224408_Idx] = hash_179898(key_224406);
		if ((hc_224408[hc_224408_Idx] == 0)) {
		F.line = 45;
		hc_224408[hc_224408_Idx] = 314159265;
		}
		
		F.line = 31;
		var h_224421 = (hc_224408[hc_224408_Idx] & (t_224404.data != null ? (t_224404.data.length-1) : -1));
		L1: do {
			F.line = 32;
				L2: while (true) {
				if (!is_filled_182487(t_224404.data[chckIndx(h_224421, 0, t_224404.data.length+0-1)-0].Field0)) break L2;
						if (!(t_224404.data[chckIndx(h_224421, 0, t_224404.data.length+0-1)-0].Field0 == hc_224408[hc_224408_Idx])) Tmp3 = false; else {							Tmp3 = eqStrings(t_224404.data[chckIndx(h_224421, 0, t_224404.data.length+0-1)-0].Field1, key_224406);						}					if (Tmp3) {
					F.line = 38;
					result_224409 = h_224421;
					break BeforeRet;
					}
					
					F.line = 39;
					h_224421 = next_try_182614(h_224421, (t_224404.data != null ? (t_224404.data.length-1) : -1));
				}
		} while(false);
		F.line = 40;
		result_224409 = subInt(-1, h_224421);
	} while (false);
	framePtr = F.prev;

	return result_224409;

}

function must_rehash_182505(length_182507, counter_182508) {
	var result_182509 = false;

	var F={procname:"tables.mustRehash",prev:framePtr,filename:"../../../../Nim/lib/pure/collections/tableimpl.nim",line:0};
	framePtr = F;
		if (!((counter_182508 < length_182507))) {
		F.line = 24;
		failed_assert_impl_57480(makeNimstrLit("/p/Nim/lib/pure/collections/tableimpl.nim(24, 9) `length > counter` "));
		}
		
		F.line = 25;
		result_182509 = ((mulInt(length_182507, 2) < mulInt(counter_182508, 3)) || (subInt(length_182507, counter_182508) < 4));
	framePtr = F.prev;

	return result_182509;

}

function raw_insert_226642(t_226649, data_226653, data_226653_Idx, key_226655, val_226657, hc_226659, h_226661) {
	var F={procname:"rawInsert.rawInsert",prev:framePtr,filename:"../../../../Nim/lib/pure/collections/tableimpl.nim",line:0};
	framePtr = F;
		F.line = 64;
		data_226653[data_226653_Idx][chckIndx(h_226661, 0, data_226653[data_226653_Idx].length+0-1)-0].Field1 = nimCopy(null, key_226655, NTI36040);
		F.line = 65;
		data_226653[data_226653_Idx][chckIndx(h_226661, 0, data_226653[data_226653_Idx].length+0-1)-0].Field2 = nimCopy(null, val_226657, NTI36040);
		F.line = 66;
		data_226653[data_226653_Idx][chckIndx(h_226661, 0, data_226653[data_226653_Idx].length+0-1)-0].Field0 = hc_226659;
	framePtr = F.prev;

	
}

function enlarge_225512(t_225519) {
	var F={procname:"enlarge.enlarge",prev:framePtr,filename:"../../../../Nim/lib/pure/collections/tables.nim",line:0};
	framePtr = F;
		F.line = 311;
		var n_225527 = null;
		F.line = 312;
		n_225527 = new Array(chckRange(mulInt((t_225519.data != null ? t_225519.data.length : 0), 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_225519.data != null ? t_225519.data.length : 0), 2), 0, 2147483647);++i) {n_225527[i]={Field0: 0, Field1: null, Field2: null};}		F.line = 313;
		var Tmp1 = t_225519.data; t_225519.data = n_225527; n_225527 = Tmp1;		L2: do {
			F.line = 314;
			var i_225740 = 0;
			F.line = 2139;
			var colontmp__252079 = 0;
			F.line = 314;
			colontmp__252079 = (n_225527 != null ? (n_225527.length-1) : -1);
			F.line = 2145;
			var res_252085 = 0;
			L3: do {
				F.line = 2146;
					L4: while (true) {
					if (!(res_252085 <= colontmp__252079)) break L4;
						F.line = 314;
						i_225740 = res_252085;
						F.line = 315;
						var eh_225958 = n_225527[chckIndx(i_225740, 0, n_225527.length+0-1)-0].Field0;
						if (is_filled_182487(eh_225958)) {
						F.line = 317;
						var j_225967 = (eh_225958 & (t_225519.data != null ? (t_225519.data.length-1) : -1));
						L5: do {
							F.line = 318;
								L6: while (true) {
								if (!is_filled_182487(t_225519.data[chckIndx(j_225967, 0, t_225519.data.length+0-1)-0].Field0)) break L6;
									F.line = 319;
									j_225967 = next_try_182614(j_225967, (t_225519.data != null ? (t_225519.data.length-1) : -1));
								}
						} while(false);
						F.line = 320;
						raw_insert_226642(t_225519, t_225519, "data", n_225527[chckIndx(i_225740, 0, n_225527.length+0-1)-0].Field1, n_225527[chckIndx(i_225740, 0, n_225527.length+0-1)-0].Field2, eh_225958, j_225967);
						}
						
						F.line = 2148;
						res_252085 = addInt(res_252085, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	
}

function raw_get_known_hc_227341(t_227346, key_227348, hc_227350) {
	var result_227351 = 0;

	var F={procname:"rawGetKnownHC.rawGetKnownHC",prev:framePtr,filename:"../../../../Nim/lib/pure/collections/tableimpl.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 31;
		var h_227360 = (hc_227350 & (t_227346.data != null ? (t_227346.data.length-1) : -1));
		L1: do {
			F.line = 32;
				L2: while (true) {
				if (!is_filled_182487(t_227346.data[chckIndx(h_227360, 0, t_227346.data.length+0-1)-0].Field0)) break L2;
					if (((t_227346.data[chckIndx(h_227360, 0, t_227346.data.length+0-1)-0].Field0 == hc_227350) && eqStrings(t_227346.data[chckIndx(h_227360, 0, t_227346.data.length+0-1)-0].Field1, key_227348))) {
					F.line = 38;
					result_227351 = h_227360;
					break BeforeRet;
					}
					
					F.line = 39;
					h_227360 = next_try_182614(h_227360, (t_227346.data != null ? (t_227346.data.length-1) : -1));
				}
		} while(false);
		F.line = 40;
		result_227351 = subInt(-1, h_227360);
	} while (false);
	framePtr = F.prev;

	return result_227351;

}

function HEX5BHEX5DHEX3D_224385(t_224392, key_224394, val_224396) {
	var F={procname:"[]=.[]=",prev:framePtr,filename:"../../../../Nim/lib/pure/collections/tables.nim",line:0};
	framePtr = F;
		F.line = 97;
		var hc_224397 = [0];
		F.line = 98;
		var index_225098 = raw_get_224399(t_224392, key_224394, hc_224397, 0);
		if ((0 <= index_225098)) {
		F.line = 99;
		t_224392.data[chckIndx(index_225098, 0, t_224392.data.length+0-1)-0].Field2 = nimCopy(null, val_224396, NTI36040);
		}
		else {
			if (must_rehash_182505((t_224392.data != null ? t_224392.data.length : 0), t_224392.counter)) {
			F.line = 90;
			enlarge_225512(t_224392);
			F.line = 91;
			index_225098 = raw_get_known_hc_227341(t_224392, key_224394, hc_224397[0]);
			}
			
			F.line = 92;
			index_225098 = subInt(-1, index_225098);
			F.line = 93;
			raw_insert_226642(t_224392, t_224392, "data", key_224394, val_224396, hc_224397[0], index_225098);
			F.line = 100;
			t_224392.counter = addInt(t_224392.counter, 1);
		}
		
	framePtr = F.prev;

	
}

function HEX5BHEX5DHEX3D_228564(t_228570, key_228572, val_228574) {
	var F={procname:"[]=.[]=",prev:framePtr,filename:"../../../../Nim/lib/pure/collections/tables.nim",line:0};
	framePtr = F;
		F.line = 464;
		HEX5BHEX5DHEX3D_224385(t_228570, key_228572, val_228574);
	framePtr = F.prev;

	
}
var color_names_228417 = [new_table_228223(64)];
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("aliceblue"), makeNimstrLit("F0F8FF"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("antiquewhite"), makeNimstrLit("FAEBD7"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("aqua"), makeNimstrLit("00FFFF"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("aquamarine"), makeNimstrLit("7FFFD4"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("azure"), makeNimstrLit("F0FFFF"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("beige"), makeNimstrLit("F5F5DC"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("bisque"), makeNimstrLit("FFE4C4"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("black"), makeNimstrLit("000000"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("blanchedalmond"), makeNimstrLit("FFEBCD"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("blue"), makeNimstrLit("0000FF"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("blueviolet"), makeNimstrLit("8A2BE2"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("brown"), makeNimstrLit("A52A2A"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("burlywood"), makeNimstrLit("DEB887"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("cadetblue"), makeNimstrLit("5F9EA0"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("chartreuse"), makeNimstrLit("7FFF00"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("chocolate"), makeNimstrLit("D2691E"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("coral"), makeNimstrLit("FF7F50"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("cornflowerblue"), makeNimstrLit("6495ED"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("cornsilk"), makeNimstrLit("FFF8DC"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("crimson"), makeNimstrLit("DC143C"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("cyan"), makeNimstrLit("00FFFF"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("darkblue"), makeNimstrLit("00008B"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("darkcyan"), makeNimstrLit("008B8B"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("darkgoldenrod"), makeNimstrLit("B8860B"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("darkgray"), makeNimstrLit("A9A9A9"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("darkgrey"), makeNimstrLit("A9A9A9"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("darkgreen"), makeNimstrLit("006400"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("darkkhaki"), makeNimstrLit("BDB76B"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("darkmagenta"), makeNimstrLit("8B008B"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("darkolivegreen"), makeNimstrLit("556B2F"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("darkorange"), makeNimstrLit("FF8C00"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("darkorchid"), makeNimstrLit("9932CC"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("darkred"), makeNimstrLit("8B0000"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("darksalmon"), makeNimstrLit("E9967A"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("darkseagreen"), makeNimstrLit("8FBC8F"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("darkslateblue"), makeNimstrLit("483D8B"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("darkslategray"), makeNimstrLit("2F4F4F"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("darkslategrey"), makeNimstrLit("2F4F4F"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("darkturquoise"), makeNimstrLit("00CED1"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("darkviolet"), makeNimstrLit("9400D3"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("deeppink"), makeNimstrLit("FF1493"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("deepskyblue"), makeNimstrLit("00BFFF"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("dimgray"), makeNimstrLit("696969"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("dimgrey"), makeNimstrLit("696969"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("dodgerblue"), makeNimstrLit("1E90FF"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("firebrick"), makeNimstrLit("B22222"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("floralwhite"), makeNimstrLit("FFFAF0"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("forestgreen"), makeNimstrLit("228B22"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("fuchsia"), makeNimstrLit("FF00FF"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("gainsboro"), makeNimstrLit("DCDCDC"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("ghostwhite"), makeNimstrLit("F8F8FF"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("gold"), makeNimstrLit("FFD700"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("goldenrod"), makeNimstrLit("DAA520"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("gray"), makeNimstrLit("808080"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("grey"), makeNimstrLit("808080"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("green"), makeNimstrLit("008000"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("greenyellow"), makeNimstrLit("ADFF2F"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("honeydew"), makeNimstrLit("F0FFF0"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("hotpink"), makeNimstrLit("FF69B4"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("indianred"), makeNimstrLit("CD5C5C"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("indigo"), makeNimstrLit("4B0082"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("ivory"), makeNimstrLit("FFFFF0"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("khaki"), makeNimstrLit("F0E68C"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("lavender"), makeNimstrLit("E6E6FA"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("lavenderblush"), makeNimstrLit("FFF0F5"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("lawngreen"), makeNimstrLit("7CFC00"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("lemonchiffon"), makeNimstrLit("FFFACD"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("lightblue"), makeNimstrLit("ADD8E6"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("lightcoral"), makeNimstrLit("F08080"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("lightcyan"), makeNimstrLit("E0FFFF"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("lightgoldenrodyellow"), makeNimstrLit("FAFAD2"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("lightgray"), makeNimstrLit("D3D3D3"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("lightgrey"), makeNimstrLit("D3D3D3"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("lightgreen"), makeNimstrLit("90EE90"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("lightpink"), makeNimstrLit("FFB6C1"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("lightsalmon"), makeNimstrLit("FFA07A"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("lightseagreen"), makeNimstrLit("20B2AA"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("lightskyblue"), makeNimstrLit("87CEFA"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("lightslategray"), makeNimstrLit("778899"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("lightslategrey"), makeNimstrLit("778899"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("lightsteelblue"), makeNimstrLit("B0C4DE"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("lightyellow"), makeNimstrLit("FFFFE0"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("lime"), makeNimstrLit("00FF00"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("limegreen"), makeNimstrLit("32CD32"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("linen"), makeNimstrLit("FAF0E6"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("magenta"), makeNimstrLit("FF00FF"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("maroon"), makeNimstrLit("800000"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("mediumaquamarine"), makeNimstrLit("66CDAA"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("mediumblue"), makeNimstrLit("0000CD"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("mediumorchid"), makeNimstrLit("BA55D3"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("mediumpurple"), makeNimstrLit("9370DB"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("mediumseagreen"), makeNimstrLit("3CB371"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("mediumslateblue"), makeNimstrLit("7B68EE"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("mediumspringgreen"), makeNimstrLit("00FA9A"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("mediumturquoise"), makeNimstrLit("48D1CC"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("mediumvioletred"), makeNimstrLit("C71585"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("midnightblue"), makeNimstrLit("191970"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("mintcream"), makeNimstrLit("F5FFFA"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("mistyrose"), makeNimstrLit("FFE4E1"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("moccasin"), makeNimstrLit("FFE4B5"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("navajowhite"), makeNimstrLit("FFDEAD"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("navy"), makeNimstrLit("000080"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("oldlace"), makeNimstrLit("FDF5E6"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("olive"), makeNimstrLit("808000"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("olivedrab"), makeNimstrLit("6B8E23"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("orange"), makeNimstrLit("FFA500"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("orangered"), makeNimstrLit("FF4500"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("orchid"), makeNimstrLit("DA70D6"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("palegoldenrod"), makeNimstrLit("EEE8AA"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("palegreen"), makeNimstrLit("98FB98"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("paleturquoise"), makeNimstrLit("AFEEEE"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("palevioletred"), makeNimstrLit("DB7093"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("papayawhip"), makeNimstrLit("FFEFD5"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("peachpuff"), makeNimstrLit("FFDAB9"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("peru"), makeNimstrLit("CD853F"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("pink"), makeNimstrLit("FFC0CB"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("plum"), makeNimstrLit("DDA0DD"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("powderblue"), makeNimstrLit("B0E0E6"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("purple"), makeNimstrLit("800080"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("rebeccapurple"), makeNimstrLit("663399"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("red"), makeNimstrLit("FF0000"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("rosybrown"), makeNimstrLit("BC8F8F"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("royalblue"), makeNimstrLit("4169E1"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("saddlebrown"), makeNimstrLit("8B4513"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("salmon"), makeNimstrLit("FA8072"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("sandybrown"), makeNimstrLit("F4A460"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("seagreen"), makeNimstrLit("2E8B57"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("seashell"), makeNimstrLit("FFF5EE"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("sienna"), makeNimstrLit("A0522D"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("silver"), makeNimstrLit("C0C0C0"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("skyblue"), makeNimstrLit("87CEEB"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("slateblue"), makeNimstrLit("6A5ACD"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("slategray"), makeNimstrLit("708090"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("slategrey"), makeNimstrLit("708090"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("snow"), makeNimstrLit("FFFAFA"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("springgreen"), makeNimstrLit("00FF7F"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("steelblue"), makeNimstrLit("4682B4"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("tan"), makeNimstrLit("D2B48C"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("teal"), makeNimstrLit("008080"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("thistle"), makeNimstrLit("D8BFD8"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("tomato"), makeNimstrLit("FF6347"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("turquoise"), makeNimstrLit("40E0D0"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("violet"), makeNimstrLit("EE82EE"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("wheat"), makeNimstrLit("F5DEB3"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("white"), makeNimstrLit("FFFFFF"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("whitesmoke"), makeNimstrLit("F5F5F5"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("yellow"), makeNimstrLit("FFFF00"));
HEX5BHEX5DHEX3D_228564(color_names_228417[0], makeNimstrLit("yellowgreen"), makeNimstrLit("9ACD32"));
var parent_259147 = [null];
var root_259148 = [null];
var prev_root_259149 = [null];
var group_stack_259151 = [null];
var current_259152 = [null];
var scroll_box_259153 = [{x: 0.0, y: 0.0, w: 0.0, h: 0.0}];
var mouse_259154 = [{state: 0, pos: {x: 0.0, y: 0.0}, click: false, down: false}];
var keyboard_259155 = [{state: 0, keyCode: 0, keyString: null, altKey: false, ctrlKey: false, shiftKey: false, inputFocusId: null, input: null}];
var draw_main_259158 = [null];
var perf_259159 = [{drawMain: 0.0, numLowLevelCalls: 0}];
var requested_frame_259160 = [false];
var num_groups_259161 = [0];
var root_url_259162 = [null];
mouse_259154[0] = {state: 0, pos: {x: 0.0, y: 0.0}, click: false, down: false};
nimCopy(mouse_259154[0].pos, {x: 0.0, y: 0.0}, NTI259032);
var div_cache_262015 = [null];
var root_dom_node_262016 = [null];
var start_time_262326 = [0.0];

function setup_root_259180() {
	var F={procname:"uibase.setupRoot",prev:framePtr,filename:"../../src/fidget/uibase.nim",line:0};
	framePtr = F;
		F.line = 98;
		prev_root_259149[0] = root_259148[0];
		F.line = 99;
		root_259148[0] = {id: null, kind: null, text: null, code: null, kids: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0.0, textAlignVertical: 0.0}, imageName: null, cornerRadius: {Field0: 0, Field1: 0, Field2: 0, Field3: 0}, wasDrawn: false, editableText: false};
		F.line = 100;
		group_stack_259151[0] = nimCopy(null, [root_259148[0]], NTI259193);
		F.line = 101;
		current_259152[0] = root_259148[0];
		F.line = 102;
		root_259148[0].id = nimCopy(null, makeNimstrLit("root"), NTI36040);
	framePtr = F.prev;

	
}

function draw_start_262340() {
	var F={procname:"backendhtml.drawStart",prev:framePtr,filename:"../../src/fidget/backendhtml.nim",line:0};
	framePtr = F;
		F.line = 163;
		start_time_262326[0] = window.performance.now();
		F.line = 164;
		num_groups_259161[0] = 0;
		F.line = 165;
		perf_259159[0].numLowLevelCalls = 0;
		F.line = 167;
		root_url_259162[0] = nimCopy(null, cstrToNimstr(window.location.search), NTI36040);
		F.line = 170;
		root_259148[0].box.x = 0.0;
		F.line = 171;
		root_259148[0].box.y = 0.0;
		F.line = 172;
		root_259148[0].box.w = document.body.clientWidth;
		F.line = 173;
		root_259148[0].box.h = document.body.clientHeight;
		F.line = 175;
		scroll_box_259153[0].x = window.scrollX;
		F.line = 176;
		scroll_box_259153[0].y = window.scrollY;
		F.line = 177;
		scroll_box_259153[0].w = document.body.clientWidth;
		F.line = 178;
		scroll_box_259153[0].h = document.body.clientHeight;
		F.line = 180;
		document.body.style.overflowX = "hidden";
		F.line = 181;
		document.body.style.overflowY = "auto";
	framePtr = F.prev;

	
}

function pop_262365(s_262371, s_262371_Idx) {
	var result_262372 = null;

	var F={procname:"pop.pop",prev:framePtr,filename:"../../../../Nim/lib/system.nim",line:0};
	framePtr = F;
		F.line = 2580;
		var l_262380 = subInt((s_262371[s_262371_Idx] != null ? s_262371[s_262371_Idx].length : 0), 1);
		F.line = 2581;
		result_262372 = s_262371[s_262371_Idx][chckIndx(l_262380, 0, s_262371[s_262371_Idx].length+0-1)-0];
		F.line = 2582;
		if (s_262371[s_262371_Idx] === null) s_262371[s_262371_Idx] = [];
               if (s_262371[s_262371_Idx].length < chckRange(l_262380, 0, 2147483647)) { for (var i=s_262371[s_262371_Idx].length;i<chckRange(l_262380, 0, 2147483647);++i) s_262371[s_262371_Idx].push(null); }
               else { s_262371[s_262371_Idx].length = chckRange(l_262380, 0, 2147483647); };
	framePtr = F.prev;

	return result_262372;

}

function draw_finish_262355() {
	var F={procname:"backendhtml.drawFinish",prev:framePtr,filename:"../../src/fidget/backendhtml.nim",line:0};
	framePtr = F;
		F.line = 186;
		perf_259159[0].drawMain = (window.performance.now() - start_time_262326[0]);
		L1: do {
			F.line = 193;
				L2: while (true) {
				if (!(num_groups_259161[0] < (root_dom_node_262016[0].childNodes != null ? root_dom_node_262016[0].childNodes.length : 0))) break L2;
					F.line = 194;
					root_dom_node_262016[0].removeChild(root_dom_node_262016[0].lastChild);
					F.line = 195;
					pop_262365(div_cache_262015, 0);
				}
		} while(false);
	framePtr = F.prev;

	
}

function hard_redraw_262418() {
	var F={procname:"backendhtml.hardRedraw",prev:framePtr,filename:"../../src/fidget/backendhtml.nim",line:0};
	framePtr = F;
		F.line = 199;
		setup_root_259180();
		F.line = 201;
		draw_start_262340();
		F.line = 202;
		draw_main_259158[0]();
		F.line = 203;
		draw_finish_262355();
	framePtr = F.prev;

	
}

function request_hard_redraw_262433(time_262435) {
	var F={procname:"backendhtml.requestHardRedraw",prev:framePtr,filename:"../../src/fidget/backendhtml.nim",line:0};
	framePtr = F;
		F.line = 207;
		requested_frame_259160[0] = false;
		F.line = 208;
		hard_redraw_262418();
	framePtr = F.prev;

	
}

function redraw_262449() {
	var F={procname:"backendhtml.redraw",prev:framePtr,filename:"../../src/fidget/backendhtml.nim",line:0};
	framePtr = F;
		if (!(requested_frame_259160[0])) {
		F.line = 213;
		requested_frame_259160[0] = true;
		F.line = 214;
		window.requestAnimationFrame(request_hard_redraw_262433);
		}
		
	framePtr = F.prev;

	
}

function HEX3Aanonymous_262464(event_262466) {
	var F={procname:"backendhtml.:anonymous",prev:framePtr,filename:"../../src/fidget/backendhtml.nim",line:0};
	framePtr = F;
		F.line = 217;
		redraw_262449();
		F.line = 219;
		root_dom_node_262016[0] = document.createElement("div");
		F.line = 220;
		document.body.appendChild(root_dom_node_262016[0]);
	framePtr = F.prev;

	
}

function HEX3Aanonymous_262480(event_262482) {
	var F={procname:"backendhtml.:anonymous",prev:framePtr,filename:"../../src/fidget/backendhtml.nim",line:0};
	framePtr = F;
		F.line = 224;
		redraw_262449();
	framePtr = F.prev;

	
}

function HEX3Aanonymous_262496(event_262498) {
	var F={procname:"backendhtml.:anonymous",prev:framePtr,filename:"../../src/fidget/backendhtml.nim",line:0};
	framePtr = F;
		F.line = 228;
		redraw_262449();
	framePtr = F.prev;

	
}

function HEX3Aanonymous_262512(event_262514) {
	var F={procname:"backendhtml.:anonymous",prev:framePtr,filename:"../../src/fidget/backendhtml.nim",line:0};
	framePtr = F;
		F.line = 232;
		mouse_259154[0].pos.x = event_262514.pageX;
		F.line = 233;
		mouse_259154[0].pos.y = event_262514.pageY;
		F.line = 234;
		mouse_259154[0].click = true;
		F.line = 235;
		mouse_259154[0].down = true;
		F.line = 236;
		hard_redraw_262418();
		F.line = 237;
		mouse_259154[0].click = false;
	framePtr = F.prev;

	
}

function HEX3Aanonymous_262528(event_262530) {
	var F={procname:"backendhtml.:anonymous",prev:framePtr,filename:"../../src/fidget/backendhtml.nim",line:0};
	framePtr = F;
		F.line = 241;
		redraw_262449();
		F.line = 242;
		mouse_259154[0].down = false;
	framePtr = F.prev;

	
}

function HEX3Aanonymous_262544(event_262546) {
	var F={procname:"backendhtml.:anonymous",prev:framePtr,filename:"../../src/fidget/backendhtml.nim",line:0};
	framePtr = F;
		F.line = 247;
		mouse_259154[0].pos.x = event_262546.pageX;
		F.line = 248;
		mouse_259154[0].pos.y = event_262546.pageY;
		F.line = 249;
		redraw_262449();
	framePtr = F.prev;

	
}
window.addEventListener("load", HEX3Aanonymous_262464, false);
window.addEventListener("resize", HEX3Aanonymous_262480, false);
window.addEventListener("scroll", HEX3Aanonymous_262496, false);
window.addEventListener("mousedown", HEX3Aanonymous_262512, false);
window.addEventListener("mouseup", HEX3Aanonymous_262528, false);
window.addEventListener("mousemove", HEX3Aanonymous_262544, false);

function set_262585(keyboard_262587, state_262588, event_262589) {
	var F={procname:"backendhtml.set",prev:framePtr,filename:"../../src/fidget/backendhtml.nim",line:0};
	framePtr = F;
		F.line = 253;
		keyboard_262587.state = state_262588;
		F.line = 254;
		keyboard_262587.keyCode = event_262589.keyCode;
		F.line = 255;
		var key_string_262590 = null;
		F.line = 256;
		key_string_262590 = event_262589.key
		F.line = 257;
		keyboard_262587.keyString = nimCopy(null, cstrToNimstr(key_string_262590), NTI36040);
		F.line = 258;
		keyboard_262587.altKey = event_262589.altKey;
		F.line = 259;
		keyboard_262587.ctrlKey = event_262589.ctrlKey;
		F.line = 260;
		keyboard_262587.shiftKey = event_262589.shiftKey;
	framePtr = F.prev;

	
}

function use_262604(keyboard_262606) {
	var F={procname:"backendhtml.use",prev:framePtr,filename:"../../src/fidget/backendhtml.nim",line:0};
	framePtr = F;
		F.line = 263;
		keyboard_262606.state = 0;
		F.line = 264;
		keyboard_262606.keyCode = 0;
		F.line = 265;
		keyboard_262606.keyString = nimCopy(null, [], NTI36040);
		F.line = 266;
		keyboard_262606.altKey = false;
		F.line = 267;
		keyboard_262606.ctrlKey = false;
		F.line = 268;
		keyboard_262606.shiftKey = false;
	framePtr = F.prev;

	
}

function HEX3Aanonymous_262636(event_262638) {
	var F={procname:"backendhtml.:anonymous",prev:framePtr,filename:"../../src/fidget/backendhtml.nim",line:0};
	framePtr = F;
		F.line = 274;
		set_262585(keyboard_259155[0], 2, event_262638);
		F.line = 275;
		hard_redraw_262418();
		if (!((keyboard_259155[0].state == 0))) {
		F.line = 277;
		use_262604(keyboard_259155[0]);
		}
		else {
			F.line = 279;
		event_262638.preventDefault();
		}
		
	framePtr = F.prev;

	
}

function HEX3Aanonymous_262660(event_262662) {
	var F={procname:"backendhtml.:anonymous",prev:framePtr,filename:"../../src/fidget/backendhtml.nim",line:0};
	framePtr = F;
		F.line = 282;
		set_262585(keyboard_259155[0], 1, event_262662);
		F.line = 283;
		hard_redraw_262418();
		if (!((keyboard_259155[0].state == 0))) {
		F.line = 285;
		use_262604(keyboard_259155[0]);
		}
		else {
			F.line = 287;
		event_262662.preventDefault();
		}
		
	framePtr = F.prev;

	
}

function HEX3Aanonymous_262684(event_262686) {
	var F={procname:"backendhtml.:anonymous",prev:framePtr,filename:"../../src/fidget/backendhtml.nim",line:0};
	framePtr = F;
		F.line = 290;
		set_262585(keyboard_259155[0], 3, event_262686);
		F.line = 291;
		hard_redraw_262418();
		if (!((keyboard_259155[0].state == 0))) {
		F.line = 293;
		use_262604(keyboard_259155[0]);
		}
		else {
			F.line = 295;
		event_262686.preventDefault();
		}
		
	framePtr = F.prev;

	
}

function HEX3Aanonymous_262708(event_262710) {
	var F={procname:"backendhtml.:anonymous",prev:framePtr,filename:"../../src/fidget/backendhtml.nim",line:0};
	framePtr = F;
		if ((document.activeElement.nodeName == "INPUT")) {
		F.line = 300;
		keyboard_259155[0].input = nimCopy(null, cstrToNimstr(document.activeElement.value), NTI36040);
		F.line = 301;
		keyboard_259155[0].inputFocusId = nimCopy(null, cstrToNimstr(document.activeElement.parentElement.id), NTI36040);
		F.line = 302;
		redraw_262449();
		F.line = 303;
		rawEcho(makeNimstrLit("input"));
		}
		
	framePtr = F.prev;

	
}

function HEX3Aanonymous_262727(event_262729) {
	var F={procname:"backendhtml.:anonymous",prev:framePtr,filename:"../../src/fidget/backendhtml.nim",line:0};
	framePtr = F;
		if ((document.activeElement.nodeName == "INPUT")) {
		F.line = 310;
		keyboard_259155[0].input = nimCopy(null, cstrToNimstr(document.activeElement.value), NTI36040);
		F.line = 311;
		keyboard_259155[0].inputFocusId = nimCopy(null, cstrToNimstr(document.activeElement.parentElement.id), NTI36040);
		F.line = 312;
		redraw_262449();
		}
		
	framePtr = F.prev;

	
}

function HEX3Aanonymous_262743(event_262745) {
	var F={procname:"backendhtml.:anonymous",prev:framePtr,filename:"../../src/fidget/backendhtml.nim",line:0};
	framePtr = F;
		F.line = 318;
		keyboard_259155[0].input = nimCopy(null, [], NTI36040);
		F.line = 319;
		keyboard_259155[0].inputFocusId = nimCopy(null, [], NTI36040);
		F.line = 320;
		redraw_262449();
	framePtr = F.prev;

	
}
window.addEventListener("keydown", HEX3Aanonymous_262636, false);
window.addEventListener("keyup", HEX3Aanonymous_262660, false);
window.addEventListener("keypress", HEX3Aanonymous_262684, false);
window.addEventListener("input", HEX3Aanonymous_262708, false);
window.addEventListener("focusin", HEX3Aanonymous_262727, false);
window.addEventListener("focusout", HEX3Aanonymous_262743, false);
var state_267605 = [{a0: 1773455756, a1: 4275166512}];
var utc_instance_275831 = [null];
var local_instance_275832 = [null];

function raiseDivByZero() {
		var e_53087 = null;
		e_53087 = {m_type: NTI40244, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_53087.message = nimCopy(null, makeNimstrLit("division by zero"), NTI36040);
		e_53087.parent = null;
		raiseException(e_53087, "DivByZeroError");

	
}

function HEX2A_272401(a_272403, b_272404) {
	var result_272405 = 0;

	var F={procname:"times.*",prev:framePtr,filename:"../../../../Nim/lib/pure/times.nim",line:0};
	framePtr = F;
		F.line = 135;
		result_272405 = (a_272403 * b_272404);
	framePtr = F.prev;

	return result_272405;

}

function convert_273419(unit_from_273423, unit_to_273425, quantity_273427) {
		var Tmp1;

	var result_273428 = 0;

	var F={procname:"convert.convert",prev:framePtr,filename:"../../../../Nim/lib/pure/times.nim",line:0};
	framePtr = F;
		F.line = 321;
		if ((unit_from_273423 < unit_to_273425)) {
		Tmp1 = chckRange(divInt(quantity_273427, divInt(unit_weights_273005[chckIndx(unit_to_273425, 0, unit_weights_273005.length+0-1)-0], unit_weights_273005[chckIndx(unit_from_273423, 0, unit_weights_273005.length+0-1)-0])), -2147483648, 2147483647);
		}
		else {
		Tmp1 = chckRange(HEX2A_272401(divInt(unit_weights_273005[chckIndx(unit_from_273423, 0, unit_weights_273005.length+0-1)-0], unit_weights_273005[chckIndx(unit_to_273425, 0, unit_weights_273005.length+0-1)-0]), quantity_273427), -2147483648, 2147483647);
		}
		
		result_273428 = Tmp1;
	framePtr = F.prev;

	return result_273428;

}

function init_time_273059(unix_273061, nanosecond_273062) {
	var result_274986 = {seconds: 0, nanosecond: 0};

	var F={procname:"times.initTime",prev:framePtr,filename:"../../../../Nim/lib/pure/times.nim",line:0};
	framePtr = F;
		F.line = 694;
		result_274986.seconds = unix_273061;
		F.line = 695;
		result_274986.nanosecond = nanosecond_273062;
	framePtr = F.prev;

	return result_274986;

}

function get_time_275960() {
	var result_275962 = {seconds: 0, nanosecond: 0};

	var F={procname:"times.getTime",prev:framePtr,filename:"../../../../Nim/lib/pure/times.nim",line:0};
	framePtr = F;
		F.line = 1054;
		var millis_276001 = new Date().getTime();
		F.line = 1055;
		var seconds_276012 = convert_273419(2, 3, millis_276001);
		F.line = 1056;
		var nanos_276034 = convert_273419(2, 0, modInt(millis_276001, convert_273419(3, 2, 1)));
		F.line = 1058;
		nimCopy(result_275962, init_time_273059(seconds_276012, chckRange(nanos_276034, 0, 999999999)), NTI272818);
	framePtr = F.prev;

	return result_275962;

}
var start_283631 = [get_time_275960()];

function new_seq_285041(len_285045) {
	var result_285047 = null;

	var F={procname:"newSeq.newSeq",prev:framePtr,filename:"../../../../Nim/lib/system.nim",line:0};
	framePtr = F;
		F.line = 792;
		result_285047 = new Array(len_285045); for (var i=0;i<len_285045;++i) {result_285047[i]=0;}	framePtr = F.prev;

	return result_285047;

}

function rotl_267815(x_267817, k_267818) {
	var result_267819 = 0;

	var F={procname:"random.rotl",prev:framePtr,filename:"../../../../Nim/lib/pure/random.nim",line:0};
	framePtr = F;
		F.line = 48;
		result_267819 = ((x_267817 << k_267818) | ((x_267817 >>> 0) >>> ((64 - k_267818) >>> 0)));
	framePtr = F.prev;

	return result_267819;

}

function next_267867(r_267870) {
	var result_267871 = 0;

	var F={procname:"random.next",prev:framePtr,filename:"../../../../Nim/lib/pure/random.nim",line:0};
	framePtr = F;
		F.line = 52;
		var s0_267872 = r_267870.a0;
		F.line = 53;
		var s1_267873 = r_267870.a1;
		F.line = 54;
		result_267871 = ((s0_267872 + s1_267873) >>> 0);
		F.line = 55;
		s1_267873 = (s1_267873 ^ s0_267872);
		F.line = 56;
		r_267870.a0 = ((rotl_267815(s0_267872, 55) ^ s1_267873) ^ (s1_267873 << 14));
		F.line = 57;
		r_267870.a1 = rotl_267815(s1_267873, 36);
	framePtr = F.prev;

	return result_267871;

}

function rand_268245(r_268248, max_268249) {
	var result_268250 = 0;

	var F={procname:"random.rand",prev:framePtr,filename:"../../../../Nim/lib/pure/random.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if ((max_268249 == 0)) {
		F.line = 120;
		break BeforeRet;
		}
		
		L1: do {
			F.line = 121;
				L2: while (true) {
				if (!true) break L2;
					F.line = 122;
					var x_268251 = next_267867(r_268248);
					if ((x_268251 <= ((4294967295 - (4294967295 % max_268249)) >>> 0))) {
					F.line = 124;
					result_268250 = (((x_268251 % ((max_268249 + 1) )))|0);
					break BeforeRet;
					}
					
				}
		} while(false);
	} while (false);
	framePtr = F.prev;

	return result_268250;

}

function rand_268305(max_268307) {
	var result_268308 = 0;

	var F={procname:"random.rand",prev:framePtr,filename:"../../../../Nim/lib/pure/random.nim",line:0};
	framePtr = F;
		F.line = 127;
		result_268308 = rand_268245(state_267605[0], chckRange(max_268307, 0, 2147483647));
	framePtr = F.prev;

	return result_268308;

}

function HEX5BHEX5D_285143(s_285149, i_285151) {
	var result_285153 = null;
	var result_285153_Idx = 0;

	var F={procname:"[].[]",prev:framePtr,filename:"../../../../Nim/lib/system.nim",line:0};
	framePtr = F;
		F.line = 3810;
		result_285153 = s_285149; result_285153_Idx = chckIndx(subInt((s_285149 != null ? s_285149.length : 0), i_285151), 0, s_285149.length+0-1)-0;
	framePtr = F.prev;

	return [result_285153, result_285153_Idx];

}

function HEX3DHEX3D_262073(x_262077, y_262079) {
	var result_262080 = false;

	var F={procname:"==.==",prev:framePtr,filename:"../../../../Nim/lib/system.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if (!((x_262077.x == y_262079.x))) {
		F.line = 2641;
		result_262080 = false;
		break BeforeRet;
		}
		
		if (!((x_262077.y == y_262079.y))) {
		F.line = 2641;
		result_262080 = false;
		break BeforeRet;
		}
		
		if (!((x_262077.w == y_262079.w))) {
		F.line = 2641;
		result_262080 = false;
		break BeforeRet;
		}
		
		if (!((x_262077.h == y_262079.h))) {
		F.line = 2641;
		result_262080 = false;
		break BeforeRet;
		}
		
		F.line = 2642;
		result_262080 = true;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_262080;

}

function HEX3DHEX3D_262113(x_262117, y_262119) {
	var result_262120 = false;

	var F={procname:"==.==",prev:framePtr,filename:"../../../../Nim/lib/system.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if (!((x_262117.r == y_262119.r))) {
		F.line = 2641;
		result_262120 = false;
		break BeforeRet;
		}
		
		if (!((x_262117.g == y_262119.g))) {
		F.line = 2641;
		result_262120 = false;
		break BeforeRet;
		}
		
		if (!((x_262117.b == y_262119.b))) {
		F.line = 2641;
		result_262120 = false;
		break BeforeRet;
		}
		
		if (!((x_262117.a == y_262119.a))) {
		F.line = 2641;
		result_262120 = false;
		break BeforeRet;
		}
		
		F.line = 2642;
		result_262120 = true;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_262120;

}

function to_html_rgba_254839(c_254841) {
	var result_254842 = null;

	var F={procname:"chroma.toHtmlRgba",prev:framePtr,filename:"../../../chroma/src/chroma.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 215;
		result_254842 = nimCopy(null, (makeNimstrLit("rgba(") || []).concat(cstrToNimstr(((((c_254841.r * 2.5500000000000000e+02))|0))+"") || [],makeNimstrLit(", ") || [],cstrToNimstr(((((c_254841.g * 2.5500000000000000e+02))|0))+"") || [],makeNimstrLit(", ") || [],cstrToNimstr(((((c_254841.b * 2.5500000000000000e+02))|0))+"") || [],makeNimstrLit(", ") || [],cstrToNimstr((c_254841.a)+"") || [],makeNimstrLit(")") || []), NTI36040);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_254842;

}

function HEX3DHEX3D_262188(x_262192, y_262194) {
	var result_262195 = false;

	var F={procname:"==.==",prev:framePtr,filename:"../../../../Nim/lib/system.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if (!(eqStrings(x_262192.fontFamily, y_262194.fontFamily))) {
		F.line = 2641;
		result_262195 = false;
		break BeforeRet;
		}
		
		if (!((x_262192.fontSize == y_262194.fontSize))) {
		F.line = 2641;
		result_262195 = false;
		break BeforeRet;
		}
		
		if (!((x_262192.fontWeight == y_262194.fontWeight))) {
		F.line = 2641;
		result_262195 = false;
		break BeforeRet;
		}
		
		if (!((x_262192.lineHeight == y_262194.lineHeight))) {
		F.line = 2641;
		result_262195 = false;
		break BeforeRet;
		}
		
		if (!((x_262192.textAlignHorizontal == y_262194.textAlignHorizontal))) {
		F.line = 2641;
		result_262195 = false;
		break BeforeRet;
		}
		
		if (!((x_262192.textAlignVertical == y_262194.textAlignVertical))) {
		F.line = 2641;
		result_262195 = false;
		break BeforeRet;
		}
		
		F.line = 2642;
		result_262195 = true;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_262195;

}

function HEX3DHEX3D_262274(x_262278, y_262280) {
	var result_262281 = false;

	var F={procname:"==.==",prev:framePtr,filename:"../../../../Nim/lib/system.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if (!((x_262278["Field0"] == y_262280["Field0"]))) {
		F.line = 2641;
		result_262281 = false;
		break BeforeRet;
		}
		
		if (!((x_262278["Field1"] == y_262280["Field1"]))) {
		F.line = 2641;
		result_262281 = false;
		break BeforeRet;
		}
		
		if (!((x_262278["Field2"] == y_262280["Field2"]))) {
		F.line = 2641;
		result_262281 = false;
		break BeforeRet;
		}
		
		if (!((x_262278["Field3"] == y_262280["Field3"]))) {
		F.line = 2641;
		result_262281 = false;
		break BeforeRet;
		}
		
		F.line = 2642;
		result_262281 = true;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_262281;

}

function draw_262030(group_262032) {
			var Tmp3;

	var F={procname:"backendhtml.draw",prev:framePtr,filename:"../../src/fidget/backendhtml.nim",line:0};
	framePtr = F;
		L1: do {
			F.line = 10;
				L2: while (true) {
				if (!((div_cache_262015[0] != null ? div_cache_262015[0].length : 0) <= num_groups_259161[0])) break L2;
					F.line = 11;
					root_dom_node_262016[0].appendChild(document.createElement("div"));
					F.line = 12;
					perf_259159[0].numLowLevelCalls = addInt(perf_259159[0].numLowLevelCalls, 1);
					F.line = 13;
					if (div_cache_262015[0] != null) { div_cache_262015[0].push({id: null, kind: null, text: null, code: null, kids: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0.0, textAlignVertical: 0.0}, imageName: null, cornerRadius: {Field0: 0, Field1: 0, Field2: 0, Field3: 0}, wasDrawn: false, editableText: false}); } else { div_cache_262015[0] = [{id: null, kind: null, text: null, code: null, kids: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0.0, textAlignVertical: 0.0}, imageName: null, cornerRadius: {Field0: 0, Field1: 0, Field2: 0, Field3: 0}, wasDrawn: false, editableText: false}]; };
				}
		} while(false);
		F.line = 15;
		var dom_262059 = root_dom_node_262016[0].childNodes[chckIndx(num_groups_259161[0], 0, root_dom_node_262016[0].childNodes.length+0-1)-0];
		F.line = 16;
		var cache_group_262060 = div_cache_262015[0][chckIndx(num_groups_259161[0], 0, div_cache_262015[0].length+0-1)-0];
		if (!(eqStrings(cache_group_262060.id, current_259152[0].id))) {
		F.line = 19;
		perf_259159[0].numLowLevelCalls = addInt(perf_259159[0].numLowLevelCalls, 1);
		F.line = 20;
		cache_group_262060.id = nimCopy(null, current_259152[0].id, NTI36040);
		F.line = 21;
		dom_262059.id = toJSStr(current_259152[0].id);
		}
		
		if (!(HEX3DHEX3D_262073(cache_group_262060.screenBox, current_259152[0].screenBox))) {
		F.line = 24;
		perf_259159[0].numLowLevelCalls = addInt(perf_259159[0].numLowLevelCalls, 1);
		F.line = 25;
		nimCopy(cache_group_262060.screenBox, current_259152[0].screenBox, NTI259034);
		F.line = 26;
		dom_262059.style.position = "absolute";
		F.line = 27;
		dom_262059.style.left = toJSStr((cstrToNimstr((current_259152[0].screenBox.x)+"") || []).concat(makeNimstrLit("px") || []));
		F.line = 28;
		dom_262059.style.top = toJSStr((cstrToNimstr((current_259152[0].screenBox.y)+"") || []).concat(makeNimstrLit("px") || []));
		F.line = 29;
		dom_262059.style.width = toJSStr((cstrToNimstr((current_259152[0].screenBox.w)+"") || []).concat(makeNimstrLit("px") || []));
		F.line = 30;
		dom_262059.style.height = toJSStr((cstrToNimstr((current_259152[0].screenBox.h)+"") || []).concat(makeNimstrLit("px") || []));
		}
		
			if (!(HEX3DHEX3D_262113(cache_group_262060.fill, current_259152[0].fill))) Tmp3 = true; else {				Tmp3 = !(eqStrings(cache_group_262060.kind, current_259152[0].kind));			}		if (Tmp3) {
		F.line = 33;
		perf_259159[0].numLowLevelCalls = addInt(perf_259159[0].numLowLevelCalls, 1);
		F.line = 34;
		nimCopy(cache_group_262060.fill, current_259152[0].fill, NTI253192);
		F.line = 35;
		cache_group_262060.kind = nimCopy(null, current_259152[0].kind, NTI36040);
		if (eqStrings(current_259152[0].kind, makeNimstrLit("text"))) {
		F.line = 37;
		dom_262059.style.color = toJSStr(to_html_rgba_254839(current_259152[0].fill));
		F.line = 38;
		dom_262059.style.backgroundColor = "rgba(0,0,0,0)";
		}
		else {
			F.line = 40;
			dom_262059.style.backgroundColor = toJSStr(to_html_rgba_254839(current_259152[0].fill));
			F.line = 41;
			dom_262059.style.color = "rgba(0,0,0,0)";
		}
		
		}
		
		if (!(HEX3DHEX3D_262113(cache_group_262060.stroke, current_259152[0].stroke))) {
		F.line = 44;
		perf_259159[0].numLowLevelCalls = addInt(perf_259159[0].numLowLevelCalls, 1);
		F.line = 45;
		nimCopy(cache_group_262060.stroke, current_259152[0].stroke, NTI253192);
		if ((0 < current_259152[0].strokeWeight)) {
		F.line = 47;
		dom_262059.style.borderStyle = "solid";
		F.line = 48;
		dom_262059.style.boxSizing = "border-box";
		F.line = 49;
		dom_262059.style.borderColor = toJSStr(to_html_rgba_254839(current_259152[0].stroke));
		F.line = 50;
		dom_262059.style.borderWidth = toJSStr(cstrToNimstr((current_259152[0].strokeWeight)+""));
		}
		else {
			F.line = 52;
			dom_262059.style.borderStyle = "none";
		}
		
		}
		
		if (!((cache_group_262060.transparency == current_259152[0].transparency))) {
		F.line = 55;
		perf_259159[0].numLowLevelCalls = addInt(perf_259159[0].numLowLevelCalls, 1);
		F.line = 56;
		cache_group_262060.transparency = current_259152[0].transparency;
		F.line = 57;
		dom_262059.style.opacity = toJSStr(cstrToNimstr((current_259152[0].transparency)+""));
		}
		
		if (!(HEX3DHEX3D_262188(cache_group_262060.textStyle, current_259152[0].textStyle))) {
		F.line = 60;
		perf_259159[0].numLowLevelCalls = addInt(perf_259159[0].numLowLevelCalls, 1);
		F.line = 61;
		nimCopy(cache_group_262060.textStyle, current_259152[0].textStyle, NTI259036);
		F.line = 62;
		dom_262059.style.fontFamily = toJSStr(current_259152[0].textStyle.fontFamily);
		F.line = 63;
		dom_262059.style.fontSize = toJSStr((cstrToNimstr((current_259152[0].textStyle.fontSize)+"") || []).concat(makeNimstrLit("px") || []));
		F.line = 64;
		dom_262059.style.fontWeight = toJSStr(cstrToNimstr((current_259152[0].textStyle.fontWeight)+""));
		}
		
		if (!((cache_group_262060.editableText == current_259152[0].editableText))) {
		F.line = 69;
		cache_group_262060.editableText = current_259152[0].editableText;
		L4: do {
			F.line = 70;
				L5: while (true) {
				if (!!((dom_262059.firstChild == null))) break L5;
					F.line = 71;
					dom_262059.removeChild(dom_262059.firstChild);
				}
		} while(false);
		F.line = 72;
		var input_div_262240 = document.createElement("input");
		F.line = 73;
		dom_262059.appendChild(input_div_262240);
		F.line = 74;
		cache_group_262060.text = nimCopy(null, current_259152[0].text, NTI36040);
		F.line = 75;
		input_div_262240.setAttribute("placeholder", toJSStr(current_259152[0].text));
		F.line = 76;
		input_div_262240.setAttribute("type", "text");
		F.line = 77;
		input_div_262240.style.border = "none";
		F.line = 78;
		input_div_262240.style.outline = "none";
		F.line = 79;
		input_div_262240.style.width = toJSStr((cstrToNimstr((current_259152[0].screenBox.w)+"") || []).concat(makeNimstrLit("px") || []));
		F.line = 80;
		input_div_262240.style.backgroundColor = "transparent";
		F.line = 81;
		input_div_262240.style.fontFamily = toJSStr(current_259152[0].textStyle.fontFamily);
		F.line = 82;
		input_div_262240.style.fontSize = toJSStr((cstrToNimstr((current_259152[0].textStyle.fontSize)+"") || []).concat(makeNimstrLit("px") || []));
		F.line = 83;
		input_div_262240.style.fontWeight = toJSStr(cstrToNimstr((current_259152[0].textStyle.fontWeight)+""));
		}
		
		if (!(eqStrings(cache_group_262060.text, current_259152[0].text))) {
		F.line = 89;
		perf_259159[0].numLowLevelCalls = addInt(perf_259159[0].numLowLevelCalls, 1);
		F.line = 90;
		cache_group_262060.text = nimCopy(null, current_259152[0].text, NTI36040);
		L6: do {
			F.line = 92;
				L7: while (true) {
				if (!!((dom_262059.firstChild == null))) break L7;
					F.line = 93;
					dom_262059.removeChild(dom_262059.firstChild);
				}
		} while(false);
		F.line = 95;
		var text_div_262263 = document.createElement("span");
		F.line = 96;
		dom_262059.appendChild(text_div_262263);
		if (!(eqStrings(current_259152[0].text, []))) {
		F.line = 100;
		var text_dom_262266 = document.createTextNode(toJSStr(current_259152[0].text));
		F.line = 101;
		text_div_262263.appendChild(text_dom_262266);
		}
		
		F.line = 110;
		text_div_262263.style.whiteSpace = "pre";
		F.line = 111;
		text_div_262263.style.position = "absolute";
		F.line = 113;
		switch (current_259152[0].textStyle.textAlignHorizontal) {
		case -1.0000000000000000e+00:
			F.line = 115;
			text_div_262263.style.left = "0px";
			break;
		case 1.0000000000000000e+00:
			F.line = 117;
			text_div_262263.style.right = "0px";
			break;
		default: 
			F.line = 119;
			text_div_262263.style.left = "50%";
			break;
		}
		F.line = 121;
		switch (current_259152[0].textStyle.textAlignVertical) {
		case -1.0000000000000000e+00:
			F.line = 123;
			text_div_262263.style.top = "0px";
			break;
		case 1.0000000000000000e+00:
			F.line = 125;
			text_div_262263.style.bottom = "0px";
			break;
		default: 
			F.line = 127;
			text_div_262263.style.bottom = "50%";
			break;
		}
		if ((current_259152[0].textStyle.textAlignVertical == 0.0)) {
		if ((current_259152[0].textStyle.textAlignHorizontal == 0.0)) {
		F.line = 131;
		text_div_262263.style.transform = "translate(-50%,-50%)";
		F.line = 132;
		text_div_262263.style.top = "50%";
		F.line = 133;
		text_div_262263.style.bottom = "";
		}
		else {
			F.line = 135;
			text_div_262263.style.transform = "translate(0, -50%)";
			F.line = 136;
			text_div_262263.style.top = "50%";
			F.line = 137;
			text_div_262263.style.bottom = "";
		}
		
		}
		else {
			if ((current_259152[0].textStyle.textAlignHorizontal == 0.0)) {
			F.line = 140;
			text_div_262263.style.transform = "translate(-50%, 0)";
			}
			
		}
		
		}
		
		if (!(eqStrings(cache_group_262060.imageName, current_259152[0].imageName))) {
		F.line = 143;
		cache_group_262060.imageName = nimCopy(null, current_259152[0].imageName, NTI36040);
		if (!(eqStrings(current_259152[0].imageName, []))) {
		F.line = 145;
		dom_262059.style.backgroundImage = toJSStr((makeNimstrLit("url(") || []).concat(current_259152[0].imageName || [],makeNimstrLit(".png)") || []));
		F.line = 146;
		dom_262059.style.backgroundSize = "100% 100%";
		}
		else {
			F.line = 148;
			dom_262059.style.backgroundImage = "";
		}
		
		}
		
		if (!(HEX3DHEX3D_262274(cache_group_262060.cornerRadius, current_259152[0].cornerRadius))) {
		F.line = 151;
		nimCopy(cache_group_262060.cornerRadius, current_259152[0].cornerRadius, NTI259081);
		F.line = 156;
		dom_262059.style.borderRadius = toJSStr((cstrToNimstr((current_259152[0].cornerRadius["Field0"])+"") || []).concat(makeNimstrLit("px ") || [],cstrToNimstr((current_259152[0].cornerRadius["Field1"])+"") || [],makeNimstrLit("px ") || [],cstrToNimstr((current_259152[0].cornerRadius["Field2"])+"") || [],makeNimstrLit("px ") || [],cstrToNimstr((current_259152[0].cornerRadius["Field3"])+"") || [],makeNimstrLit("px") || []));
		}
		
		F.line = 158;
		num_groups_259161[0] = addInt(num_groups_259161[0], 1);
	framePtr = F.prev;

	
}

function HEX2B_263284(a_263286, b_263287) {
	var result_263288 = {x: 0.0, y: 0.0, w: 0.0, h: 0.0};

	var F={procname:"fidget.+",prev:framePtr,filename:"../../src/fidget.nim",line:0};
	framePtr = F;
		F.line = 34;
		result_263288.x = (a_263286.x + b_263287.x);
		F.line = 35;
		result_263288.y = (a_263286.y + b_263287.y);
		F.line = 36;
		result_263288.w = a_263286.w;
		F.line = 37;
		result_263288.h = a_263286.h;
	framePtr = F.prev;

	return result_263288;

}

function box_265181(x_265183, y_265184, w_265185, h_265186) {
	var F={procname:"fidget.box",prev:framePtr,filename:"../../src/fidget.nim",line:0};
	framePtr = F;
		F.line = 197;
		current_259152[0].box.x = x_265183;
		F.line = 198;
		current_259152[0].box.y = y_265184;
		F.line = 199;
		current_259152[0].box.w = w_265185;
		F.line = 200;
		current_259152[0].box.h = h_265186;
		F.line = 201;
		nimCopy(current_259152[0].screenBox, current_259152[0].box, NTI259034);
		if (!((parent_259147[0] == null))) {
		F.line = 203;
		nimCopy(current_259152[0].screenBox, HEX2B_263284(current_259152[0].box, parent_259147[0].screenBox), NTI259034);
		}
		
	framePtr = F.prev;

	
}

function substr_60422(s_60424, first_60425, last_60426) {
	var result_60427 = null;

	var F={procname:"system.substr",prev:framePtr,filename:"../../../../Nim/lib/system.nim",line:0};
	framePtr = F;
		F.line = 4335;
		var first_60428 = nimMax(first_60425, 0);
		F.line = 4336;
		var l_60430 = nimMax(addInt(subInt(nimMin(last_60426, (s_60424 != null ? (s_60424.length-1) : -1)), first_60428), 1), 0);
		F.line = 4337;
		result_60427 = nimCopy(null, mnewString(chckRange(l_60430, 0, 2147483647)), NTI36040);
		L1: do {
			F.line = 4338;
			var i_60442 = 0;
			F.line = 2155;
			var colontmp__286213 = 0;
			F.line = 4338;
			colontmp__286213 = subInt(l_60430, 1);
			F.line = 2158;
			var res_286215 = 0;
			L2: do {
				F.line = 2159;
					L3: while (true) {
					if (!(res_286215 <= colontmp__286213)) break L3;
						F.line = 4338;
						i_60442 = res_286215;
						F.line = 4339;
						result_60427[chckIndx(i_60442, 0, result_60427.length+0-1)-0] = s_60424[chckIndx(addInt(i_60442, first_60428), 0, s_60424.length+0-1)-0];
						F.line = 2161;
						res_286215 = addInt(res_286215, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_60427;

}

function nsuStrip(s_170549, leading_170550, trailing_170551, chars_170553) {
					var Tmp5;

	var result_170554 = null;

		var first_170556 = 0;
		var last_170557 = ((s_170549 != null ? s_170549.length : 0) - 1);
		if (leading_170550) {
		L1: do {
				L2: while (true) {
				if (!((first_170556 <= last_170557) && (chars_170553[s_170549[first_170556]] != undefined))) break L2;
					first_170556 += 1;
				}
		} while(false);
		}
		
		if (trailing_170551) {
		L3: do {
				L4: while (true) {
					if (!(0 <= last_170557)) Tmp5 = false; else {						Tmp5 = (chars_170553[s_170549[last_170557]] != undefined);					}				if (!Tmp5) break L4;
					last_170557 -= 1;
				}
		} while(false);
		}
		
		result_170554 = nimCopy(null, substr_60422(s_170549, first_170556, last_170557), NTI36040);

	return result_170554;

}

function c2n_253255(hex_253257, i_253258) {
	var result_253259 = 0;

	var F={procname:"chroma.c2n",prev:framePtr,filename:"../../../chroma/src/chroma.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 52;
		var c_253266 = hex_253257[chckIndx(i_253258, 0, hex_253257.length+0-1)-0];
		F.line = 53;
		switch (c_253266) {
		case 48:
		case 49:
		case 50:
		case 51:
		case 52:
		case 53:
		case 54:
		case 55:
		case 56:
		case 57:
			F.line = 54;
			result_253259 = subInt(c_253266, 48);
			break BeforeRet;
			break;
		case 97:
		case 98:
		case 99:
		case 100:
		case 101:
		case 102:
			F.line = 55;
			result_253259 = subInt(addInt(10, c_253266), 97);
			break BeforeRet;
			break;
		case 65:
		case 66:
		case 67:
		case 68:
		case 69:
		case 70:
			F.line = 56;
			result_253259 = subInt(addInt(10, c_253266), 65);
			break BeforeRet;
			break;
		default: 
			F.line = 2974;
			var e_253332 = null;
			F.line = 2975;
			e_253332 = {m_type: NTI253194, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
			F.line = 58;
			e_253332.message = nimCopy(null, makeNimstrLit("format is not hex"), NTI36040);
			F.line = 2970;
			e_253332.parent = null;
			F.line = 58;
			raiseException(e_253332, "InvalidColor");
			break;
		}
	} while (false);
	framePtr = F.prev;

	return result_253259;

}

function parse_html_hex_tiny_254187(hex_254189) {
	var result_254190 = {r: 0.0, g: 0.0, b: 0.0, a: 0.0};

	var F={procname:"chroma.parseHtmlHexTiny",prev:framePtr,filename:"../../../chroma/src/chroma.nim",line:0};
	framePtr = F;
		if (!((hex_254189[chckIndx(0, 0, hex_254189.length+0-1)-0] == 35))) {
		F.line = 2974;
		var e_254194 = null;
		F.line = 2975;
		e_254194 = {m_type: NTI253194, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 133;
		e_254194.message = nimCopy(null, makeNimstrLit("Expected \'#\'"), NTI36040);
		F.line = 2970;
		e_254194.parent = null;
		F.line = 133;
		raiseException(e_254194, "InvalidColor");
		}
		
		if (!(((hex_254189 != null ? hex_254189.length : 0) == 4))) {
		F.line = 134;
		failed_assert_impl_57480(makeNimstrLit("/p/andrelytics/chroma/src/chroma.nim(134, 10) `hex.len == 4` "));
		}
		
		F.line = 135;
		result_254190.r = (c2n_253255(hex_254189, 1) / 1.5000000000000000e+01);
		F.line = 136;
		result_254190.g = (c2n_253255(hex_254189, 2) / 1.5000000000000000e+01);
		F.line = 137;
		result_254190.b = (c2n_253255(hex_254189, 3) / 1.5000000000000000e+01);
		F.line = 138;
		result_254190.a = 1.0000000000000000e+00;
	framePtr = F.prev;

	return result_254190;

}

function parse_hex_253355(hex_253357) {
	var result_253358 = {r: 0.0, g: 0.0, b: 0.0, a: 0.0};

	var F={procname:"chroma.parseHex",prev:framePtr,filename:"../../../chroma/src/chroma.nim",line:0};
	framePtr = F;
		if (!(((hex_253357 != null ? hex_253357.length : 0) == 6))) {
		F.line = 66;
		failed_assert_impl_57480(makeNimstrLit("/p/andrelytics/chroma/src/chroma.nim(66, 10) `hex.len == 6` "));
		}
		
		F.line = 67;
		result_253358.r = (addInt(mulInt(c2n_253255(hex_253357, 0), 16), c2n_253255(hex_253357, 1)) / 2.5500000000000000e+02);
		F.line = 68;
		result_253358.g = (addInt(mulInt(c2n_253255(hex_253357, 2), 16), c2n_253255(hex_253357, 3)) / 2.5500000000000000e+02);
		F.line = 69;
		result_253358.b = (addInt(mulInt(c2n_253255(hex_253357, 4), 16), c2n_253255(hex_253357, 5)) / 2.5500000000000000e+02);
		F.line = 70;
		result_253358.a = 1.0000000000000000e+00;
	framePtr = F.prev;

	return result_253358;

}

function HEX5BHEX5D_126105(s_126110, x_126113) {
	var result_126114 = null;

	var F={procname:"[].[]",prev:framePtr,filename:"../../../../Nim/lib/system.nim",line:0};
	framePtr = F;
		F.line = 3737;
		var a_126201 = x_126113.a;
		F.line = 3738;
		var l_126401 = addInt(subInt(subInt((s_126110 != null ? s_126110.length : 0), x_126113.b), a_126201), 1);
		F.line = 3739;
		result_126114 = nimCopy(null, mnewString(chckRange(l_126401, 0, 2147483647)), NTI36040);
		L1: do {
			F.line = 3740;
			var i_126411 = 0;
			F.line = 3697;
			var i_286231 = 0;
			L2: do {
				F.line = 3698;
					L3: while (true) {
					if (!(i_286231 < l_126401)) break L3;
						F.line = 3740;
						i_126411 = i_286231;
						F.line = 3740;
						result_126114[chckIndx(i_126411, 0, result_126114.length+0-1)-0] = s_126110[chckIndx(addInt(i_126411, a_126201), 0, s_126110.length+0-1)-0];
						F.line = 3700;
						i_286231 = addInt(i_286231, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_126114;

}

function HEX2EHEX2E_126053(a_126058, b_126060) {
	var result_126068 = {a: 0, b: 0};

	var F={procname:".....",prev:framePtr,filename:"../../../../Nim/lib/system.nim",line:0};
	framePtr = F;
		F.line = 410;
		result_126068.a = a_126058;
		F.line = 411;
		result_126068.b = b_126060;
	framePtr = F.prev;

	return result_126068;

}

function parse_html_hex_254096(hex_254098) {
	var result_254099 = {r: 0.0, g: 0.0, b: 0.0, a: 0.0};

	var F={procname:"chroma.parseHtmlHex",prev:framePtr,filename:"../../../chroma/src/chroma.nim",line:0};
	framePtr = F;
		F.line = 110;
		if (!((hex_254098[chckIndx(0, 0, hex_254098.length+0-1)-0] == 35))) {
		F.line = 2974;
		var e_254103 = null;
		F.line = 2975;
		e_254103 = {m_type: NTI253194, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 115;
		e_254103.message = nimCopy(null, makeNimstrLit("Expected \'#\'"), NTI36040);
		F.line = 2970;
		e_254103.parent = null;
		F.line = 115;
		raiseException(e_254103, "InvalidColor");
		}
		
		nimCopy(result_254099, parse_hex_253355(HEX5BHEX5D_126105(hex_254098, HEX2EHEX2E_126053(1, 1))), NTI253192);
	framePtr = F.prev;

	return result_254099;

}

function HEX5BHEX5D_94067(s_94072, x_94075) {
	var result_94076 = null;

	var F={procname:"[].[]",prev:framePtr,filename:"../../../../Nim/lib/system.nim",line:0};
	framePtr = F;
		F.line = 3737;
		var a_94201 = x_94075.a;
		F.line = 3738;
		var l_94401 = addInt(subInt(x_94075.b, a_94201), 1);
		F.line = 3739;
		result_94076 = nimCopy(null, mnewString(chckRange(l_94401, 0, 2147483647)), NTI36040);
		L1: do {
			F.line = 3740;
			var i_94411 = 0;
			F.line = 3697;
			var i_286238 = 0;
			L2: do {
				F.line = 3698;
					L3: while (true) {
					if (!(i_286238 < l_94401)) break L3;
						F.line = 3740;
						i_94411 = i_286238;
						F.line = 3740;
						result_94076[chckIndx(i_94411, 0, result_94076.length+0-1)-0] = s_94072[chckIndx(addInt(i_94411, a_94201), 0, s_94072.length+0-1)-0];
						F.line = 3700;
						i_286238 = addInt(i_286238, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_94076;

}

function HEX2EHEX2E_94021(a_94026, b_94028) {
	var result_94030 = {a: 0, b: 0};

	var F={procname:".....",prev:framePtr,filename:"../../../../Nim/lib/system.nim",line:0};
	framePtr = F;
		F.line = 410;
		result_94030.a = a_94026;
		F.line = 411;
		result_94030.b = b_94028;
	framePtr = F.prev;

	return result_94030;

}

function HEX5BHEX5D_57028(s_57030, i_57031) {
	var result_57032 = 0;

	var F={procname:"system.[]",prev:framePtr,filename:"../../../../Nim/lib/system.nim",line:0};
	framePtr = F;
		F.line = 3807;
		result_57032 = s_57030[chckIndx(subInt((s_57030 != null ? s_57030.length : 0), i_57031), 0, s_57030.length+0-1)-0];
	framePtr = F.prev;

	return result_57032;

}

function nsuFindChar(s_174216, sub_174217, start_174218, last_174219) {
		var Tmp1;

	var result_174221 = 0;

	BeforeRet: do {
		if ((last_174219 == 0)) {
		Tmp1 = (s_174216 != null ? (s_174216.length-1) : -1);
		}
		else {
		Tmp1 = last_174219;
		}
		
		var last_174223 = Tmp1;
		L2: do {
			var i_174609 = 0;
			var colontmp__286257 = 0;
			colontmp__286257 = start_174218;
			var res_286259 = colontmp__286257;
			L3: do {
					L4: while (true) {
					if (!(res_286259 <= last_174223)) break L4;
						i_174609 = res_286259;
						if ((sub_174217 == s_174216[i_174609])) {
						result_174221 = i_174609;
						break BeforeRet;
						}
						
						res_286259 += 1;
					}
			} while(false);
		} while(false);
		result_174221 = -1;
		break BeforeRet;
	} while (false);

	return result_174221;

}

function substr_60456(s_60458, first_60459) {
	var result_60461 = null;

	var F={procname:"system.substr",prev:framePtr,filename:"../../../../Nim/lib/system.nim",line:0};
	framePtr = F;
		F.line = 4348;
		result_60461 = nimCopy(null, substr_60422(s_60458, first_60459, (s_60458 != null ? (s_60458.length-1) : -1)), NTI36040);
	framePtr = F.prev;

	return result_60461;

}

function nsuInitSkipTable(a_173934, sub_173935) {
		var m_173936 = (sub_173935 != null ? sub_173935.length : 0);
		var i_173938 = 0;
		L1: do {
				L2: while (true) {
				if (!(i_173938 <= 248)) break L2;
					a_173934[(i_173938 + 0)] = m_173936;
					a_173934[(i_173938 + 1)] = m_173936;
					a_173934[(i_173938 + 2)] = m_173936;
					a_173934[(i_173938 + 3)] = m_173936;
					a_173934[(i_173938 + 4)] = m_173936;
					a_173934[(i_173938 + 5)] = m_173936;
					a_173934[(i_173938 + 6)] = m_173936;
					a_173934[(i_173938 + 7)] = m_173936;
					i_173938 += 8;
				}
		} while(false);
		L3: do {
			var i_173960 = 0;
			var colontmp__286266 = 0;
			colontmp__286266 = (m_173936 - 1);
			var i_286268 = 0;
			L4: do {
					L5: while (true) {
					if (!(i_286268 < colontmp__286266)) break L5;
						i_173960 = i_286268;
						a_173934[sub_173935[i_173960]] = ((m_173936 - 1) - i_173960);
						i_286268 += 1;
					}
			} while(false);
		} while(false);

	
}

function nsuFindStrA(a_173976, s_173977, sub_173978, start_173979, last_173980) {
		var Tmp1;

	var result_173982 = 0;

	BeforeRet: do {
		if ((last_173980 == 0)) {
		Tmp1 = (s_173977 != null ? (s_173977.length-1) : -1);
		}
		else {
		Tmp1 = last_173980;
		}
		
		var last_173984 = Tmp1;
		var sub_last_173985 = ((sub_173978 != null ? sub_173978.length : 0) - 1);
		if ((sub_last_173985 == -1)) {
		result_173982 = start_173979;
		break BeforeRet;
		}
		
		var skip_173987 = start_173979;
		L2: do {
				L3: while (true) {
				if (!(sub_last_173985 <= (last_173984 - skip_173987))) break L3;
					var i_173988 = sub_last_173985;
					L4: do {
							L5: while (true) {
							if (!(s_173977[(skip_173987 + i_173988)] == sub_173978[i_173988])) break L5;
								if ((i_173988 == 0)) {
								result_173982 = skip_173987;
								break BeforeRet;
								}
								
								i_173988 -= 1;
							}
					} while(false);
					skip_173987 += a_173976[s_173977[(skip_173987 + sub_last_173985)]];
				}
		} while(false);
		result_173982 = -1;
		break BeforeRet;
	} while (false);

	return result_173982;

}

function nsuReplaceStr(s_175513, sub_175514, by_175515) {
	var result_175516 = null;

		result_175516 = nimCopy(null, [], NTI36040);
		var sub_len_175517 = (sub_175514 != null ? sub_175514.length : 0);
		if ((sub_len_175517 == 0)) {
		result_175516 = nimCopy(null, s_175513, NTI36040);
		}
		else {
		if ((sub_len_175517 == 1)) {
		var c_175518 = sub_175514[0];
		var last_175520 = (s_175513 != null ? (s_175513.length-1) : -1);
		var i_175522 = 0;
		L1: do {
				L2: while (true) {
				if (!true) break L2;
					var j_175523 = nsuFindChar(s_175513, c_175518, i_175522, last_175520);
					if ((j_175523 < 0)) {
					break L1;
					}
					
					if (result_175516 != null) { result_175516 = (result_175516).concat(substr_60422(s_175513, i_175522, (j_175523 - 1))); } else { result_175516 = substr_60422(s_175513, i_175522, (j_175523 - 1)).slice(); };
					if (result_175516 != null) { result_175516 = (result_175516).concat(by_175515); } else { result_175516 = by_175515.slice(); };
					i_175522 = (j_175523 + sub_len_175517);
				}
		} while(false);
		if (result_175516 != null) { result_175516 = (result_175516).concat(substr_60456(s_175513, i_175522)); } else { result_175516 = substr_60456(s_175513, i_175522).slice(); };
		}
		else {
			var a_175524 = [new Int32Array(256)];
			nsuInitSkipTable(a_175524[0], sub_175514);
			var last_175527 = (s_175513 != null ? (s_175513.length-1) : -1);
			var i_175529 = 0;
			L3: do {
					L4: while (true) {
					if (!true) break L4;
						var j_175530 = nsuFindStrA(a_175524[0], s_175513, sub_175514, i_175529, last_175527);
						if ((j_175530 < 0)) {
						break L3;
						}
						
						if (result_175516 != null) { result_175516 = (result_175516).concat(substr_60422(s_175513, i_175529, (j_175530 - 1))); } else { result_175516 = substr_60422(s_175513, i_175529, (j_175530 - 1)).slice(); };
						if (result_175516 != null) { result_175516 = (result_175516).concat(by_175515); } else { result_175516 = by_175515.slice(); };
						i_175529 = (j_175530 + sub_len_175517);
					}
			} while(false);
			if (result_175516 != null) { result_175516 = (result_175516).concat(substr_60456(s_175513, i_175529)); } else { result_175516 = substr_60456(s_175513, i_175529).slice(); };
		}
		}

	return result_175516;

}

function nsuSplitChar(s_171673, sep_171674, maxsplit_171676) {
	var result_171678 = null;

		result_171678 = nimCopy(null, [], NTI171695);
		L1: do {
			var x_171680 = null;
			var last_286277 = 0;
			var splits_286279 = maxsplit_171676;
			L2: do {
					L3: while (true) {
					if (!(last_286277 <= (s_171673 != null ? s_171673.length : 0))) break L3;
						var first_286282 = last_286277;
						L4: do {
								L5: while (true) {
								if (!((last_286277 < (s_171673 != null ? s_171673.length : 0)) && !((s_171673[last_286277] == sep_171674)))) break L5;
									last_286277 += 1;
								}
						} while(false);
						if ((splits_286279 == 0)) {
						last_286277 = (s_171673 != null ? s_171673.length : 0);
						}
						
						x_171680 = substr_60422(s_171673, first_286282, (last_286277 - 1));
						var Tmp6 = nimCopy(null, x_171680, NTI36040);
						if (result_171678 != null) { result_171678.push(Tmp6); } else { result_171678 = [Tmp6]; };
						if ((splits_286279 == 0)) {
						break L2;
						}
						
						splits_286279 -= 1;
						last_286277 += 1;
					}
			} while(false);
		} while(false);

	return result_171678;

}

function ten_to_the_power_of_54664(b_54666) {
	var result_54667 = 0.0;

	var F={procname:"system.tenToThePowerOf",prev:framePtr,filename:"../../../../Nim/lib/system/jssys.nim",line:0};
	framePtr = F;
		F.line = 659;
		var b_54668 = b_54666;
		F.line = 660;
		var a_54669 = 1.0000000000000000e+01;
		F.line = 661;
		result_54667 = 1.0000000000000000e+00;
		L1: do {
			F.line = 662;
				L2: while (true) {
				if (!true) break L2;
					if (((b_54668 & 1) == 1)) {
					F.line = 664;
					result_54667 = (result_54667 * a_54669);
					}
					
					F.line = 665;
					b_54668 = ((b_54668 >>> 0) >>> 1);
					if ((b_54668 == 0)) {
					F.line = 666;
					break L1;
					}
					
					F.line = 667;
					a_54669 = (a_54669 * a_54669);
				}
		} while(false);
	framePtr = F.prev;

	return result_54667;

}

function npuParseFloat(s_73823, number_73825, number_73825_Idx, start_73826) {
	var result_73828 = 0;

	var F={procname:"parseutils.parseFloat",prev:framePtr,filename:"../../../../Nim/lib/pure/parseutils.nim",line:0};
	framePtr = F;
		F.line = 371;
		var bf_73829 = [0.0];
		F.line = 372;
		result_73828 = nimParseBiggestFloat(s_73823, bf_73829, 0, start_73826);
		if (!((result_73828 == 0))) {
		F.line = 374;
		number_73825[number_73825_Idx] = bf_73829[0];
		}
		
	framePtr = F.prev;

	return result_73828;

}

function nsuParseFloat(s_172347) {
			var Tmp1;

	var result_172348 = [0.0];

		var l_172350 = npuParseFloat(s_172347, result_172348, 0, 0);
			if (!((l_172350 == (s_172347 != null ? s_172347.length : 0)))) Tmp1 = true; else {				Tmp1 = (l_172350 == 0);			}		if (Tmp1) {
		var e_172354 = null;
		e_172354 = {m_type: NTI40252, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_172354.message = nimCopy(null, (makeNimstrLit("invalid float: ") || []).concat(s_172347 || []), NTI36040);
		e_172354.parent = null;
		raiseException(e_172354, "ValueError");
		}
		

	return result_172348[0];

}

function parse_html_rgba_254675(text_254677) {
	var result_254678 = {r: 0.0, g: 0.0, b: 0.0, a: 0.0};

	var F={procname:"chroma.parseHtmlRgba",prev:framePtr,filename:"../../../chroma/src/chroma.nim",line:0};
	framePtr = F;
		if (!(eqStrings(HEX5BHEX5D_94067(text_254677, HEX2EHEX2E_94021(0, 4)), makeNimstrLit("rgba(")))) {
		F.line = 2974;
		var e_254729 = null;
		F.line = 2975;
		e_254729 = {m_type: NTI253194, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 193;
		e_254729.message = nimCopy(null, makeNimstrLit("Expected \'rgba(\'"), NTI36040);
		F.line = 2970;
		e_254729.parent = null;
		F.line = 193;
		raiseException(e_254729, "InvalidColor");
		}
		
		if (!((HEX5BHEX5D_57028(text_254677, 1) == 41))) {
		F.line = 2974;
		var e_254747 = null;
		F.line = 2975;
		e_254747 = {m_type: NTI253194, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 195;
		e_254747.message = nimCopy(null, makeNimstrLit("Expected \')\'"), NTI36040);
		F.line = 2970;
		e_254747.parent = null;
		F.line = 195;
		raiseException(e_254747, "InvalidColor");
		}
		
		F.line = 196;
		var inner_254801 = nsuReplaceStr(HEX5BHEX5D_126105(text_254677, HEX2EHEX2E_126053(5, 2)), makeNimstrLit(" "), []);
		F.line = 197;
		var arr_254802 = nsuSplitChar(inner_254801, 44, -1);
		if (!(((arr_254802 != null ? arr_254802.length : 0) == 4))) {
		F.line = 2974;
		var e_254813 = null;
		F.line = 2975;
		e_254813 = {m_type: NTI253194, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 199;
		e_254813.message = nimCopy(null, makeNimstrLit("Expected 4 numbers in rgba()"), NTI36040);
		F.line = 2970;
		e_254813.parent = null;
		F.line = 199;
		raiseException(e_254813, "InvalidColor");
		}
		
		F.line = 200;
		result_254678.r = nimMin(1.0000000000000000e+00, (nsuParseFloat(arr_254802[chckIndx(0, 0, arr_254802.length+0-1)-0]) / 2.5500000000000000e+02));
		F.line = 201;
		result_254678.g = nimMin(1.0000000000000000e+00, (nsuParseFloat(arr_254802[chckIndx(1, 0, arr_254802.length+0-1)-0]) / 2.5500000000000000e+02));
		F.line = 202;
		result_254678.b = nimMin(1.0000000000000000e+00, (nsuParseFloat(arr_254802[chckIndx(2, 0, arr_254802.length+0-1)-0]) / 2.5500000000000000e+02));
		F.line = 203;
		result_254678.a = nimMin(1.0000000000000000e+00, nsuParseFloat(arr_254802[chckIndx(3, 0, arr_254802.length+0-1)-0]));
	framePtr = F.prev;

	return result_254678;

}

function parse_html_rgb_254491(text_254493) {
	var result_254494 = {r: 0.0, g: 0.0, b: 0.0, a: 0.0};

	var F={procname:"chroma.parseHtmlRgb",prev:framePtr,filename:"../../../chroma/src/chroma.nim",line:0};
	framePtr = F;
		if (!(eqStrings(HEX5BHEX5D_94067(text_254493, HEX2EHEX2E_94021(0, 3)), makeNimstrLit("rgb(")))) {
		F.line = 2974;
		var e_254545 = null;
		F.line = 2975;
		e_254545 = {m_type: NTI253194, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 158;
		e_254545.message = nimCopy(null, makeNimstrLit("Expected \'rgb(\'"), NTI36040);
		F.line = 2970;
		e_254545.parent = null;
		F.line = 158;
		raiseException(e_254545, "InvalidColor");
		}
		
		if (!((HEX5BHEX5D_57028(text_254493, 1) == 41))) {
		F.line = 2974;
		var e_254563 = null;
		F.line = 2975;
		e_254563 = {m_type: NTI253194, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 160;
		e_254563.message = nimCopy(null, makeNimstrLit("Expected \')\'"), NTI36040);
		F.line = 2970;
		e_254563.parent = null;
		F.line = 160;
		raiseException(e_254563, "InvalidColor");
		}
		
		F.line = 161;
		var inner_254617 = nsuReplaceStr(HEX5BHEX5D_126105(text_254493, HEX2EHEX2E_126053(4, 2)), makeNimstrLit(" "), []);
		F.line = 162;
		var arr_254618 = nsuSplitChar(inner_254617, 44, -1);
		if (!(((arr_254618 != null ? arr_254618.length : 0) == 3))) {
		F.line = 2974;
		var e_254629 = null;
		F.line = 2975;
		e_254629 = {m_type: NTI253194, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 164;
		e_254629.message = nimCopy(null, makeNimstrLit("Expected 3 numbers in rgb()"), NTI36040);
		F.line = 2970;
		e_254629.parent = null;
		F.line = 164;
		raiseException(e_254629, "InvalidColor");
		}
		
		F.line = 165;
		result_254494.r = nimMin(1.0000000000000000e+00, (nsuParseFloat(arr_254618[chckIndx(0, 0, arr_254618.length+0-1)-0]) / 2.5500000000000000e+02));
		F.line = 166;
		result_254494.g = nimMin(1.0000000000000000e+00, (nsuParseFloat(arr_254618[chckIndx(1, 0, arr_254618.length+0-1)-0]) / 2.5500000000000000e+02));
		F.line = 167;
		result_254494.b = nimMin(1.0000000000000000e+00, (nsuParseFloat(arr_254618[chckIndx(2, 0, arr_254618.length+0-1)-0]) / 2.5500000000000000e+02));
		F.line = 168;
		result_254494.a = 1.0000000000000000e+00;
	framePtr = F.prev;

	return result_254494;

}

function nsuToLowerAsciiChar(c_170157) {
	var result_170158 = 0;

	var F={procname:"strutils.toLowerAscii",prev:framePtr,filename:"../../../../Nim/lib/pure/strutils.nim",line:0};
	framePtr = F;
		if ((ConstSet10[c_170157] != undefined)) {
		F.line = 265;
		result_170158 = chckRange(addInt(c_170157, 32), 0, 255);
		}
		else {
			F.line = 267;
			result_170158 = c_170157;
		}
		
	framePtr = F.prev;

	return result_170158;

}

function nsuToLowerAsciiStr(s_170217) {
	var result_170218 = null;

	var F={procname:"strutils.toLowerAscii",prev:framePtr,filename:"../../../../Nim/lib/pure/strutils.nim",line:0};
	framePtr = F;
		F.line = 270;
		result_170218 = nimCopy(null, mnewString(chckRange((s_170217 != null ? s_170217.length : 0), 0, 2147483647)), NTI36040);
		L1: do {
			F.line = 271;
			var i_170220 = 0;
			F.line = 2155;
			var colontmp__286294 = 0;
			F.line = 271;
			colontmp__286294 = subInt((s_170217 != null ? s_170217.length : 0), 1);
			F.line = 2158;
			var res_286296 = 0;
			L2: do {
				F.line = 2159;
					L3: while (true) {
					if (!(res_286296 <= colontmp__286294)) break L3;
						F.line = 283;
						i_170220 = res_286296;
						F.line = 272;
						result_170218[chckIndx(i_170220, 0, result_170218.length+0-1)-0] = nsuToLowerAsciiChar(s_170217[chckIndx(i_170220, 0, s_170217.length+0-1)-0]);
						F.line = 2161;
						res_286296 = addInt(res_286296, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_170218;

}

function has_key_255561(t_255567, key_255569) {
	var result_255570 = false;

	var F={procname:"hasKey.hasKey",prev:framePtr,filename:"../../../../Nim/lib/pure/collections/tables.nim",line:0};
	framePtr = F;
		F.line = 261;
		var hc_255571 = [0];
		F.line = 262;
		result_255570 = (0 <= raw_get_224399(t_255567, key_255569, hc_255571, 0));
	framePtr = F.prev;

	return result_255570;

}

function has_key_255192(t_255198, key_255200) {
	var result_255201 = false;

	var F={procname:"hasKey.hasKey",prev:framePtr,filename:"../../../../Nim/lib/pure/collections/tables.nim",line:0};
	framePtr = F;
		F.line = 377;
		result_255201 = has_key_255561(t_255198, key_255200);
	framePtr = F.prev;

	return result_255201;

}

function contains_255083(t_255089, key_255091) {
	var result_255092 = false;

	var F={procname:"contains.contains",prev:framePtr,filename:"../../../../Nim/lib/pure/collections/tables.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 460;
		result_255092 = has_key_255192(t_255089, key_255091);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_255092;

}

function HEX5BHEX5D_256276(t_256283, key_256285) {
	var result_256287 = null;
	var result_256287_Idx = 0;

	var F={procname:"[].[]",prev:framePtr,filename:"../../../../Nim/lib/pure/collections/tables.nim",line:0};
	framePtr = F;
		F.line = 158;
		var hc_256289 = [0];
		F.line = 159;
		var index_256291 = raw_get_224399(t_256283, key_256285, hc_256289, 0);
		if ((0 <= index_256291)) {
		F.line = 160;
		result_256287 = t_256283.data[chckIndx(index_256291, 0, t_256283.data.length+0-1)-0]; result_256287_Idx = "Field2";
		}
		else {
			F.line = 2974;
			var e_256604 = null;
			F.line = 2975;
			e_256604 = {m_type: NTI40254, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
			F.line = 163;
			e_256604.message = nimCopy(null, (makeNimstrLit("key not found: ") || []).concat(key_256285 || []), NTI36040);
			F.line = 2970;
			e_256604.parent = null;
			F.line = 163;
			raiseException(e_256604, "KeyError");
		}
		
	framePtr = F.prev;

	return [result_256287, result_256287_Idx];

}

function HEX5BHEX5D_255838(t_255844, key_255846) {
		var Tmp1;

	var result_255848 = null;
	var result_255848_Idx = 0;

	var F={procname:"[].[]",prev:framePtr,filename:"../../../../Nim/lib/pure/collections/tables.nim",line:0};
	framePtr = F;
		F.line = 430;
		result_255848 = (Tmp1 = HEX5BHEX5D_256276(t_255844, key_255846), Tmp1)[0]; result_255848_Idx = Tmp1[1];
	framePtr = F.prev;

	return [result_255848, result_255848_Idx];

}

function parse_html_name_254923(text_254925) {
		var Tmp1;

	var result_254926 = {r: 0.0, g: 0.0, b: 0.0, a: 0.0};

	var F={procname:"chroma.parseHtmlName",prev:framePtr,filename:"../../../chroma/src/chroma.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 259;
		var lower_name_254927 = nsuToLowerAsciiStr(text_254925);
		if (contains_255083(color_names_228417[0], lower_name_254927)) {
		F.line = 261;
		nimCopy(result_254926, parse_hex_253355((Tmp1 = HEX5BHEX5D_255838(color_names_228417[0], lower_name_254927), Tmp1)[0][Tmp1[1]]), NTI253192);
		break BeforeRet;
		}
		else {
			F.line = 2974;
			var e_256644 = null;
			F.line = 2975;
			e_256644 = {m_type: NTI253194, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
			F.line = 263;
			e_256644.message = nimCopy(null, makeNimstrLit("Not a valid color name."), NTI36040);
			F.line = 2970;
			e_256644.parent = null;
			F.line = 263;
			raiseException(e_256644, "InvalidColor");
		}
		
	} while (false);
	framePtr = F.prev;

	return result_254926;

}

function parse_html_color_256667(color_text_256669) {
	var result_256670 = {r: 0.0, g: 0.0, b: 0.0, a: 0.0};

	var F={procname:"chroma.parseHtmlColor",prev:framePtr,filename:"../../../chroma/src/chroma.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 273;
		var text_256671 = nsuStrip(color_text_256669, true, true, ConstSet2);
		if ((text_256671[chckIndx(0, 0, text_256671.length+0-1)-0] == 35)) {
		if (((text_256671 != null ? text_256671.length : 0) == 4)) {
		F.line = 276;
		nimCopy(result_256670, parse_html_hex_tiny_254187(text_256671), NTI253192);
		break BeforeRet;
		}
		else {
		if (((text_256671 != null ? text_256671.length : 0) == 7)) {
		F.line = 278;
		nimCopy(result_256670, parse_html_hex_254096(text_256671), NTI253192);
		break BeforeRet;
		}
		else {
			F.line = 2974;
			var e_256675 = null;
			F.line = 2975;
			e_256675 = {m_type: NTI253194, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
			F.line = 280;
			e_256675.message = nimCopy(null, makeNimstrLit("HTML color invalid."), NTI36040);
			F.line = 2970;
			e_256675.parent = null;
			F.line = 280;
			raiseException(e_256675, "InvalidColor");
		}
		}
		}
		else {
		if (eqStrings(HEX5BHEX5D_94067(text_256671, HEX2EHEX2E_94021(0, 3)), makeNimstrLit("rgba"))) {
		F.line = 282;
		nimCopy(result_256670, parse_html_rgba_254675(text_256671), NTI253192);
		break BeforeRet;
		}
		else {
		if (eqStrings(HEX5BHEX5D_94067(text_256671, HEX2EHEX2E_94021(0, 2)), makeNimstrLit("rgb"))) {
		F.line = 284;
		nimCopy(result_256670, parse_html_rgb_254491(text_256671), NTI253192);
		break BeforeRet;
		}
		else {
			F.line = 286;
			nimCopy(result_256670, parse_html_name_254923(text_256671), NTI253192);
			break BeforeRet;
		}
		}}
	} while (false);
	framePtr = F.prev;

	return result_256670;

}

function fill_265254(color_265256) {
	var F={procname:"fidget.fill",prev:framePtr,filename:"../../src/fidget.nim",line:0};
	framePtr = F;
		F.line = 223;
		nimCopy(current_259152[0].fill, parse_html_color_256667(color_265256), NTI253192);
	framePtr = F.prev;

	
}

function between_263227(value_263229, min_263230, max_263231) {
		var Tmp1;

	var result_263232 = false;

	var F={procname:"fidget.between",prev:framePtr,filename:"../../src/fidget.nim",line:0};
	framePtr = F;
		F.line = 15;
		if (!(min_263230 <= value_263229)) Tmp1 = false; else {			Tmp1 = (value_263229 <= max_263231);		}		result_263232 = Tmp1;
	framePtr = F.prev;

	return result_263232;

}

function overlap_263264(a_263266, b_263267) {
	var result_263268 = false;

	var F={procname:"fidget.overlap",prev:framePtr,filename:"../../src/fidget.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 27;
		var x_overlap_263269 = (between_263227(a_263266.x, b_263267.x, (b_263267.x + b_263267.w)) || between_263227(b_263267.x, a_263266.x, (a_263266.x + a_263266.w)));
		F.line = 28;
		var y_overlap_263270 = (between_263227(a_263266.y, b_263267.y, (b_263267.y + b_263267.h)) || between_263227(b_263267.y, a_263266.y, (a_263266.y + a_263266.h)));
		F.line = 29;
		result_263268 = (x_overlap_263269 && y_overlap_263270);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_263268;

}

function inside_263246(p_263248, b_263249) {
		var Tmp1;
		var Tmp2;
		var Tmp3;

	var result_263250 = false;

	var F={procname:"fidget.inside",prev:framePtr,filename:"../../src/fidget.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 21;
		if (!(b_263249.x < p_263248.x)) Tmp3 = false; else {			Tmp3 = (p_263248.x < (b_263249.x + b_263249.w));		}		if (!Tmp3) Tmp2 = false; else {			Tmp2 = (b_263249.y < p_263248.y);		}		if (!Tmp2) Tmp1 = false; else {			Tmp1 = (p_263248.y < (b_263249.y + b_263249.h));		}		result_263250 = Tmp1;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_263250;

}

function HEX3Aanonymous_285128() {
		var Tmp1;
		var Tmp2;
		var Tmp3;
		var Tmp4;
		var Tmp5;
		var Tmp6;
		var Tmp7;
		var Tmp8;
						var Tmp12;
						var Tmp13;
						var Tmp14;
						var Tmp15;
						var Tmp16;
						var Tmp17;
						var Tmp18;
						var Tmp19;
						var Tmp20;
						var Tmp21;
						var Tmp22;
						var Tmp23;
						var Tmp24;
						var Tmp25;
						var Tmp26;
						var Tmp27;
						var Tmp28;
						var Tmp29;
		var Tmp30;
		var Tmp31;
		var Tmp32;
		var Tmp33;

	var F={procname:"bars.:anonymous",prev:framePtr,filename:"bars.nim",line:0};
	framePtr = F;
		F.line = 14;
		var h_285137 = addInt(mulInt((bars_285080[0] != null ? bars_285080[0].length : 0), 60), 20);
		F.line = 52;
		parent_259147[0] = (Tmp1 = HEX5BHEX5D_285143(group_stack_259151[0], 1), Tmp1)[0][Tmp1[1]];
		if (!(parent_259147[0].wasDrawn)) {
		F.line = 54;
		draw_262030(parent_259147[0]);
		F.line = 55;
		parent_259147[0].wasDrawn = true;
		}
		
		F.line = 57;
		current_259152[0] = {id: null, kind: null, text: null, code: null, kids: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0.0, textAlignVertical: 0.0}, imageName: null, cornerRadius: {Field0: 0, Field1: 0, Field2: 0, Field3: 0}, wasDrawn: false, editableText: false};
		F.line = 15;
		current_259152[0].id = nimCopy(null, makeNimstrLit("main"), NTI36040);
		F.line = 88;
		current_259152[0].kind = nimCopy(null, makeNimstrLit("frame"), NTI36040);
		F.line = 60;
		current_259152[0].wasDrawn = false;
		F.line = 61;
		current_259152[0].transparency = 1.0000000000000000e+00;
		F.line = 62;
		if (group_stack_259151[0] != null) { group_stack_259151[0].push(current_259152[0]); } else { group_stack_259151[0] = [current_259152[0]]; };
		F.line = 16;
		box_265181(0.0, 0.0, ((root_259148[0].box.w)|0), nimMax(((root_259148[0].box.h)|0), h_285137));
		F.line = 52;
		parent_259147[0] = (Tmp2 = HEX5BHEX5D_285143(group_stack_259151[0], 1), Tmp2)[0][Tmp2[1]];
		if (!(parent_259147[0].wasDrawn)) {
		F.line = 54;
		draw_262030(parent_259147[0]);
		F.line = 55;
		parent_259147[0].wasDrawn = true;
		}
		
		F.line = 57;
		current_259152[0] = {id: null, kind: null, text: null, code: null, kids: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0.0, textAlignVertical: 0.0}, imageName: null, cornerRadius: {Field0: 0, Field1: 0, Field2: 0, Field3: 0}, wasDrawn: false, editableText: false};
		F.line = 113;
		current_259152[0].id = nimCopy(null, [], NTI36040);
		F.line = 93;
		current_259152[0].kind = nimCopy(null, makeNimstrLit("rectangle"), NTI36040);
		F.line = 60;
		current_259152[0].wasDrawn = false;
		F.line = 61;
		current_259152[0].transparency = 1.0000000000000000e+00;
		F.line = 62;
		if (group_stack_259151[0] != null) { group_stack_259151[0].push(current_259152[0]); } else { group_stack_259151[0] = [current_259152[0]]; };
		F.line = 114;
		box_265181(0.0, 0.0, parent_259147[0].box.w, parent_259147[0].box.h);
		F.line = 115;
		fill_265254(makeNimstrLit("#F7F7F9"));
		if (!(current_259152[0].wasDrawn)) {
		F.line = 67;
		draw_262030(current_259152[0]);
		F.line = 68;
		current_259152[0].wasDrawn = true;
		}
		
		F.line = 70;
		pop_262365(group_stack_259151, 0);
		if ((1 < (group_stack_259151[0] != null ? group_stack_259151[0].length : 0))) {
		F.line = 72;
		current_259152[0] = (Tmp3 = HEX5BHEX5D_285143(group_stack_259151[0], 1), Tmp3)[0][Tmp3[1]];
		}
		else {
			F.line = 74;
			current_259152[0] = null;
		}
		
		if ((2 < (group_stack_259151[0] != null ? group_stack_259151[0].length : 0))) {
		F.line = 76;
		parent_259147[0] = (Tmp4 = HEX5BHEX5D_285143(group_stack_259151[0], 2), Tmp4)[0][Tmp4[1]];
		}
		else {
			F.line = 78;
			parent_259147[0] = null;
		}
		
		F.line = 52;
		parent_259147[0] = (Tmp5 = HEX5BHEX5D_285143(group_stack_259151[0], 1), Tmp5)[0][Tmp5[1]];
		if (!(parent_259147[0].wasDrawn)) {
		F.line = 54;
		draw_262030(parent_259147[0]);
		F.line = 55;
		parent_259147[0].wasDrawn = true;
		}
		
		F.line = 57;
		current_259152[0] = {id: null, kind: null, text: null, code: null, kids: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0.0, textAlignVertical: 0.0}, imageName: null, cornerRadius: {Field0: 0, Field1: 0, Field2: 0, Field3: 0}, wasDrawn: false, editableText: false};
		F.line = 19;
		current_259152[0].id = nimCopy(null, makeNimstrLit("center"), NTI36040);
		F.line = 83;
		current_259152[0].kind = nimCopy(null, makeNimstrLit("group"), NTI36040);
		F.line = 60;
		current_259152[0].wasDrawn = false;
		F.line = 61;
		current_259152[0].transparency = 1.0000000000000000e+00;
		F.line = 62;
		if (group_stack_259151[0] != null) { group_stack_259151[0].push(current_259152[0]); } else { group_stack_259151[0] = [current_259152[0]]; };
		F.line = 20;
		box_265181(((parent_259147[0].box.w - 1.0000000000000000e+03) / 2.0000000000000000e+00), 0.0, 1.0000000000000000e+03, nimMax(((root_259148[0].box.h)|0), h_285137));
		F.line = 52;
		parent_259147[0] = (Tmp6 = HEX5BHEX5D_285143(group_stack_259151[0], 1), Tmp6)[0][Tmp6[1]];
		if (!(parent_259147[0].wasDrawn)) {
		F.line = 54;
		draw_262030(parent_259147[0]);
		F.line = 55;
		parent_259147[0].wasDrawn = true;
		}
		
		F.line = 57;
		current_259152[0] = {id: null, kind: null, text: null, code: null, kids: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0.0, textAlignVertical: 0.0}, imageName: null, cornerRadius: {Field0: 0, Field1: 0, Field2: 0, Field3: 0}, wasDrawn: false, editableText: false};
		F.line = 113;
		current_259152[0].id = nimCopy(null, [], NTI36040);
		F.line = 93;
		current_259152[0].kind = nimCopy(null, makeNimstrLit("rectangle"), NTI36040);
		F.line = 60;
		current_259152[0].wasDrawn = false;
		F.line = 61;
		current_259152[0].transparency = 1.0000000000000000e+00;
		F.line = 62;
		if (group_stack_259151[0] != null) { group_stack_259151[0].push(current_259152[0]); } else { group_stack_259151[0] = [current_259152[0]]; };
		F.line = 114;
		box_265181(0.0, 0.0, parent_259147[0].box.w, parent_259147[0].box.h);
		F.line = 115;
		fill_265254(makeNimstrLit("#FFFFFF"));
		if (!(current_259152[0].wasDrawn)) {
		F.line = 67;
		draw_262030(current_259152[0]);
		F.line = 68;
		current_259152[0].wasDrawn = true;
		}
		
		F.line = 70;
		pop_262365(group_stack_259151, 0);
		if ((1 < (group_stack_259151[0] != null ? group_stack_259151[0].length : 0))) {
		F.line = 72;
		current_259152[0] = (Tmp7 = HEX5BHEX5D_285143(group_stack_259151[0], 1), Tmp7)[0][Tmp7[1]];
		}
		else {
			F.line = 74;
			current_259152[0] = null;
		}
		
		if ((2 < (group_stack_259151[0] != null ? group_stack_259151[0].length : 0))) {
		F.line = 76;
		parent_259147[0] = (Tmp8 = HEX5BHEX5D_285143(group_stack_259151[0], 2), Tmp8)[0][Tmp8[1]];
		}
		else {
			F.line = 78;
			parent_259147[0] = null;
		}
		
		L9: do {
			F.line = 23;
			var i_285435 = 0;
			F.line = 23;
			var bar_285436 = null;
			var bar_285436_Idx = 0;
			F.line = 2417;
			var i_286193 = 0;
			L10: do {
				F.line = 2418;
					L11: while (true) {
					if (!(i_286193 < (bars_285080[0] != null ? bars_285080[0].length : 0))) break L11;
						F.line = 23;
						i_285435 = i_286193;
						F.line = 2419;
						bar_285436 = bars_285080[0]; bar_285436_Idx = chckIndx(i_286193, 0, bars_285080[0].length+0-1)-0;
						F.line = 52;
						parent_259147[0] = (Tmp12 = HEX5BHEX5D_285143(group_stack_259151[0], 1), Tmp12)[0][Tmp12[1]];
						if (!(parent_259147[0].wasDrawn)) {
						F.line = 54;
						draw_262030(parent_259147[0]);
						F.line = 55;
						parent_259147[0].wasDrawn = true;
						}
						
						F.line = 57;
						current_259152[0] = {id: null, kind: null, text: null, code: null, kids: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0.0, textAlignVertical: 0.0}, imageName: null, cornerRadius: {Field0: 0, Field1: 0, Field2: 0, Field3: 0}, wasDrawn: false, editableText: false};
						F.line = 24;
						current_259152[0].id = nimCopy(null, makeNimstrLit("bar"), NTI36040);
						F.line = 83;
						current_259152[0].kind = nimCopy(null, makeNimstrLit("group"), NTI36040);
						F.line = 60;
						current_259152[0].wasDrawn = false;
						F.line = 61;
						current_259152[0].transparency = 1.0000000000000000e+00;
						F.line = 62;
						if (group_stack_259151[0] != null) { group_stack_259151[0].push(current_259152[0]); } else { group_stack_259151[0] = [current_259152[0]]; };
						F.line = 25;
						box_265181(2.0000000000000000e+01, addInt(20, mulInt(60, i_285435)), 9.6000000000000000e+02, 6.0000000000000000e+01);
						if (overlap_263264(current_259152[0].screenBox, scroll_box_259153[0])) {
						F.line = 52;
						parent_259147[0] = (Tmp13 = HEX5BHEX5D_285143(group_stack_259151[0], 1), Tmp13)[0][Tmp13[1]];
						if (!(parent_259147[0].wasDrawn)) {
						F.line = 54;
						draw_262030(parent_259147[0]);
						F.line = 55;
						parent_259147[0].wasDrawn = true;
						}
						
						F.line = 57;
						current_259152[0] = {id: null, kind: null, text: null, code: null, kids: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0.0, textAlignVertical: 0.0}, imageName: null, cornerRadius: {Field0: 0, Field1: 0, Field2: 0, Field3: 0}, wasDrawn: false, editableText: false};
						F.line = 30;
						current_259152[0].id = nimCopy(null, makeNimstrLit("dec"), NTI36040);
						F.line = 93;
						current_259152[0].kind = nimCopy(null, makeNimstrLit("rectangle"), NTI36040);
						F.line = 60;
						current_259152[0].wasDrawn = false;
						F.line = 61;
						current_259152[0].transparency = 1.0000000000000000e+00;
						F.line = 62;
						if (group_stack_259151[0] != null) { group_stack_259151[0].push(current_259152[0]); } else { group_stack_259151[0] = [current_259152[0]]; };
						F.line = 31;
						box_265181(0.0, 0.0, 4.0000000000000000e+01, 4.0000000000000000e+01);
						F.line = 32;
						fill_265254(makeNimstrLit("#AEB5C0"));
						if (inside_263246(mouse_259154[0].pos, current_259152[0].screenBox)) {
						F.line = 35;
						fill_265254(makeNimstrLit("#FF4400"));
						}
						
						if (mouse_259154[0].click) {
						if (inside_263246(mouse_259154[0].pos, current_259152[0].screenBox)) {
						F.line = 38;
						bar_285436[bar_285436_Idx] = subInt(bar_285436[bar_285436_Idx], 1);
						if ((bar_285436[bar_285436_Idx] < 0)) {
						F.line = 39;
						bar_285436[bar_285436_Idx] = 0;
						}
						
						}
						
						}
						
						if (!(current_259152[0].wasDrawn)) {
						F.line = 67;
						draw_262030(current_259152[0]);
						F.line = 68;
						current_259152[0].wasDrawn = true;
						}
						
						F.line = 70;
						pop_262365(group_stack_259151, 0);
						if ((1 < (group_stack_259151[0] != null ? group_stack_259151[0].length : 0))) {
						F.line = 72;
						current_259152[0] = (Tmp14 = HEX5BHEX5D_285143(group_stack_259151[0], 1), Tmp14)[0][Tmp14[1]];
						}
						else {
							F.line = 74;
							current_259152[0] = null;
						}
						
						if ((2 < (group_stack_259151[0] != null ? group_stack_259151[0].length : 0))) {
						F.line = 76;
						parent_259147[0] = (Tmp15 = HEX5BHEX5D_285143(group_stack_259151[0], 2), Tmp15)[0][Tmp15[1]];
						}
						else {
							F.line = 78;
							parent_259147[0] = null;
						}
						
						F.line = 52;
						parent_259147[0] = (Tmp16 = HEX5BHEX5D_285143(group_stack_259151[0], 1), Tmp16)[0][Tmp16[1]];
						if (!(parent_259147[0].wasDrawn)) {
						F.line = 54;
						draw_262030(parent_259147[0]);
						F.line = 55;
						parent_259147[0].wasDrawn = true;
						}
						
						F.line = 57;
						current_259152[0] = {id: null, kind: null, text: null, code: null, kids: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0.0, textAlignVertical: 0.0}, imageName: null, cornerRadius: {Field0: 0, Field1: 0, Field2: 0, Field3: 0}, wasDrawn: false, editableText: false};
						F.line = 41;
						current_259152[0].id = nimCopy(null, makeNimstrLit("inc"), NTI36040);
						F.line = 93;
						current_259152[0].kind = nimCopy(null, makeNimstrLit("rectangle"), NTI36040);
						F.line = 60;
						current_259152[0].wasDrawn = false;
						F.line = 61;
						current_259152[0].transparency = 1.0000000000000000e+00;
						F.line = 62;
						if (group_stack_259151[0] != null) { group_stack_259151[0].push(current_259152[0]); } else { group_stack_259151[0] = [current_259152[0]]; };
						F.line = 42;
						box_265181(9.2000000000000000e+02, 0.0, 4.0000000000000000e+01, 4.0000000000000000e+01);
						F.line = 43;
						fill_265254(makeNimstrLit("#AEB5C0"));
						if (inside_263246(mouse_259154[0].pos, current_259152[0].screenBox)) {
						F.line = 46;
						fill_265254(makeNimstrLit("#FF4400"));
						}
						
						if (mouse_259154[0].click) {
						if (inside_263246(mouse_259154[0].pos, current_259152[0].screenBox)) {
						F.line = 49;
						bar_285436[bar_285436_Idx] = addInt(bar_285436[bar_285436_Idx], 1);
						if ((40 < bar_285436[bar_285436_Idx])) {
						F.line = 50;
						bar_285436[bar_285436_Idx] = 40;
						}
						
						}
						
						}
						
						if (!(current_259152[0].wasDrawn)) {
						F.line = 67;
						draw_262030(current_259152[0]);
						F.line = 68;
						current_259152[0].wasDrawn = true;
						}
						
						F.line = 70;
						pop_262365(group_stack_259151, 0);
						if ((1 < (group_stack_259151[0] != null ? group_stack_259151[0].length : 0))) {
						F.line = 72;
						current_259152[0] = (Tmp17 = HEX5BHEX5D_285143(group_stack_259151[0], 1), Tmp17)[0][Tmp17[1]];
						}
						else {
							F.line = 74;
							current_259152[0] = null;
						}
						
						if ((2 < (group_stack_259151[0] != null ? group_stack_259151[0].length : 0))) {
						F.line = 76;
						parent_259147[0] = (Tmp18 = HEX5BHEX5D_285143(group_stack_259151[0], 2), Tmp18)[0][Tmp18[1]];
						}
						else {
							F.line = 78;
							parent_259147[0] = null;
						}
						
						F.line = 52;
						parent_259147[0] = (Tmp19 = HEX5BHEX5D_285143(group_stack_259151[0], 1), Tmp19)[0][Tmp19[1]];
						if (!(parent_259147[0].wasDrawn)) {
						F.line = 54;
						draw_262030(parent_259147[0]);
						F.line = 55;
						parent_259147[0].wasDrawn = true;
						}
						
						F.line = 57;
						current_259152[0] = {id: null, kind: null, text: null, code: null, kids: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0.0, textAlignVertical: 0.0}, imageName: null, cornerRadius: {Field0: 0, Field1: 0, Field2: 0, Field3: 0}, wasDrawn: false, editableText: false};
						F.line = 52;
						current_259152[0].id = nimCopy(null, makeNimstrLit("bar"), NTI36040);
						F.line = 83;
						current_259152[0].kind = nimCopy(null, makeNimstrLit("group"), NTI36040);
						F.line = 60;
						current_259152[0].wasDrawn = false;
						F.line = 61;
						current_259152[0].transparency = 1.0000000000000000e+00;
						F.line = 62;
						if (group_stack_259151[0] != null) { group_stack_259151[0].push(current_259152[0]); } else { group_stack_259151[0] = [current_259152[0]]; };
						F.line = 53;
						box_265181(6.0000000000000000e+01, 0.0, 8.0000000000000000e+02, 4.0000000000000000e+01);
						F.line = 52;
						parent_259147[0] = (Tmp20 = HEX5BHEX5D_285143(group_stack_259151[0], 1), Tmp20)[0][Tmp20[1]];
						if (!(parent_259147[0].wasDrawn)) {
						F.line = 54;
						draw_262030(parent_259147[0]);
						F.line = 55;
						parent_259147[0].wasDrawn = true;
						}
						
						F.line = 57;
						current_259152[0] = {id: null, kind: null, text: null, code: null, kids: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0.0, textAlignVertical: 0.0}, imageName: null, cornerRadius: {Field0: 0, Field1: 0, Field2: 0, Field3: 0}, wasDrawn: false, editableText: false};
						F.line = 113;
						current_259152[0].id = nimCopy(null, [], NTI36040);
						F.line = 93;
						current_259152[0].kind = nimCopy(null, makeNimstrLit("rectangle"), NTI36040);
						F.line = 60;
						current_259152[0].wasDrawn = false;
						F.line = 61;
						current_259152[0].transparency = 1.0000000000000000e+00;
						F.line = 62;
						if (group_stack_259151[0] != null) { group_stack_259151[0].push(current_259152[0]); } else { group_stack_259151[0] = [current_259152[0]]; };
						F.line = 114;
						box_265181(0.0, 0.0, parent_259147[0].box.w, parent_259147[0].box.h);
						F.line = 115;
						fill_265254(makeNimstrLit("#F7F7F9"));
						if (!(current_259152[0].wasDrawn)) {
						F.line = 67;
						draw_262030(current_259152[0]);
						F.line = 68;
						current_259152[0].wasDrawn = true;
						}
						
						F.line = 70;
						pop_262365(group_stack_259151, 0);
						if ((1 < (group_stack_259151[0] != null ? group_stack_259151[0].length : 0))) {
						F.line = 72;
						current_259152[0] = (Tmp21 = HEX5BHEX5D_285143(group_stack_259151[0], 1), Tmp21)[0][Tmp21[1]];
						}
						else {
							F.line = 74;
							current_259152[0] = null;
						}
						
						if ((2 < (group_stack_259151[0] != null ? group_stack_259151[0].length : 0))) {
						F.line = 76;
						parent_259147[0] = (Tmp22 = HEX5BHEX5D_285143(group_stack_259151[0], 2), Tmp22)[0][Tmp22[1]];
						}
						else {
							F.line = 78;
							parent_259147[0] = null;
						}
						
						F.line = 52;
						parent_259147[0] = (Tmp23 = HEX5BHEX5D_285143(group_stack_259151[0], 1), Tmp23)[0][Tmp23[1]];
						if (!(parent_259147[0].wasDrawn)) {
						F.line = 54;
						draw_262030(parent_259147[0]);
						F.line = 55;
						parent_259147[0].wasDrawn = true;
						}
						
						F.line = 57;
						current_259152[0] = {id: null, kind: null, text: null, code: null, kids: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0.0, textAlignVertical: 0.0}, imageName: null, cornerRadius: {Field0: 0, Field1: 0, Field2: 0, Field3: 0}, wasDrawn: false, editableText: false};
						F.line = 56;
						current_259152[0].id = nimCopy(null, makeNimstrLit("barFg"), NTI36040);
						F.line = 93;
						current_259152[0].kind = nimCopy(null, makeNimstrLit("rectangle"), NTI36040);
						F.line = 60;
						current_259152[0].wasDrawn = false;
						F.line = 61;
						current_259152[0].transparency = 1.0000000000000000e+00;
						F.line = 62;
						if (group_stack_259151[0] != null) { group_stack_259151[0].push(current_259152[0]); } else { group_stack_259151[0] = [current_259152[0]]; };
						F.line = 57;
						box_265181(0.0, 0.0, mulInt(20, bar_285436[bar_285436_Idx]), 4.0000000000000000e+01);
						F.line = 58;
						fill_265254(makeNimstrLit("#46D15F"));
						if (!(current_259152[0].wasDrawn)) {
						F.line = 67;
						draw_262030(current_259152[0]);
						F.line = 68;
						current_259152[0].wasDrawn = true;
						}
						
						F.line = 70;
						pop_262365(group_stack_259151, 0);
						if ((1 < (group_stack_259151[0] != null ? group_stack_259151[0].length : 0))) {
						F.line = 72;
						current_259152[0] = (Tmp24 = HEX5BHEX5D_285143(group_stack_259151[0], 1), Tmp24)[0][Tmp24[1]];
						}
						else {
							F.line = 74;
							current_259152[0] = null;
						}
						
						if ((2 < (group_stack_259151[0] != null ? group_stack_259151[0].length : 0))) {
						F.line = 76;
						parent_259147[0] = (Tmp25 = HEX5BHEX5D_285143(group_stack_259151[0], 2), Tmp25)[0][Tmp25[1]];
						}
						else {
							F.line = 78;
							parent_259147[0] = null;
						}
						
						if (!(current_259152[0].wasDrawn)) {
						F.line = 67;
						draw_262030(current_259152[0]);
						F.line = 68;
						current_259152[0].wasDrawn = true;
						}
						
						F.line = 70;
						pop_262365(group_stack_259151, 0);
						if ((1 < (group_stack_259151[0] != null ? group_stack_259151[0].length : 0))) {
						F.line = 72;
						current_259152[0] = (Tmp26 = HEX5BHEX5D_285143(group_stack_259151[0], 1), Tmp26)[0][Tmp26[1]];
						}
						else {
							F.line = 74;
							current_259152[0] = null;
						}
						
						if ((2 < (group_stack_259151[0] != null ? group_stack_259151[0].length : 0))) {
						F.line = 76;
						parent_259147[0] = (Tmp27 = HEX5BHEX5D_285143(group_stack_259151[0], 2), Tmp27)[0][Tmp27[1]];
						}
						else {
							F.line = 78;
							parent_259147[0] = null;
						}
						
						}
						
						if (!(current_259152[0].wasDrawn)) {
						F.line = 67;
						draw_262030(current_259152[0]);
						F.line = 68;
						current_259152[0].wasDrawn = true;
						}
						
						F.line = 70;
						pop_262365(group_stack_259151, 0);
						if ((1 < (group_stack_259151[0] != null ? group_stack_259151[0].length : 0))) {
						F.line = 72;
						current_259152[0] = (Tmp28 = HEX5BHEX5D_285143(group_stack_259151[0], 1), Tmp28)[0][Tmp28[1]];
						}
						else {
							F.line = 74;
							current_259152[0] = null;
						}
						
						if ((2 < (group_stack_259151[0] != null ? group_stack_259151[0].length : 0))) {
						F.line = 76;
						parent_259147[0] = (Tmp29 = HEX5BHEX5D_285143(group_stack_259151[0], 2), Tmp29)[0][Tmp29[1]];
						}
						else {
							F.line = 78;
							parent_259147[0] = null;
						}
						
						F.line = 2420;
						i_286193 = addInt(i_286193, 1);
					}
			} while(false);
		} while(false);
		if (!(current_259152[0].wasDrawn)) {
		F.line = 67;
		draw_262030(current_259152[0]);
		F.line = 68;
		current_259152[0].wasDrawn = true;
		}
		
		F.line = 70;
		pop_262365(group_stack_259151, 0);
		if ((1 < (group_stack_259151[0] != null ? group_stack_259151[0].length : 0))) {
		F.line = 72;
		current_259152[0] = (Tmp30 = HEX5BHEX5D_285143(group_stack_259151[0], 1), Tmp30)[0][Tmp30[1]];
		}
		else {
			F.line = 74;
			current_259152[0] = null;
		}
		
		if ((2 < (group_stack_259151[0] != null ? group_stack_259151[0].length : 0))) {
		F.line = 76;
		parent_259147[0] = (Tmp31 = HEX5BHEX5D_285143(group_stack_259151[0], 2), Tmp31)[0][Tmp31[1]];
		}
		else {
			F.line = 78;
			parent_259147[0] = null;
		}
		
		if (!(current_259152[0].wasDrawn)) {
		F.line = 67;
		draw_262030(current_259152[0]);
		F.line = 68;
		current_259152[0].wasDrawn = true;
		}
		
		F.line = 70;
		pop_262365(group_stack_259151, 0);
		if ((1 < (group_stack_259151[0] != null ? group_stack_259151[0].length : 0))) {
		F.line = 72;
		current_259152[0] = (Tmp32 = HEX5BHEX5D_285143(group_stack_259151[0], 1), Tmp32)[0][Tmp32[1]];
		}
		else {
			F.line = 74;
			current_259152[0] = null;
		}
		
		if ((2 < (group_stack_259151[0] != null ? group_stack_259151[0].length : 0))) {
		F.line = 76;
		parent_259147[0] = (Tmp33 = HEX5BHEX5D_285143(group_stack_259151[0], 2), Tmp33)[0][Tmp33[1]];
		}
		else {
			F.line = 78;
			parent_259147[0] = null;
		}
		
	framePtr = F.prev;

	
}
var bars_285080 = [new_seq_285041(1000)];
L2: do {
	var i_285126 = [0];
	var bar_285127 = [0];
	var i_286120 = 0;
	L3: do {
			L4: while (true) {
			if (!(i_286120 < (bars_285080[0] != null ? bars_285080[0].length : 0))) break L4;
				i_285126[0] = i_286120;
				bar_285127[0] = bars_285080[0][i_286120];
				bars_285080[0][i_285126[0]] = rand_268305(40);
				i_286120 += 1;
			}
	} while(false);
} while(false);
draw_main_259158[0] = HEX3Aanonymous_285128;
